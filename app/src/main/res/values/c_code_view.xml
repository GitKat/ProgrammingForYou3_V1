<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="UNAssignment">Hello i am unsolved assignment!</string>
    <string name="Solved">Hello i am solved assignment!</string>
    
    
    
    <string name="pointers" formatted="false"> 
        <![CDATA[
<div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /> <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;num,i,count; <BR />&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(num&nbsp;=&nbsp;<font color=Maroon>1</font>;num&lt;=<font color=Maroon>100</font>;num++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count&nbsp;=&nbsp;<font color=Maroon>0</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>2</font>;i&lt;=num/<font color=Maroon>2</font>;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(num%i==<font color=Maroon>0</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(count==<font color=Maroon>0</font>&nbsp;&amp;&amp;&nbsp;num!=&nbsp;<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d&nbsp;"</font>,num); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
        
        ]]>
        
      </string>
    
     
    
  <string name="bubbleSort" formatted="false">
       <![CDATA[

<div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR /> <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;s,temp,i,j,a[<font color=Maroon>20</font>]; <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;total&nbsp;numbers&nbsp;of&nbsp;elements:&nbsp;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;s); <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;%d&nbsp;elements:&nbsp;"</font>,s); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;s;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;a[i]); <BR /> <BR />&nbsp;&nbsp;<font color=Green>//Bubble&nbsp;sorting&nbsp;algorithm</font> <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=s-<font color=Maroon>2</font>;i&gt;=<font color=Maroon>0</font>;i--){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;=i;j++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a[j]&gt;a[j+<font color=Maroon>1</font>]){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp=a[j]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[j]=a[j+<font color=Maroon>1</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[j+<font color=Maroon>1</font>]=temp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"After&nbsp;sorting:&nbsp;"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;s;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"&nbsp;%d"</font>,a[i]); <BR /> <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
   ]]>
        </string>
    
    
  <string name="quickSort" formatted="false">
       <![CDATA[
    
   <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /> <BR /><font color=Blue>void</font>&nbsp;quicksort(<font color=Blue>int</font>&nbsp;[<font color=Maroon>10</font>],<font color=Blue>int</font>,<font color=Blue>int</font>); <BR /> <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;x[<font color=Maroon>20</font>],size,i; <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;size&nbsp;of&nbsp;the&nbsp;array:&nbsp;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;size); <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;%d&nbsp;elements:&nbsp;"</font>,size); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;size;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;x[i]); <BR /> <BR />&nbsp;&nbsp;quicksort(x,<font color=Maroon>0</font>,size-<font color=Maroon>1</font>); <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Sorted&nbsp;elements:&nbsp;"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;size;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"&nbsp;%d"</font>,x[i]); <BR /> <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;quicksort(<font color=Blue>int</font>&nbsp;x[<font color=Maroon>10</font>],<font color=Blue>int</font>&nbsp;first,<font color=Blue>int</font>&nbsp;last){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;pivot,j,temp,i; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(first&lt;last){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pivot=first; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i=first; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j=last; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(i&lt;j){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(x[i]&lt;=x[pivot]&amp;&amp;i&lt;last) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(x[j]&gt;x[pivot]) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j--; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(i&lt;j){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp=x[i]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x[i]=x[j]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x[j]=temp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp=x[pivot]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x[pivot]=x[j]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x[j]=temp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;quicksort(x,first,j-<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;quicksort(x,j+<font color=Maroon>1</font>,last); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />}</div> 
    
    ]]>
        </string>
    
    <string name="insertionSort" formatted="false">
       <![CDATA[
    <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR /> <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i,j,s,temp,a[<font color=Maroon>20</font>]; <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;total&nbsp;elements:&nbsp;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;s); <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;%d&nbsp;elements:&nbsp;"</font>,s); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;s;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;a[i]); <BR /> <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>1</font>;i&lt;s;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp=a[i]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j=i-<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>((temp&lt;a[j])&amp;&amp;(j&gt;=<font color=Maroon>0</font>)){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[j+<font color=Maroon>1</font>]=a[j]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j=j-<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[j+<font color=Maroon>1</font>]=temp; <BR />&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"After&nbsp;sorting:&nbsp;"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;s;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"&nbsp;%d"</font>,a[i]); <BR /> <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
     ]]>
        </string>
        
    
    <string name="selectionSort" formatted="false">
       <![CDATA[
       <div>&nbsp;&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR /> <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;s,i,j,temp,a[<font color=Maroon>20</font>]; <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;total&nbsp;elements:&nbsp;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;s); <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;%d&nbsp;elements:&nbsp;"</font>,s); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;s;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;a[i]); <BR /> <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;s;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=i+<font color=Maroon>1</font>;j&lt;s;j++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a[i]&gt;a[j]){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp=a[i]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[i]=a[j]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[j]=temp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"After&nbsp;sorting&nbsp;is:&nbsp;"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;s;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"&nbsp;%d"</font>,a[i]); <BR /> <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
    ]]>
        </string>
    
     <string name="mergeSort" formatted="false">
       <![CDATA[
    <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>#define</font>&nbsp;MAX&nbsp;<font color=Maroon>50</font> <BR /> <BR /><font color=Blue>void</font>&nbsp;mergeSort(<font color=Blue>int</font>&nbsp;arr[],<font color=Blue>int</font>&nbsp;low,<font color=Blue>int</font>&nbsp;mid,<font color=Blue>int</font>&nbsp;high); <BR /><font color=Blue>void</font>&nbsp;partition(<font color=Blue>int</font>&nbsp;arr[],<font color=Blue>int</font>&nbsp;low,<font color=Blue>int</font>&nbsp;high); <BR /> <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;merge[MAX],i,n; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;the&nbsp;total&nbsp;number&nbsp;of&nbsp;elements:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;n); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;the&nbsp;elements&nbsp;which&nbsp;to&nbsp;be&nbsp;sort:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;n;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;merge[i]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;partition(merge,<font color=Maroon>0</font>,n-<font color=Maroon>1</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"After&nbsp;merge&nbsp;sorting&nbsp;elements&nbsp;are:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;n;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d&nbsp;"</font>,merge[i]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;partition(<font color=Blue>int</font>&nbsp;arr[],<font color=Blue>int</font>&nbsp;low,<font color=Blue>int</font>&nbsp;high){ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;mid; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(low&lt;high){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mid=(low+high)/<font color=Maroon>2</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;partition(arr,low,mid); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;partition(arr,mid+<font color=Maroon>1</font>,high); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mergeSort(arr,low,mid,high); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;mergeSort(<font color=Blue>int</font>&nbsp;arr[],<font color=Blue>int</font>&nbsp;low,<font color=Blue>int</font>&nbsp;mid,<font color=Blue>int</font>&nbsp;high){ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i,m,k,l,temp[MAX]; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;l=low; <BR />&nbsp;&nbsp;&nbsp;&nbsp;i=low; <BR />&nbsp;&nbsp;&nbsp;&nbsp;m=mid+<font color=Maroon>1</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>((l&lt;=mid)&amp;&amp;(m&lt;=high)){ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(arr[l]&lt;=arr[m]){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp[i]=arr[l]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;l++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp[i]=arr[m]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(l&gt;mid){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(k=m;k&lt;=high;k++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp[i]=arr[k]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(k=l;k&lt;=mid;k++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp[i]=arr[k]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(k=low;k&lt;=high;k++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[k]=temp[k]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />}</div>
     ]]>
        </string>
        
     
     
     
     
     
     
     
     
     
     
     
     
     
     
      <string name="sumofDigits" formatted="false">
       <![CDATA[
       
       <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;num,sum=<font color=Maroon>0</font>,r; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;a&nbsp;number:&nbsp;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;num); <BR />&nbsp;&nbsp;<font color=Blue>while</font>(num){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r=num%<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num=num/<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum=sum+r; <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Sum&nbsp;of&nbsp;digits&nbsp;of&nbsp;number:&nbsp;&nbsp;%d"</font>,sum); <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
     
     ]]>
        </string>
        
      <string name="power" formatted="false">
       <![CDATA[
       
       <div> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;pow,num,i=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;<font color=Blue>long</font>&nbsp;<font color=Blue>int</font>&nbsp;sum=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;a&nbsp;number:&nbsp;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;num); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;power:&nbsp;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;pow); <BR />&nbsp;&nbsp;<font color=Blue>while</font>(i&lt;=pow){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum=sum*num; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\n%d&nbsp;to&nbsp;the&nbsp;power&nbsp;%d&nbsp;is:&nbsp;%ld"</font>,num,pow,sum); <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />} <BR /> <BR /></div>
       
        ]]>
        </string>
        
      <string name="addTwoNumbers" formatted="false">
       <![CDATA[
       
       <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /> <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a,b; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;sum; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;any&nbsp;two&nbsp;integers:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d%d"</font>,&amp;a,&amp;b); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//sum&nbsp;=&nbsp;a&nbsp;-&nbsp;(-b);</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;sum&nbsp;=&nbsp;a&nbsp;-&nbsp;~b&nbsp;-<font color=Maroon>1</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Sum&nbsp;of&nbsp;two&nbsp;integers:&nbsp;%d"</font>,sum); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
       
        ]]>
        </string>
         <string name="findLargest" formatted="false">
       <![CDATA[
       
       <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;n,num,i; <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;big; <BR />&nbsp;&nbsp; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;the&nbsp;values&nbsp;of&nbsp;n:&nbsp;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;n); <BR />&nbsp; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Number&nbsp;%d"</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;big); <BR /> <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>2</font>;i&lt;=n;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Number&nbsp;%d:&nbsp;"</font>,i); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;num); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(big&lt;num) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;big=num; <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Largest&nbsp;number&nbsp;is:&nbsp;%d"</font>,big); <BR /> <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
       
        ]]>
        </string>
        
      <string name="genericRoot" formatted="false">
       <![CDATA[
       
       <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR /> <BR /><font color=Blue>long</font>&nbsp;<font color=Blue>int</font>&nbsp;num,sum,r; <BR />printf(<font color=Maroon>"\nEnter&nbsp;a&nbsp;number:-"</font>); <BR />scanf(<font color=Maroon>"%ld"</font>,&amp;num); <BR /> <BR /><font color=Blue>while</font>(num&gt;<font color=Maroon>10</font>){ <BR />sum=<font color=Maroon>0</font>; <BR /><font color=Blue>while</font>(num){ <BR />r=num%<font color=Maroon>10</font>; <BR />num=num/<font color=Maroon>10</font>; <BR />sum+=r; <BR />} <BR /><font color=Blue>if</font>(sum&gt;<font color=Maroon>10</font>) <BR />num=sum; <BR /><font color=Blue>else</font> <BR /><font color=Blue>break</font>; <BR />} <BR />printf(<font color=Maroon>"\nSum&nbsp;of&nbsp;the&nbsp;digits&nbsp;in&nbsp;single&nbsp;digit&nbsp;is:&nbsp;%ld"</font>,sum); <BR /><font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />} <BR /></div>
       
        ]]>
        </string>
         
        
      <string name="subtract" formatted="false">
       <![CDATA[
       
       <div>&nbsp;&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /> <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a,b; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;sum; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;any&nbsp;two&nbsp;integers:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d%d"</font>,&amp;a,&amp;b); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;sum&nbsp;=&nbsp;a&nbsp;+&nbsp;~b&nbsp;+&nbsp;<font color=Maroon>1</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Difference&nbsp;of&nbsp;two&nbsp;integers:&nbsp;%d"</font>,sum); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
       
        ]]>
        </string>
        
      <string name="largestAmongThree" formatted="false">
       <![CDATA[
       
       <div>&nbsp;&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a,b,c,big; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;3&nbsp;numbers:"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d&nbsp;%d&nbsp;%d"</font>,&amp;a,&amp;b,&amp;c); <BR /> <BR />&nbsp;&nbsp;big=(a&gt;b&amp;&amp;a&gt;c?a:b&gt;c?b:c); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nThe&nbsp;biggest&nbsp;number&nbsp;is:&nbsp;%d"</font>,big); <BR /> <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
       
        ]]>
        </string>
         <string name="primeFactor" formatted="false">
       <![CDATA[
       <div>&nbsp;&nbsp;&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;num,i=<font color=Maroon>1</font>,j,k; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;a&nbsp;number:"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;num); <BR />&nbsp;&nbsp;<font color=Blue>while</font>(i&lt;=num){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(num%i==<font color=Maroon>0</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(j&lt;=i){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(i%j==<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(k==<font color=Maroon>2</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n%d&nbsp;is&nbsp;a&nbsp;prime&nbsp;factor"</font>,i); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
       
       
        ]]>
        </string>
        
      <string name="countNumberOfDigits" formatted="false">
       <![CDATA[
       
       <div>&nbsp;&nbsp; <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;num,count=<font color=Maroon>0</font>; <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;a&nbsp;number:&nbsp;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;num); <BR /> <BR />&nbsp;&nbsp;<font color=Blue>while</font>(num){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num=num/<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count++; <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Total&nbsp;digits&nbsp;is:&nbsp;&nbsp;%d"</font>,count); <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
       
        ]]>
        </string>
        
        <string name="printAcii" formatted="false">
       <![CDATA[
       
       <div>&nbsp;&nbsp; <BR /> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /> <BR /> <BR /> <BR /><font color=Blue>int</font>&nbsp;main(){ <BR /> <BR />&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i; <BR />&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=<font color=Maroon>255</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"ASCII&nbsp;value&nbsp;of&nbsp;character&nbsp;%c:&nbsp;%d\n"</font>,i,i); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
       
        ]]>
        </string>
        
        <string name="checkStrong" formatted="false">
       <![CDATA[
       
       <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;num,i,f,r,sum=<font color=Maroon>0</font>,temp; <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;a&nbsp;number:&nbsp;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;num); <BR />&nbsp; <BR />&nbsp;&nbsp;temp=num; <BR />&nbsp;&nbsp;<font color=Blue>while</font>(num){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i=<font color=Maroon>1</font>,f=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r=num%<font color=Maroon>10</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(i&lt;=r){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f=f*i; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum=sum+f; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num=num/<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>if</font>(sum==temp) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d&nbsp;is&nbsp;a&nbsp;strong&nbsp;number"</font>,temp); <BR />&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d&nbsp;is&nbsp;not&nbsp;a&nbsp;strong&nbsp;number"</font>,temp); <BR /> <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
       
        ]]>
        </string>
        
        <string name="extractDigits" formatted="false">
       <![CDATA[
       
       <div>&nbsp;&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;num,temp,factor=<font color=Maroon>1</font>; <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;a&nbsp;number:&nbsp;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;num); <BR /> <BR />&nbsp;&nbsp;temp=num; <BR />&nbsp;&nbsp;<font color=Blue>while</font>(temp){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp=temp/<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;factor&nbsp;=&nbsp;factor*<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Each&nbsp;digits&nbsp;of&nbsp;given&nbsp;number&nbsp;are:&nbsp;"</font>); <BR />&nbsp;&nbsp;<font color=Blue>while</font>(factor&gt;<font color=Maroon>1</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;factor&nbsp;=&nbsp;factor/<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d&nbsp;"</font>,num/factor); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num&nbsp;=&nbsp;num&nbsp;%&nbsp;factor; <BR />&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
    
       
        ]]>
        </string>
     
     
    <string name="checkEven" formatted="false">
       <![CDATA[
       
       <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /> <BR /><font color=Blue>int</font>&nbsp;main(){ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;number; <BR />&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;any&nbsp;integer:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;number); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(number&nbsp;%&nbsp;<font color=Maroon>2</font>&nbsp;==<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d&nbsp;is&nbsp;even&nbsp;number."</font>,number); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d&nbsp;is&nbsp;odd&nbsp;number."</font>,number); <BR />&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR /> <BR />}</div>
       
        ]]>
        </string>
        
    <string name="ncr" formatted="false">
       <![CDATA[
       
       <div>&nbsp;&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;n,r,ncr; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;any&nbsp;two&nbsp;numbers-&gt;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d&nbsp;%d"</font>,&amp;n,&amp;r); <BR />&nbsp;&nbsp;ncr=fact(n)/(fact(r)*fact(n-r)); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"The&nbsp;NCR&nbsp;factor&nbsp;of&nbsp;%d&nbsp;and&nbsp;%d&nbsp;is&nbsp;%d"</font>,n,r,ncr); <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />} <BR />&nbsp;<font color=Blue>int</font>&nbsp;fact(<font color=Blue>int</font>&nbsp;n){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;<font color=Blue>while</font>(n!=<font color=Maroon>0</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i=i*n; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n--; <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;i; <BR />&nbsp;}</div>
       
        ]]>
        </string>
        
    <string name="multiplication" formatted="false">
       <![CDATA[
       
       <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;r,i,j,k; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;the&nbsp;number&nbsp;range:&nbsp;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;r); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>1</font>;i&lt;=r;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>1</font>;j&lt;=<font color=Maroon>10</font>;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d*%d=%d&nbsp;"</font>,i,j,i*j); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
       
        ]]>
        </string>
        
    <string name="generatefibo" formatted="false">
       <![CDATA[
       
       
<div> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;k,r; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>long</font>&nbsp;<font color=Blue>int</font>&nbsp;i=<font color=Maroon>0l</font>,j=<font color=Maroon>1</font>,f; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//Taking&nbsp;maximum&nbsp;numbers&nbsp;form&nbsp;user</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;the&nbsp;number&nbsp;range:"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;r); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"FIBONACCI&nbsp;SERIES:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%ld&nbsp;%ld"</font>,i,j);&nbsp;<font color=Green>//printing&nbsp;firts&nbsp;two&nbsp;values.</font> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(k=<font color=Maroon>2</font>;k&lt;r;k++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;f=i+j; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i=j; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j=f; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"&nbsp;%ld"</font>,j); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
       
       
        ]]>
        </string>
        
    <string name="generatefiboUsingArray" formatted="false">
       <![CDATA[
       <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i,range; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>long</font>&nbsp;<font color=Blue>int</font>&nbsp;arr[<font color=Maroon>40</font>]; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;the&nbsp;number&nbsp;range:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;range); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;arr[<font color=Maroon>0</font>]=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;arr[<font color=Maroon>1</font>]=<font color=Maroon>1</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>2</font>;i&lt;range;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[i]&nbsp;=&nbsp;arr[i-<font color=Maroon>1</font>]&nbsp;+&nbsp;arr[i-<font color=Maroon>2</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Fibonacci&nbsp;series&nbsp;is:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;range;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%ld&nbsp;"</font>,arr[i]); <BR />&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
         ]]>
        </string>
     
     
     
     
     
     
    
    
    
     
        
     <string name="additionOfTwoMatrix" formatted="false">
       <![CDATA[
     <div>&nbsp;&nbsp; <BR /> <BR /> <BR />&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a[<font color=Maroon>3</font>][<font color=Maroon>3</font>],b[<font color=Maroon>3</font>][<font color=Maroon>3</font>],c[<font color=Maroon>3</font>][<font color=Maroon>3</font>],i,j; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;the&nbsp;First&nbsp;matrix-&gt;"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>3</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;<font color=Maroon>3</font>;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;a[i][j]); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;the&nbsp;Second&nbsp;matrix-&gt;"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>3</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;<font color=Maroon>3</font>;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;b[i][j]); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nThe&nbsp;First&nbsp;matrix&nbsp;is\n"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>3</font>;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;<font color=Maroon>3</font>;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d\t"</font>,a[i][j]); <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nThe&nbsp;Second&nbsp;matrix&nbsp;is\n"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>3</font>;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;<font color=Maroon>3</font>;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d\t"</font>,b[i][j]); <BR />&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>3</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;<font color=Maroon>3</font>;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c[i][j]=a[i][j]+b[i][j]; <BR />&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\nThe&nbsp;Addition&nbsp;of&nbsp;two&nbsp;matrix&nbsp;is\n"</font>); <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>3</font>;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;<font color=Maroon>3</font>;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d\t"</font>,c[i][j]); <BR />&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
     ]]>
        </string>
        
      <string name="subtractionOfTwoMatrix" formatted="false">
       <![CDATA[
     <div>&nbsp;&nbsp; <BR /> <BR /> <BR />&nbsp;&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a[<font color=Maroon>3</font>][<font color=Maroon>3</font>],b[<font color=Maroon>3</font>][<font color=Maroon>3</font>],c[<font color=Maroon>3</font>][<font color=Maroon>3</font>],i,j; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;the&nbsp;First&nbsp;matrix-&gt;"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>3</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;<font color=Maroon>3</font>;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;a[i][j]); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;the&nbsp;Second&nbsp;matrix-&gt;"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>3</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;<font color=Maroon>3</font>;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;b[i][j]); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nThe&nbsp;First&nbsp;matrix&nbsp;is\n"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>3</font>;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;<font color=Maroon>3</font>;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d\t"</font>,a[i][j]); <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nThe&nbsp;Second&nbsp;matrix&nbsp;is\n"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>3</font>;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;<font color=Maroon>3</font>;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d\t"</font>,b[i][j]); <BR />&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>3</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;<font color=Maroon>3</font>;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c[i][j]=a[i][j]-b[i][j]; <BR />&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\nThe&nbsp;Subtraction&nbsp;of&nbsp;two&nbsp;matrix&nbsp;is\n"</font>); <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>3</font>;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;<font color=Maroon>3</font>;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d\t"</font>,c[i][j]); <BR />&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>

     
     ]]>
        </string>
        
      
         <string name="matrixMultiplication" formatted="false">
       <![CDATA[
     <div>&nbsp;&nbsp; <BR /> <BR /> <BR />&nbsp;&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a[<font color=Maroon>5</font>][<font color=Maroon>5</font>],b[<font color=Maroon>5</font>][<font color=Maroon>5</font>],c[<font color=Maroon>5</font>][<font color=Maroon>5</font>],i,j,k,sum=<font color=Maroon>0</font>,m,n,o,p; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;the&nbsp;row&nbsp;and&nbsp;column&nbsp;of&nbsp;first&nbsp;matrix"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d&nbsp;%d"</font>,&amp;m,&amp;n); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;the&nbsp;row&nbsp;and&nbsp;column&nbsp;of&nbsp;second&nbsp;matrix"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d&nbsp;%d"</font>,&amp;o,&amp;p); <BR />&nbsp;&nbsp;<font color=Blue>if</font>(n!=o){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Matrix&nbsp;mutiplication&nbsp;is&nbsp;not&nbsp;possible"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\nColumn&nbsp;of&nbsp;first&nbsp;matrix&nbsp;must&nbsp;be&nbsp;same&nbsp;as&nbsp;row&nbsp;of&nbsp;second&nbsp;matrix"</font>); <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>else</font>{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;the&nbsp;First&nbsp;matrix-&gt;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;m;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;n;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;a[i][j]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;the&nbsp;Second&nbsp;matrix-&gt;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;o;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;p;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;b[i][j]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\nThe&nbsp;First&nbsp;matrix&nbsp;is\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;m;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;n;j++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d\t"</font>,a[i][j]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\nThe&nbsp;Second&nbsp;matrix&nbsp;is\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;o;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;p;j++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d\t"</font>,b[i][j]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;m;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;p;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c[i][j]=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;m;i++){&nbsp;<font color=Green>//row&nbsp;of&nbsp;first&nbsp;matrix</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;p;j++){&nbsp;&nbsp;<font color=Green>//column&nbsp;of&nbsp;second&nbsp;matrix</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(k=<font color=Maroon>0</font>;k&lt;n;k++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum=sum+a[i][k]*b[k][j]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c[i][j]=sum; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nThe&nbsp;multiplication&nbsp;of&nbsp;two&nbsp;matrix&nbsp;is\n"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;m;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;p;j++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d\t"</font>,c[i][j]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>

     
     ]]>
        </string>
        
         
         <string name="transpose" formatted="false">
       <![CDATA[
     <div>&nbsp;&nbsp; <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a[<font color=Maroon>10</font>][<font color=Maroon>10</font>],b[<font color=Maroon>10</font>][<font color=Maroon>10</font>],i,j,k=<font color=Maroon>0</font>,m,n; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;the&nbsp;row&nbsp;and&nbsp;column&nbsp;of&nbsp;matrix"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d&nbsp;%d"</font>,&amp;m,&amp;n); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;the&nbsp;First&nbsp;matrix-&gt;"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;m;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;n;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;a[i][j]); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nThe&nbsp;matrix&nbsp;is\n"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;m;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;m;j++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d\t"</font>,a[i][j]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;m;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;n;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b[i][j]=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;m;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;n;j++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b[i][j]=a[j][i]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n%d"</font>,b[i][j]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\n\nTraspose&nbsp;of&nbsp;a&nbsp;matrix&nbsp;is&nbsp;-&gt;&nbsp;"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;m;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;m;j++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d\t"</font>,b[i][j]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>


     
     ]]>
        </string>
        
         
         <string name="sumOfDiagonal" formatted="false">
       <![CDATA[
     <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /> <BR /><font color=Blue>int</font>&nbsp;main(){ <BR /> <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a[<font color=Maroon>10</font>][<font color=Maroon>10</font>],i,j,sum=<font color=Maroon>0</font>,m,n; <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;the&nbsp;row&nbsp;and&nbsp;column&nbsp;of&nbsp;matrix:&nbsp;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d&nbsp;%d"</font>,&amp;m,&amp;n); <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;the&nbsp;elements&nbsp;of&nbsp;matrix:&nbsp;"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;m;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;n;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;a[i][j]); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nThe&nbsp;matrix&nbsp;is\n"</font>); <BR /> <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;m;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;m;j++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d\t"</font>,a[i][j]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;} <BR />&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;m;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;n;j++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(i==j) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum=sum+a[i][j]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;} <BR />&nbsp;printf(<font color=Maroon>"\n\nSum&nbsp;of&nbsp;the&nbsp;diagonal&nbsp;elements&nbsp;of&nbsp;a&nbsp;matrix&nbsp;is:&nbsp;%d"</font>,sum); <BR /> <BR />&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
     ]]>
        </string>
        
         
         <string name="lowerTraiangular" formatted="false">
       <![CDATA[
     <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a[<font color=Maroon>3</font>][<font color=Maroon>3</font>],i,j; <BR />&nbsp;&nbsp;<font color=Blue>float</font>&nbsp;determinant=<font color=Maroon>0</font>; <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;the&nbsp;9&nbsp;elements&nbsp;of&nbsp;matrix:&nbsp;"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>3</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;<font color=Maroon>3</font>;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;a[i][j]); <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nThe&nbsp;matrix&nbsp;is\n"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>3</font>;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;<font color=Maroon>3</font>;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d\t"</font>,a[i][j]); <BR />&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\nSetting&nbsp;zero&nbsp;in&nbsp;upper&nbsp;triangular&nbsp;matrix\n"</font>); <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>3</font>;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;<font color=Maroon>3</font>;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(i&lt;=j) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d\t"</font>,a[i][j]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d\t"</font>,<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;} <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
     ]]>
        </string>
        
         
         <string name="upperTriangular" formatted="false">
       <![CDATA[
     <div>&nbsp;&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a[<font color=Maroon>3</font>][<font color=Maroon>3</font>],i,j; <BR />&nbsp;&nbsp;<font color=Blue>float</font>&nbsp;determinant=<font color=Maroon>0</font>; <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;the&nbsp;9&nbsp;elements&nbsp;of&nbsp;matrix:&nbsp;"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>3</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;<font color=Maroon>3</font>;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;a[i][j]); <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nThe&nbsp;matrix&nbsp;is\n"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>3</font>;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;<font color=Maroon>3</font>;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d\t"</font>,a[i][j]); <BR />&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\nSetting&nbsp;zero&nbsp;in&nbsp;upper&nbsp;triangular&nbsp;matrix\n"</font>); <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>3</font>;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;<font color=Maroon>3</font>;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(i&gt;=j) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d\t"</font>,a[i][j]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d\t"</font>,<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;} <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
     ]]>
        </string>
        
     
         
         
         <string name="findLargestinArray" formatted="false">
       <![CDATA[
       
       <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a[<font color=Maroon>50</font>],size,i,big; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;array:&nbsp;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;size); <BR />&nbsp;&nbsp;printf("\nEnter&nbsp;%d&nbsp;elements&nbsp;in&nbsp;to&nbsp;the&nbsp;array:&nbsp;”,&nbsp;size); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;size;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;a[i]); <BR />&nbsp;&nbsp;big=a[<font color=Maroon>0</font>]; <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>1</font>;i&lt;size;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(big&lt;a[i]) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;big=a[i]; <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nBiggest:&nbsp;%d"</font>,big); <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
        ]]>
        </string>
        <string name="findSecondLargest" formatted="false">
       <![CDATA[
       
       
		<div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a[<font color=Maroon>50</font>],size,i,j=<font color=Maroon>0</font>,big,secondbig; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;array:&nbsp;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;size); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;%d&nbsp;elements&nbsp;in&nbsp;to&nbsp;the&nbsp;array:&nbsp;"</font>,&nbsp;size); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;size;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;a[i]); <BR />&nbsp; <BR />&nbsp;&nbsp;big=a[<font color=Maroon>0</font>]; <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>1</font>;i&lt;size;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(big&lt;a[i]){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;big=a[i]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j&nbsp;=&nbsp;i; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;secondbig=a[size-j-<font color=Maroon>1</font>]; <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>1</font>;i&lt;size;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(secondbig&nbsp;&lt;a[i]&nbsp;&amp;&amp;&nbsp;j&nbsp;!=&nbsp;i) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;secondbig&nbsp;=a[i]; <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Second&nbsp;biggest:&nbsp;%d"</font>,&nbsp;secondbig); <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
       
        ]]>
        </string>
        <string name="findSecondSmallest" formatted="false">
       <![CDATA[
       
       <div>&nbsp;&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a[<font color=Maroon>50</font>],size,i,j=<font color=Maroon>0</font>,small,secondsmall; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;the&nbsp;size&nbsp;of&nbsp;the&nbsp;array:&nbsp;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;size); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;%d&nbsp;elements&nbsp;in&nbsp;to&nbsp;the&nbsp;array:&nbsp;"</font>,&nbsp;size); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;size;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;a[i]); <BR /> <BR />&nbsp;&nbsp;small=a[<font color=Maroon>0</font>]; <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>1</font>;i&lt;size;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(small&gt;a[i]){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;small=a[i]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j&nbsp;=&nbsp;i; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;secondsmall=a[size-j-<font color=Maroon>1</font>]; <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>1</font>;i&lt;size;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(secondsmall&nbsp;&gt;&nbsp;a[i]&nbsp;&amp;&amp;&nbsp;j&nbsp;!=&nbsp;i) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;secondsmall&nbsp;=a[i]; <BR />&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Second&nbsp;smallest:&nbsp;%d"</font>,&nbsp;secondsmall); <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
        ]]>
        </string>
        <string name="removeDuplicate" formatted="false">
       <![CDATA[
       <div>&nbsp;&nbsp;&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;arr[<font color=Maroon>50</font>]; <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;*p; <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i,j,k,size,n; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;size&nbsp;of&nbsp;the&nbsp;array:&nbsp;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;n); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;%d&nbsp;elements&nbsp;into&nbsp;the&nbsp;array:&nbsp;"</font>,n); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;n;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;arr[i]); <BR />&nbsp;&nbsp;size=n; <BR />&nbsp;&nbsp;p=arr; <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;size;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;size;j++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(i==j){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>continue</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(*(p+i)==*(p+j)){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k=j; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size--; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(k&nbsp;&lt;&nbsp;size){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*(p+k)=*(p+k+<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nThe&nbsp;array&nbsp;after&nbsp;removing&nbsp;duplicates&nbsp;is:&nbsp;"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&nbsp;&lt;&nbsp;size;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"&nbsp;%d"</font>,arr[i]); <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />} <BR /> <BR /></div>
       
        ]]>
        </string>
        
        <string name="deleteElement" formatted="false">
       <![CDATA[
       <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a[<font color=Maroon>50</font>],i,pos,size; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;size&nbsp;of&nbsp;the&nbsp;array:&nbsp;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;size); <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;%d&nbsp;elements&nbsp;in&nbsp;to&nbsp;the&nbsp;array:&nbsp;"</font>,size); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;size;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;a[i]); <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;position&nbsp;where&nbsp;to&nbsp;delete:&nbsp;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;pos); <BR /> <BR />&nbsp;&nbsp;i=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;<font color=Blue>while</font>(i!=pos-<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;<font color=Blue>while</font>(i&lt;<font color=Maroon>10</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[i]=a[i+<font color=Maroon>1</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;size--; <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;size;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"&nbsp;%d"</font>,a[i]); <BR /> <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />} <BR /></div>
       
        ]]>
        </string>
        
        <string name="insertElemet" formatted="false">
       <![CDATA[
       <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR /><font color=Blue>int</font>&nbsp;a[<font color=Maroon>50</font>],size,num,i,pos,temp; <BR />printf(<font color=Maroon>"\nEnter&nbsp;size&nbsp;of&nbsp;the&nbsp;array:&nbsp;"</font>); <BR />scanf(<font color=Maroon>"%d"</font>,&amp;size); <BR />printf(<font color=Maroon>"\nEnter&nbsp;%d&nbsp;elements&nbsp;in&nbsp;to&nbsp;the&nbsp;array:&nbsp;"</font>,size); <BR /><font color=Blue>for</font>(i=<font color=Maroon>0</font>;iscanf(<font color=Maroon>"%d"</font>,&amp;a[i]); <BR />printf(<font color=Maroon>"\nEnter&nbsp;position&nbsp;and&nbsp;number&nbsp;to&nbsp;insert:&nbsp;"</font>); <BR />scanf(<font color=Maroon>"%d&nbsp;%d"</font>,&amp;pos,&amp;num); <BR />i=<font color=Maroon>0</font>; <BR /><font color=Blue>while</font>(i!=pos-<font color=Maroon>1</font>) <BR />i++; <BR />temp=size++; <BR /><font color=Blue>while</font>(i{ <BR />a[temp]=a[temp-<font color=Maroon>1</font>]; <BR />temp--; <BR />} <BR />a[i]=num; <BR /><font color=Blue>for</font>(i=<font color=Maroon>0</font>;iprintf(<font color=Maroon>"&nbsp;%d"</font>,a[i]); <BR /><font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />} <BR /></div>
       
        ]]>
        </string>
         
         
          <string name="swapTwoNumberswithoutthird" formatted="false">
       <![CDATA[
       <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /> <BR /><font color=Blue>int</font>&nbsp;main(){ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a=<font color=Maroon>5</font>,b=<font color=Maroon>10</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//process&nbsp;one</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;a=b+a; <BR />&nbsp;&nbsp;&nbsp;&nbsp;b=a-b; <BR />&nbsp;&nbsp;&nbsp;&nbsp;a=a-b; <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"a=&nbsp;%d&nbsp;&nbsp;b=&nbsp;&nbsp;%d"</font>,a,b); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//process&nbsp;two</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;a=<font color=Maroon>5</font>;b=<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;a=a+b-(b=a); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\na=&nbsp;%d&nbsp;&nbsp;b=&nbsp;&nbsp;%d"</font>,a,b); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//process&nbsp;three</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;a=<font color=Maroon>5</font>;b=<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;a=a^b; <BR />&nbsp;&nbsp;&nbsp;&nbsp;b=a^b; <BR />&nbsp;&nbsp;&nbsp;&nbsp;a=b^a; <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\na=&nbsp;%d&nbsp;&nbsp;b=&nbsp;&nbsp;%d"</font>,a,b); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//process&nbsp;four</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;a=<font color=Maroon>5</font>;b=<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;a=b-~a-<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;b=a+~b+<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;a=a+~b+<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\na=&nbsp;%d&nbsp;&nbsp;b=&nbsp;&nbsp;%d"</font>,a,b); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//process&nbsp;five</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;a=<font color=Maroon>5</font>,b=<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;a=b+a,b=a-b,a=a-b; <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\na=&nbsp;%d&nbsp;&nbsp;b=&nbsp;&nbsp;%d"</font>,a,b); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
            ]]>
        </string>
        
          
          <string name="swapingOfStrings" formatted="false">
       <![CDATA[
       <div> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i=<font color=Maroon>0</font>,j=<font color=Maroon>0</font>,k=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;str1[<font color=Maroon>20</font>],str2[<font color=Maroon>20</font>],temp[<font color=Maroon>20</font>]; <BR />&nbsp;&nbsp;puts(<font color=Maroon>"Enter&nbsp;first&nbsp;string"</font>); <BR />&nbsp;&nbsp;gets(str1); <BR />&nbsp;&nbsp;puts(<font color=Maroon>"Enter&nbsp;second&nbsp;string"</font>); <BR />&nbsp;&nbsp;gets(str2); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Before&nbsp;swaping&nbsp;the&nbsp;strings&nbsp;are\n"</font>); <BR />&nbsp;&nbsp;puts(str1); <BR />&nbsp;&nbsp;puts(str2); <BR />&nbsp;&nbsp;<font color=Blue>while</font>(str1[i]!=<font color=Maroon>\0</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp[j++]=str1[i++]; <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;temp[j]=<font color=Maroon>\0</font>; <BR />&nbsp;&nbsp;i=<font color=Maroon>0</font>,j=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;<font color=Blue>while</font>(str2[i]!=<font color=Maroon>\0</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str1[j++]=str2[i++]; <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;str1[j]=<font color=Maroon>\0</font>; <BR />&nbsp;&nbsp;i=<font color=Maroon>0</font>,j=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;<font color=Blue>while</font>(temp[i]!=<font color=Maroon>\0</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str2[j++]=temp[i++]; <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;str2[j]=<font color=Maroon>\0</font>; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"After&nbsp;swaping&nbsp;the&nbsp;strings&nbsp;are\n"</font>); <BR />&nbsp;&nbsp;puts(str1); <BR />&nbsp;&nbsp;puts(str2); <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>

       
            ]]>
        </string>
        
          
          <string name="swappingOfTwoArrays" formatted="false">
       <![CDATA[
       <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a[<font color=Maroon>10</font>],b[<font color=Maroon>10</font>],c[<font color=Maroon>10</font>],i; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;First&nbsp;array-&gt;"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>10</font>;i++) <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;a[i]); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;Second&nbsp;array-&gt;"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>10</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;b[i]); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Arrays&nbsp;before&nbsp;swapping"</font>); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nFirst&nbsp;array-&gt;"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>10</font>;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d"</font>,a[i]); <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nSecond&nbsp;array-&gt;"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>10</font>;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d"</font>,b[i]); <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>10</font>;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//write&nbsp;any&nbsp;swapping&nbsp;technique</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c[i]=a[i]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[i]=b[i]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b[i]=c[i]; <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nArrays&nbsp;after&nbsp;swapping"</font>); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nFirst&nbsp;array-&gt;"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>10</font>;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d"</font>,a[i]); <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nSecond&nbsp;array-&gt;"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>10</font>;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d"</font>,b[i]); <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
            ]]>
        </string>
         
          
          <string name="conversionUpperToLower" formatted="false">
              <![CDATA[
              <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;<font color=Blue>string</font>.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;str[<font color=Maroon>20</font>]; <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;any&nbsp;string-&gt;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%s"</font>,str); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"The&nbsp;string&nbsp;is-&gt;%s"</font>,str); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=strlen(str);i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(str[i]&gt;=<font color=Maroon>65</font>&amp;&amp;str[i]&lt;=<font color=Maroon>90</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str[i]=str[i]+<font color=Maroon>32</font>; <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nThe&nbsp;string&nbsp;in&nbsp;lower&nbsp;case&nbsp;is-&gt;%s"</font>,str); <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
              
               ]]>
        </string>
        <string name="conversionLowerToUpper" formatted="false">
            <![CDATA[
              <div> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;str[<font color=Maroon>20</font>]; <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;any&nbsp;string-&gt;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%s"</font>,str); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"The&nbsp;string&nbsp;is-&gt;%s"</font>,str); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=strlen(str);i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(str[i]&gt;=<font color=Maroon>97</font>&amp;&amp;str[i]&lt;=<font color=Maroon>122</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str[i]=str[i]-<font color=Maroon>32</font>; <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nThe&nbsp;string&nbsp;in&nbsp;lowercase&nbsp;is-&gt;%s"</font>,str); <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />} <BR /> <BR /></div>
               ]]>
        </string>
        <string name="printInitials" formatted="false">
            <![CDATA[
              <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;str[<font color=Maroon>20</font>]; <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;a&nbsp;string:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;gets(str); <BR />&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%c"</font>,*str); <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(str[i]!=<font color=Maroon>\0</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(str[i]==<font color=Maroon>&nbsp;</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%c"</font>,*(str+i)); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />} <BR /></div>
               ]]>
        </string>
        <string name="palindrome" formatted="false" > 
            <![CDATA[
              <div>&nbsp;#<font color=Blue>include</font>&lt;<font color=Blue>string</font>.h&gt; <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;*str,*rev; <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i,j; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;a&nbsp;string:"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%s"</font>,str); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=strlen(str)-<font color=Maroon>1</font>,j=<font color=Maroon>0</font>;i&gt;=<font color=Maroon>0</font>;i--,j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rev[j]=str[i]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rev[j]=<font color=Maroon>\0</font>; <BR />&nbsp;&nbsp;<font color=Blue>if</font>(strcmp(rev,str)) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\nThe&nbsp;string&nbsp;is&nbsp;not&nbsp;a&nbsp;palindrome"</font>); <BR />&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\nThe&nbsp;string&nbsp;is&nbsp;a&nbsp;palindrome"</font>); <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
               ]]>
        </string>
        <string name="sortingString" formatted="false"> 
            <![CDATA[
              <div> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i,j,n; <BR />&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;str[<font color=Maroon>20</font>][<font color=Maroon>20</font>],temp[<font color=Maroon>20</font>]; <BR />&nbsp;&nbsp;puts(<font color=Maroon>"Enter&nbsp;the&nbsp;no.&nbsp;of&nbsp;string&nbsp;to&nbsp;be&nbsp;sorted"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;n); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=n;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gets(str[i]); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=n;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=i+<font color=Maroon>1</font>;j&lt;=n;j++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(strcmp(str[i],str[j])&gt;<font color=Maroon>0</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strcpy(temp,str[i]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strcpy(str[i],str[j]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strcpy(str[j],temp); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;printf(<font color=Maroon>"The&nbsp;sorted&nbsp;string\n"</font>); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=n;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;puts(str[i]); <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
               ]]>
        </string>
        <string name="strcpy" formatted="false"> 
            <![CDATA[
              <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /> <BR /> <BR /> <BR /><font color=Blue>void</font>&nbsp;stringCopy(<font color=Blue>char</font>[],<font color=Blue>char</font>[]); <BR /> <BR /><font color=Blue>int</font>&nbsp;main(){ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;str1[<font color=Maroon>100</font>],str2[<font color=Maroon>100</font>]; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;any&nbsp;string:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%s"</font>,str1); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;stringCopy(str1,str2); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"After&nbsp;copying:&nbsp;%s"</font>,str2); <BR />&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;stringCopy(<font color=Blue>char</font>&nbsp;str1[],<font color=Blue>char</font>&nbsp;str2[]){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i=<font color=Maroon>0</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(str1[i]!=<font color=Maroon>\0</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str2[i]&nbsp;=&nbsp;str1[i]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;str2[i]=<font color=Maroon>\0</font>; <BR />}</div>
               ]]>
        </string>
        <string name="concatenationPointer" formatted="false" > 
            <![CDATA[
              <div>&nbsp;&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i=<font color=Maroon>0</font>,j=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;*str1,*str2,*str3; <BR />&nbsp;&nbsp;puts(<font color=Maroon>"Enter&nbsp;first&nbsp;string"</font>); <BR />&nbsp;&nbsp;gets(str1); <BR />&nbsp;&nbsp;puts(<font color=Maroon>"Enter&nbsp;second&nbsp;string"</font>); <BR />&nbsp;&nbsp;gets(str2); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Before&nbsp;concatenation&nbsp;the&nbsp;strings&nbsp;are\n"</font>); <BR />&nbsp;&nbsp;puts(str1); <BR />&nbsp;&nbsp;puts(str2); <BR />&nbsp;&nbsp;<font color=Blue>while</font>(*str1){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str3[i++]=*str1++; <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>while</font>(*str2){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str3[i++]=*str2++; <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;str3[i]=<font color=Maroon>\0</font>; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"After&nbsp;concatenation&nbsp;the&nbsp;strings&nbsp;are\n"</font>); <BR />&nbsp;&nbsp;puts(str3); <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
               ]]>
        </string>
       <string name="concatenation" formatted="false" > 
           <![CDATA[
              <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i=<font color=Maroon>0</font>,j=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;str1[<font color=Maroon>20</font>],str2[<font color=Maroon>20</font>]; <BR />&nbsp;&nbsp;puts(<font color=Maroon>"Enter&nbsp;first&nbsp;string"</font>); <BR />&nbsp;&nbsp;gets(str1); <BR />&nbsp;&nbsp;puts(<font color=Maroon>"Enter&nbsp;second&nbsp;string"</font>); <BR />&nbsp;&nbsp;gets(str2); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Before&nbsp;concatenation&nbsp;the&nbsp;strings&nbsp;are\n"</font>); <BR />&nbsp;&nbsp;puts(str1); <BR />&nbsp;&nbsp;puts(str2); <BR />&nbsp;&nbsp;<font color=Blue>while</font>(str1[i]!=<font color=Maroon>\0</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>while</font>(str2[j]!=<font color=Maroon>\0</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;str1[i++]=str2[j++]; <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;str1[i]=<font color=Maroon>\0</font>; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"After&nbsp;concatenation&nbsp;the&nbsp;strings&nbsp;are\n"</font>); <BR />&nbsp;&nbsp;puts(str1); <BR />&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
               ]]>
        </string>
       <string name="stringToAscii" formatted="false" > 
           <![CDATA[
              <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /> <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;str[<font color=Maroon>100</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i=<font color=Maroon>0</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;any&nbsp;string:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%s"</font>,str); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"ASCII&nbsp;values&nbsp;of&nbsp;each&nbsp;characters&nbsp;of&nbsp;given&nbsp;string:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(str[i]) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d&nbsp;"</font>,str[i++]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
               ]]>
        </string>
      <string name="reverseRecursion" formatted="false" >
          <![CDATA[
              <div>&nbsp;&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>#define</font>&nbsp;MAX&nbsp;<font color=Maroon>100</font> <BR /><font color=Blue>char</font>*&nbsp;getReverse(<font color=Blue>char</font>[]); <BR /> <BR /><font color=Blue>int</font>&nbsp;main(){ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;str[MAX],*rev; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;&nbsp;any&nbsp;string:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%s"</font>,str); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;rev&nbsp;=&nbsp;getReverse(str); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Reversed&nbsp;string&nbsp;is:&nbsp;%s"</font>,rev); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />} <BR /> <BR /><font color=Blue>char</font>*&nbsp;getReverse(<font color=Blue>char</font>&nbsp;str[]){ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>static</font>&nbsp;<font color=Blue>int</font>&nbsp;i=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>static</font>&nbsp;<font color=Blue>char</font>&nbsp;rev[MAX]; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(*str){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getReverse(str+<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rev[i++]&nbsp;=&nbsp;*str; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;rev; <BR />}</div>
               ]]>
        </string>
     <string name="countingString" formatted="false"> 
         <![CDATA[
              <div>&nbsp; <BR />#<font color=Blue>include</font>&nbsp;&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;isvowel(<font color=Blue>char</font>&nbsp;chk); <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;text[<font color=Maroon>1000</font>],&nbsp;chk; <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;count; <BR />&nbsp;&nbsp;count&nbsp;=&nbsp;<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;<font color=Blue>while</font>((text[count]&nbsp;=&nbsp;getchar())&nbsp;!=&nbsp;<font color=Maroon>\n</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count++; <BR />&nbsp;&nbsp;text[count]&nbsp;=&nbsp;<font color=Maroon>\0</font>; <BR />&nbsp;&nbsp;count&nbsp;=&nbsp;<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;<font color=Blue>while</font>&nbsp;((chk&nbsp;=&nbsp;text[count])&nbsp;!=&nbsp;<font color=Maroon>\0</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>&nbsp;(isvowel(chk)){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>((chk&nbsp;=&nbsp;text[++count])&nbsp;&amp;&amp;&nbsp;isvowel(chk)){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;putchar(text[count&nbsp;-<font color=Maroon>1</font>]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;putchar(text[count]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;putchar(<font color=Maroon>\n</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;++count; <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />} <BR /><font color=Blue>int</font>&nbsp;isvowel(<font color=Blue>char</font>&nbsp;chk){ <BR />&nbsp;&nbsp;<font color=Blue>if</font>(chk&nbsp;==&nbsp;<font color=Maroon>a</font>&nbsp;||&nbsp;chk&nbsp;==&nbsp;<font color=Maroon>e</font>&nbsp;||&nbsp;chk&nbsp;==&nbsp;<font color=Maroon>i</font>&nbsp;||&nbsp;chk&nbsp;==&nbsp;<font color=Maroon>o</font>&nbsp;||&nbsp;chk&nbsp;==&nbsp;<font color=Maroon>u</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />} <BR /> <BR /></div>
               ]]>
        </string>
        
     
     
     
     
     
     
     
     <string name="binary2deci" formatted="false"> 
         <![CDATA[
         <div>&nbsp;&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /> <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>long</font>&nbsp;<font color=Blue>int</font>&nbsp;binaryNumber,decimalNumber=<font color=Maroon>0</font>,j=<font color=Maroon>1</font>,remainder; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;any&nbsp;number&nbsp;any&nbsp;binary&nbsp;number:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%ld"</font>,&amp;binaryNumber); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(binaryNumber!=<font color=Maroon>0</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;remainder=binaryNumber%<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;decimalNumber=decimalNumber+remainder*j; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j=j*<font color=Maroon>2</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binaryNumber=binaryNumber/<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Equivalent&nbsp;decimal&nbsp;value:&nbsp;%ld"</font>,decimalNumber); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
         ]]>
        </string>
         <string name="binary2octal" formatted="false"> 
         <![CDATA[
         <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>long</font>&nbsp;<font color=Blue>int</font>&nbsp;binaryNumber,octalNumber=<font color=Maroon>0</font>,j=<font color=Maroon>1</font>,remainder; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;any&nbsp;number&nbsp;any&nbsp;binary&nbsp;number:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%ld"</font>,&amp;binaryNumber); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(binaryNumber!=<font color=Maroon>0</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;remainder=binaryNumber%<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;octalNumber=octalNumber+remainder*j; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j=j*<font color=Maroon>2</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binaryNumber=binaryNumber/<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Equivalent&nbsp;octal&nbsp;value:&nbsp;%lo"</font>,octalNumber); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
         ]]>
        </string>
         <string name="binary2hexa" formatted="false"> 
         <![CDATA[
         <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>long</font>&nbsp;<font color=Blue>int</font>&nbsp;binaryNumber,hexadecimalNumber=<font color=Maroon>0</font>,j=<font color=Maroon>1</font>,remainder; <BR />&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;any&nbsp;number&nbsp;any&nbsp;binary&nbsp;number:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%ld"</font>,&amp;binaryNumber); <BR />&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(binaryNumber!=<font color=Maroon>0</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;remainder=binaryNumber%<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;hexadecimalNumber=hexadecimalNumber+remainder*j; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j=j*<font color=Maroon>2</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binaryNumber=binaryNumber/<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Equivalent&nbsp;hexadecimal&nbsp;value:&nbsp;%lX"</font>,hexadecimalNumber); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
         ]]>
        </string>
        <string name="deci2binary" formatted="false"> 
         <![CDATA[
         <div>&nbsp;&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /> <BR /> <BR /><font color=Blue>int</font>&nbsp;main(){ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>long</font>&nbsp;<font color=Blue>int</font>&nbsp;decimalNumber,remainder,quotient; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;binaryNumber[<font color=Maroon>100</font>],i=<font color=Maroon>1</font>,j; <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;any&nbsp;decimal&nbsp;number:&nbsp;"</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%ld"</font>,&amp;decimalNumber); <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;quotient&nbsp;=&nbsp;decimalNumber; <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(quotient!=<font color=Maroon>0</font>){ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;binaryNumber[i++]=&nbsp;quotient&nbsp;%&nbsp;<font color=Maroon>2</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;quotient&nbsp;=&nbsp;quotient&nbsp;/&nbsp;<font color=Maroon>2</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Equivalent&nbsp;binary&nbsp;value&nbsp;of&nbsp;decimal&nbsp;number&nbsp;%d:&nbsp;"</font>,decimalNumber); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j&nbsp;=&nbsp;i&nbsp;-<font color=Maroon>1</font>&nbsp;;j&gt;&nbsp;<font color=Maroon>0</font>;j--) <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d"</font>,binaryNumber[j]); <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR /> <BR />}</div>
         ]]>
        </string>
         <string name="deci2octal" formatted="false"> 
         <![CDATA[
         <div>&nbsp;&nbsp;&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /> <BR /><font color=Blue>int</font>&nbsp;main(){ <BR /> <BR />&nbsp;&nbsp;<font color=Blue>long</font>&nbsp;<font color=Blue>int</font>&nbsp;decimalNumber,remainder,quotient; <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;octalNumber[<font color=Maroon>100</font>],i=<font color=Maroon>1</font>,j; <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;any&nbsp;decimal&nbsp;number:&nbsp;"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%ld"</font>,&amp;decimalNumber); <BR /> <BR />&nbsp;&nbsp;quotient&nbsp;=&nbsp;decimalNumber; <BR /> <BR />&nbsp;&nbsp;<font color=Blue>while</font>(quotient!=<font color=Maroon>0</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;octalNumber[i++]=&nbsp;quotient&nbsp;%&nbsp;<font color=Maroon>8</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;quotient&nbsp;=&nbsp;quotient&nbsp;/&nbsp;<font color=Maroon>8</font>; <BR />&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;printf(<font color=Maroon>"Equivalent&nbsp;octal&nbsp;value&nbsp;of&nbsp;decimal&nbsp;number&nbsp;%d:&nbsp;"</font>,decimalNumber); <BR />&nbsp;&nbsp;<font color=Blue>for</font>(j&nbsp;=&nbsp;i&nbsp;-<font color=Maroon>1</font>&nbsp;;j&gt;&nbsp;<font color=Maroon>0</font>;j--) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d"</font>,octalNumber[j]); <BR /> <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
         ]]>
        </string>
         <string name="deci2hexa" formatted="false"> 
         <![CDATA[
         <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>long</font>&nbsp;<font color=Blue>int</font>&nbsp;decimalNumber,remainder,quotient; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i=<font color=Maroon>1</font>,j,temp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;hexadecimalNumber[<font color=Maroon>100</font>]; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;any&nbsp;decimal&nbsp;number:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%ld"</font>,&amp;decimalNumber); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;quotient&nbsp;=&nbsp;decimalNumber; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(quotient!=<font color=Maroon>0</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;quotient&nbsp;%&nbsp;<font color=Maroon>16</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//To&nbsp;convert&nbsp;integer&nbsp;into&nbsp;character</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(&nbsp;temp&nbsp;&lt;&nbsp;<font color=Maroon>10</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=temp&nbsp;+&nbsp;<font color=Maroon>48</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;temp&nbsp;+&nbsp;<font color=Maroon>55</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hexadecimalNumber[i++]=&nbsp;temp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;quotient&nbsp;=&nbsp;quotient&nbsp;/&nbsp;<font color=Maroon>16</font>; <BR />&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Equivalent&nbsp;hexadecimal&nbsp;value&nbsp;of&nbsp;decimal&nbsp;number&nbsp;%d:&nbsp;"</font>,decimalNumber); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j&nbsp;=&nbsp;i&nbsp;-<font color=Maroon>1</font>&nbsp;;j&gt;&nbsp;<font color=Maroon>0</font>;j--) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%c"</font>,hexadecimalNumber[j]); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
         ]]>
        </string>
        <string name="octal2binary" formatted="false"> 
         <![CDATA[
         <div> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>#define</font>&nbsp;MAX&nbsp;<font color=Maroon>1000</font> <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;octalNumber[MAX]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>long</font>&nbsp;<font color=Blue>int</font>&nbsp;i=<font color=Maroon>0</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;any&nbsp;octal&nbsp;number:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%s"</font>,octalNumber); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Equivalent&nbsp;binary&nbsp;value:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(octalNumber[i]){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>switch</font>(octalNumber[i]){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>0</font>:&nbsp;printf(<font color=Maroon>"000"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1</font>:&nbsp;printf(<font color=Maroon>"001"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>2</font>:&nbsp;printf(<font color=Maroon>"010"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>3</font>:&nbsp;printf(<font color=Maroon>"011"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>4</font>:&nbsp;printf(<font color=Maroon>"100"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>5</font>:&nbsp;printf(<font color=Maroon>"101"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>6</font>:&nbsp;printf(<font color=Maroon>"110"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>7</font>:&nbsp;printf(<font color=Maroon>"111"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>default</font>:&nbsp;&nbsp;printf(<font color=Maroon>"\nInvalid&nbsp;octal&nbsp;digit&nbsp;%c&nbsp;"</font>,octalNumber[i]);&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
         ]]>
        </string>
         <string name="octal2deci" formatted="false"> 
         <![CDATA[
         <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;math.h&gt; <BR /> <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>long</font>&nbsp;<font color=Blue>int</font>&nbsp;octal,decimal&nbsp;=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i=<font color=Maroon>0</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;any&nbsp;octal&nbsp;number:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%ld"</font>,&amp;octal); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(octal!=<font color=Maroon>0</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;decimal&nbsp;=&nbsp;decimal&nbsp;+&nbsp;(octal&nbsp;%&nbsp;<font color=Maroon>10</font>)&nbsp;*&nbsp;pow(<font color=Maroon>8</font>,i++); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;octal&nbsp;=&nbsp;octal/<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Equivalent&nbsp;decimal&nbsp;value:&nbsp;%ld"</font>,decimal); <BR /> <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
         ]]>
        </string>
        <string name="hexa2binary" formatted="false"> 
         <![CDATA[
         <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>#define</font>&nbsp;MAX&nbsp;<font color=Maroon>1000</font> <BR /> <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;binaryNumber[MAX],hexaDecimal[MAX]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>long</font>&nbsp;<font color=Blue>int</font>&nbsp;i=<font color=Maroon>0</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;any&nbsp;hexadecimal&nbsp;number:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%s"</font>,hexaDecimal); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\nEquivalent&nbsp;binary&nbsp;value:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(hexaDecimal[i]){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>switch</font>(hexaDecimal[i]){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>0</font>:&nbsp;printf(<font color=Maroon>"0000"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1</font>:&nbsp;printf(<font color=Maroon>"0001"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>2</font>:&nbsp;printf(<font color=Maroon>"0010"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>3</font>:&nbsp;printf(<font color=Maroon>"0011"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>4</font>:&nbsp;printf(<font color=Maroon>"0100"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>5</font>:&nbsp;printf(<font color=Maroon>"0101"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>6</font>:&nbsp;printf(<font color=Maroon>"0110"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>7</font>:&nbsp;printf(<font color=Maroon>"0111"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>8</font>:&nbsp;printf(<font color=Maroon>"1000"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>9</font>:&nbsp;printf(<font color=Maroon>"1001"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>A</font>:&nbsp;printf(<font color=Maroon>"1010"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>B</font>:&nbsp;printf(<font color=Maroon>"1011"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>C</font>:&nbsp;printf(<font color=Maroon>"1100"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>D</font>:&nbsp;printf(<font color=Maroon>"1101"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>E</font>:&nbsp;printf(<font color=Maroon>"1110"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>F</font>:&nbsp;printf(<font color=Maroon>"1111"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>a</font>:&nbsp;printf(<font color=Maroon>"1010"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>b</font>:&nbsp;printf(<font color=Maroon>"1011"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>c</font>:&nbsp;printf(<font color=Maroon>"1100"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>d</font>:&nbsp;printf(<font color=Maroon>"1101"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>e</font>:&nbsp;printf(<font color=Maroon>"1110"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>f</font>:&nbsp;printf(<font color=Maroon>"1111"</font>);&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>default</font>:&nbsp;&nbsp;printf(<font color=Maroon>"\nInvalid&nbsp;hexadecimal&nbsp;digit&nbsp;%c&nbsp;"</font>,hexaDecimal[i]);&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
         ]]>
        </string>
        
        
        
        <string name="complex" formatted="false"> 
         <![CDATA[
         <div> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR /><font color=Blue>int</font>&nbsp;a,b; <BR /> <BR />printf(<font color=Maroon>"Enter&nbsp;any&nbsp;complex&nbsp;number&nbsp;in&nbsp;the&nbsp;format&nbsp;a+ib:&nbsp;"</font>); <BR />scanf(<font color=Maroon>"%d+i%d"</font>,&amp;a,&amp;b); <BR /> <BR />printf(<font color=Maroon>"Real&nbsp;part&nbsp;is:&nbsp;%d"</font>,a&nbsp;); <BR />printf(<font color=Maroon>"\nImaginary&nbsp;part&nbsp;is:&nbsp;%d"</font>,b); <BR /> <BR /><font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR /> <BR />}</div>
          ]]>
        </string>
        
        <string name="printComplex" formatted="false"> 
         <![CDATA[
         <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR /><font color=Blue>int</font>&nbsp;a,b; <BR /> <BR />printf(<font color=Maroon>"Enter&nbsp;the&nbsp;real&nbsp;part&nbsp;of&nbsp;complex&nbsp;number:&nbsp;"</font>); <BR />scanf(<font color=Maroon>"%d"</font>,&amp;a); <BR /> <BR />printf(<font color=Maroon>"Enter&nbsp;the&nbsp;imaginary&nbsp;part&nbsp;of&nbsp;complex&nbsp;number:&nbsp;"</font>); <BR />scanf(<font color=Maroon>"%d"</font>,&amp;b); <BR /> <BR />printf(<font color=Maroon>"\nComplex&nbsp;number&nbsp;is:&nbsp;%d%+di"</font>,a,b&nbsp;); <BR /> <BR /><font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR /> <BR />}</div>
          ]]>
        </string>
        
        <string name="addComplex" formatted="false"> 
         <![CDATA[
         <div>#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a,b,c,d,x,y; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;the&nbsp;first&nbsp;complex&nbsp;number:"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d%d"</font>,&amp;a,&amp;b); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;the&nbsp;second&nbsp;complex&nbsp;number:"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d%d"</font>,&amp;c,&amp;d); <BR />&nbsp;&nbsp;<font color=Blue>if</font>(b&lt;<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d-i\n"</font>,a-b); <BR />&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"d+i\n"</font>,a+b); <BR />&nbsp;&nbsp;<font color=Blue>if</font>(d&lt;<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"d-i\n"</font>,c-d); <BR />&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d+i\n"</font>,c+d); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nADDITION&nbsp;"</font>); <BR />&nbsp;&nbsp;x=a+c; <BR />&nbsp;&nbsp;y=b+d; <BR />&nbsp;&nbsp;<font color=Blue>if</font>(y&gt;<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d-i%d"</font>,x,-y); <BR />&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d+i%d"</font>,x,+y); <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\n\nSUBTRACTION&nbsp;"</font>); <BR />&nbsp;&nbsp;x=a-c; <BR />&nbsp;&nbsp;y=b-d; <BR />&nbsp;&nbsp;<font color=Blue>if</font>(y&lt;<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d-i%d"</font>,x,-y); <BR />&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d+i%d"</font>,x,+y); <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
          ]]>
        </string>
         
        
     <string name="lcm" formatted="false"> 
         <![CDATA[
         <div>&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;n1,n2,x,y; <BR />&nbsp;&nbsp;printf(<font color=Maroon>"\nEnter&nbsp;two&nbsp;numbers:"</font>); <BR />&nbsp;&nbsp;scanf(<font color=Maroon>"%d&nbsp;%d"</font>,&amp;n1,&amp;n2); <BR />&nbsp;&nbsp;x=n1,y=n2; <BR />&nbsp;&nbsp;<font color=Blue>while</font>(n1!=n2){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(n1&gt;n2) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n1=n1-n2; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n2=n2-n1; <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;printf(<font color=Maroon>"L.C.M=%d"</font>,x*y/n1); <BR />&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
         
         ]]>
        </string>
     
      <string name="gcd" formatted="false"> 
         <![CDATA[
     
        <div>&nbsp;&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /> <BR /><font color=Blue>int</font>&nbsp;main(){ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;x,y,m,i; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Insert&nbsp;any&nbsp;two&nbsp;number:&nbsp;"</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d%d"</font>,&amp;x,&amp;y); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(x&gt;y) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m=y; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m=x; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=m;i&gt;=<font color=Maroon>1</font>;i--){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(x%i==<font color=Maroon>0</font>&amp;&amp;y%i==<font color=Maroon>0</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\nHCF&nbsp;of&nbsp;two&nbsp;number&nbsp;is&nbsp;:&nbsp;%d"</font>,i)&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
         ]]>
        </string>
        
      <string name="hcf" formatted="false"> 
         <![CDATA[
     
        <div>&nbsp;&nbsp; <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR /><font color=Blue>int</font>&nbsp;n1,n2; <BR />printf(<font color=Maroon>"\nEnter&nbsp;two&nbsp;numbers:"</font>); <BR />scanf(<font color=Maroon>"%d&nbsp;%d"</font>,&amp;n1,&amp;n2); <BR /><font color=Blue>while</font>(n1!=n2){ <BR /><font color=Blue>if</font>(n1&gt;=n2-<font color=Maroon>1</font>) <BR />n1=n1-n2; <BR /><font color=Blue>else</font> <BR />n2=n2-n1; <BR />} <BR />printf(<font color=Maroon>"\nGCD=%d"</font>,n1); <BR /><font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />}</div>
         ]]>
        </string>
        
      <string name="linearSearch" formatted="false"> 
         <![CDATA[
         <div>&nbsp;&nbsp; <BR />&nbsp;#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a[<font color=Maroon>10</font>],i,n,m,c=<font color=Maroon>0</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;the&nbsp;size&nbsp;of&nbsp;an&nbsp;array:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;n); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;the&nbsp;elements&nbsp;of&nbsp;the&nbsp;array:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=n-<font color=Maroon>1</font>;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;a[i]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;the&nbsp;number&nbsp;to&nbsp;be&nbsp;search:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;m); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=n-<font color=Maroon>1</font>;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a[i]==m){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(c==<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"The&nbsp;number&nbsp;is&nbsp;not&nbsp;in&nbsp;the&nbsp;list"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"The&nbsp;number&nbsp;is&nbsp;found"</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />} <BR /></div>
         ]]>
        </string>
            
     
     <string name="binarySearch" formatted="false"> 
         <![CDATA[
         <div>&nbsp;&nbsp; <BR /> <BR /> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR /><font color=Blue>int</font>&nbsp;main(){ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a[<font color=Maroon>10</font>],i,n,m,c=<font color=Maroon>0</font>,l,u,mid; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;the&nbsp;size&nbsp;of&nbsp;an&nbsp;array:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;n); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;the&nbsp;elements&nbsp;in&nbsp;ascending&nbsp;order:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;n;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;a[i]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;the&nbsp;number&nbsp;to&nbsp;be&nbsp;search:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;m); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;l=<font color=Maroon>0</font>,u=n-<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(l&lt;=u){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mid=(l+u)/<font color=Maroon>2</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(m==a[mid]){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(m&lt;a[mid]){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;u=mid-<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;l=mid+<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(c==<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"The&nbsp;number&nbsp;is&nbsp;not&nbsp;found."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"The&nbsp;number&nbsp;is&nbsp;found."</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />} <BR /></div>
         ]]>
        </string>
        
     
     <string name="SAss1" formatted="false"> 
         <![CDATA[
        <div><strong>Question:</strong> <BR /><font color=Maroon></font> <BR />Write&nbsp;a&nbsp;C&nbsp;program&nbsp;that&nbsp;reads&nbsp;a&nbsp;fixed&nbsp;point&nbsp;real&nbsp;number&nbsp;in&nbsp;a&nbsp;character&nbsp;array&nbsp;<font color=Blue>and</font>&nbsp;then <BR />displays&nbsp;rightmost&nbsp;digit&nbsp;of&nbsp;the&nbsp;integral&nbsp;part&nbsp;of&nbsp;number. <BR /> <BR /><strong>Ans:</strong> <BR />A&nbsp;C&nbsp;program&nbsp;to&nbsp;display&nbsp;rightmost&nbsp;digit&nbsp;of&nbsp;the&nbsp;integral&nbsp;part&nbsp;of&nbsp;a&nbsp;read&nbsp;real&nbsp;number: <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR /> <BR /><font color=Blue>void</font>&nbsp;main() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;a[<font color=Maroon>10</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i; <BR />&nbsp;&nbsp;&nbsp;&nbsp;clrscr(); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"enter&nbsp;a&nbsp;fixed&nbsp;point&nbsp;real&nbsp;no.&nbsp;:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%s"</font>,a); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;i=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(a[i]!=<font color=Maroon>.</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%c"</font>,a[--i]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />}&nbsp;</div>
        <BR />
        <div><strong>Question:</strong> <BR /><font color=Maroon></font>Output&nbsp;the&nbsp;number&nbsp;x&nbsp;=&nbsp;<font color=Maroon>56</font><font color=Maroon>.1624</font>&nbsp;under&nbsp;the&nbsp;following&nbsp;format&nbsp;specification <BR />(i)&nbsp;&nbsp;&nbsp;printf&nbsp;(“%<font color=Maroon>7</font><font color=Maroon>.2f</font>”,&nbsp;x) <BR />(ii)&nbsp;&nbsp;printf&nbsp;(%f”,&nbsp;x) <BR />(iii)&nbsp;printf(“<font color=Maroon>8</font><font color=Maroon>.2</font>e”,&nbsp;x) <BR />(iv)&nbsp;&nbsp;printf(“%e”,&nbsp;x) <BR /> <BR /><strong>Ans:</strong> <BR />The&nbsp;output&nbsp;of&nbsp;number&nbsp;<font color=Maroon>56</font><font color=Maroon>.1624</font>&nbsp;under&nbsp;various&nbsp;format <BR />specification&nbsp;is: <BR />(i)&nbsp;&nbsp;&nbsp;<font color=Maroon>56</font><font color=Maroon>.16</font> <BR />(ii)&nbsp;&nbsp;<font color=Maroon>56</font><font color=Maroon>.162399</font> <BR />(iii)&nbsp;<font color=Maroon>5</font><font color=Maroon>.62e+01</font> <BR />(iv)&nbsp;&nbsp;<font color=Maroon>5</font><font color=Maroon>.616240e+01</font>&nbsp;</div>
     	<BR />
     	<div><strong>Question:</strong> <BR /><font color=Maroon></font>&nbsp;Write&nbsp;a&nbsp;C&nbsp;program&nbsp;that&nbsp;uses&nbsp;‘<font color=Blue>for</font>’&nbsp;construct&nbsp;to&nbsp;find&nbsp;the&nbsp;sum&nbsp;of&nbsp;the&nbsp;following&nbsp;harmonic&nbsp;series <BR /><font color=Blue>for</font>&nbsp;a&nbsp;given&nbsp;value&nbsp;of&nbsp;n&nbsp;<font color=Blue>and</font>&nbsp;display&nbsp;the&nbsp;sum. <BR /><font color=Maroon>1</font>&nbsp;+&nbsp;<font color=Maroon>1</font>/<font color=Maroon>2</font>&nbsp;+<font color=Maroon>1</font>/<font color=Maroon>3</font>&nbsp;+...&nbsp;+&nbsp;<font color=Maroon>1</font>/n <BR /> <BR /><strong>Ans:</strong> <BR />A&nbsp;C&nbsp;program&nbsp;to&nbsp;find&nbsp;<font color=Blue>and</font>&nbsp;display&nbsp;sum&nbsp;of&nbsp;given&nbsp;harmonic&nbsp;series&nbsp;is&nbsp;listed&nbsp;below: <BR /> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR /><font color=Blue>void</font>&nbsp;main() <BR />{&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i,n; <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>float</font>&nbsp;sum=<font color=Maroon>0</font><font color=Maroon>.0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"enter&nbsp;the&nbsp;value&nbsp;of&nbsp;n:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;n); <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>1</font>;i&lt;=n;i++) <BR />&nbsp;&nbsp;&nbsp;sum=sum+(<font color=Blue>float</font>)<font color=Maroon>1</font>/i; <BR />&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"sum&nbsp;of&nbsp;the&nbsp;series&nbsp;upto&nbsp;%d&nbsp;=&nbsp;%f"</font>,n,sum); <BR />&nbsp;&nbsp;&nbsp;getch(); <BR />}&nbsp;</div>
       <BR />
       <div><strong>Question:</strong> <BR />Write&nbsp;a&nbsp;C&nbsp;program&nbsp;fragment&nbsp;<font color=Blue>using</font>&nbsp;“<font color=Blue>do</font>...<font color=Blue>while</font>”&nbsp;construct&nbsp;to&nbsp;print&nbsp;out&nbsp;even&nbsp;numbers&nbsp;between&nbsp;<font color=Maroon>10</font>&nbsp;to&nbsp;<font color=Maroon>100</font>&nbsp;making&nbsp;sure&nbsp;that&nbsp;two&nbsp;numbers&nbsp;are <BR />written&nbsp;per&nbsp;line. <BR /> <BR /><strong>Answer:</strong> <BR />A&nbsp;C&nbsp;program&nbsp;to&nbsp;print&nbsp;even&nbsp;numbers&nbsp;between&nbsp;<font color=Maroon>10</font>&nbsp;to&nbsp;<font color=Maroon>100</font>&nbsp;<font color=Blue>using</font>&nbsp;“<font color=Blue>do</font>-<font color=Blue>while</font>”&nbsp;construct: <BR /> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR /><font color=Blue>void</font>&nbsp;main() <BR />{&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i,k; <BR />&nbsp;&nbsp;&nbsp;&nbsp;clrscr(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;k=<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;i=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>do</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(k&gt;<font color=Maroon>10</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d"</font>,k); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(i%<font color=Maroon>2</font>==<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k=k+<font color=Maroon>2</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<font color=Blue>while</font>(k&lt;<font color=Maroon>100</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />}&nbsp;</div>
     
       <BR />
       <div><strong>Question:</strong> <BR />Given&nbsp;an&nbsp;integer,&nbsp;write&nbsp;a&nbsp;C&nbsp;program&nbsp;that&nbsp;displays&nbsp;the&nbsp;number&nbsp;as&nbsp;follows: <BR /> <BR />first&nbsp;line&nbsp;&nbsp;:&nbsp;&nbsp;All&nbsp;digits&nbsp;of&nbsp;integer <BR />second&nbsp;line&nbsp;:&nbsp;All&nbsp;except&nbsp;first&nbsp;rightmost&nbsp;digit <BR />third&nbsp;line&nbsp;&nbsp;:&nbsp;&nbsp;All&nbsp;except&nbsp;two&nbsp;rightmost&nbsp;digits&nbsp;. <BR />last&nbsp;line&nbsp;&nbsp;&nbsp;:&nbsp;leftmost&nbsp;digit <BR /> <BR /><strong>Answer:</strong> <BR />A&nbsp;C&nbsp;program&nbsp;to&nbsp;display&nbsp;a&nbsp;number&nbsp;as&nbsp;follows: <BR /> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR /><font color=Blue>void</font>&nbsp;main() <BR />{&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;n,k,l,i,r,a[<font color=Maroon>100</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"enter&nbsp;any&nbsp;integer&nbsp;value"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;n); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(n&gt;<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d"</font>,n); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>);&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n=n/<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//to&nbsp;have&nbsp;space&nbsp;between&nbsp;the&nbsp;digits&nbsp;of&nbsp;the&nbsp;integer</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;k=n; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(k&gt;<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;l=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n=k; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(n&gt;<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r=n%<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a[l]=r; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;l++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n=n/<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;l--; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=l;i&gt;=<font color=Maroon>0</font>;i--) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d"</font>,a[i]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k=k/<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />}&nbsp;</div>
  
       <BR />
      ]]>
        </string>
        
     
         <string name="SAss2" formatted="false"> 
         <![CDATA[
        <div><strong>Question:</strong> <BR />Shown&nbsp;below&nbsp;is&nbsp;a&nbsp;Floyd’s&nbsp;triangle.&nbsp;Write&nbsp;a&nbsp;C&nbsp;program&nbsp;to&nbsp;print&nbsp;<font color=Blue>this</font>&nbsp;triangle <BR /><font color=Maroon>1</font> <BR /><font color=Maroon>2</font>&nbsp;&nbsp;&nbsp;&nbsp;<font color=Maroon>3</font> <BR /><font color=Maroon>4</font>&nbsp;&nbsp;&nbsp;&nbsp;<font color=Maroon>5</font>&nbsp;&nbsp;&nbsp;&nbsp;<font color=Maroon>6</font> <BR /><font color=Maroon>7</font>&nbsp;&nbsp;&nbsp;&nbsp;<font color=Maroon>8</font>&nbsp;&nbsp;&nbsp;&nbsp;<font color=Maroon>9</font>&nbsp;&nbsp;&nbsp;&nbsp;<font color=Maroon>10</font> <BR /><font color=Maroon>11</font>&nbsp;&nbsp;&nbsp;&nbsp;...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Maroon>15</font> <BR /><font color=Maroon>79</font>&nbsp;&nbsp;&nbsp;&nbsp;...&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Maroon>91</font>&nbsp; <BR /> <BR /><strong>Ans:</strong> <BR />A&nbsp;C&nbsp;program&nbsp;to&nbsp;print&nbsp;Floyd’s&nbsp;triangle&nbsp;upto&nbsp;<font color=Maroon>91</font>&nbsp;is&nbsp;given&nbsp;below: <BR /> <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR /><font color=Blue>void</font>&nbsp;main() <BR />{&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;num=<font color=Maroon>1</font>,k=<font color=Maroon>1</font>,j; <BR />&nbsp;&nbsp;&nbsp;&nbsp;clrscr(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(num&lt;=<font color=Maroon>91</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>1</font>;j&lt;=k;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"&nbsp;%d"</font>,num++); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />}&nbsp;</div>
   		<BR />
   		<div>Question&nbsp;: <BR />Write&nbsp;a&nbsp;<font color=Blue>switch</font>&nbsp;statement&nbsp;that&nbsp;will&nbsp;examine&nbsp;the&nbsp;value&nbsp;of&nbsp;an&nbsp;integer&nbsp;variable&nbsp;flag&nbsp;<font color=Blue>and</font>&nbsp;print&nbsp;the <BR />following&nbsp;messages: <BR /> <BR />It&nbsp;is&nbsp;hot&nbsp;weather;&nbsp;<font color=Blue>if</font>&nbsp;flag&nbsp;has&nbsp;value&nbsp;<font color=Maroon>1</font> <BR /> <BR />It&nbsp;is&nbsp;a&nbsp;stormy&nbsp;weather;&nbsp;<font color=Blue>if</font>&nbsp;flag&nbsp;has&nbsp;value&nbsp;<font color=Maroon>2</font> <BR /> <BR />It&nbsp;is&nbsp;sticky&nbsp;weather;&nbsp;<font color=Blue>if</font>&nbsp;flag&nbsp;has&nbsp;value&nbsp;<font color=Maroon>3</font> <BR /> <BR />It&nbsp;is&nbsp;a&nbsp;pleasant&nbsp;weather;&nbsp;otherwise <BR /> <BR /><strong>Answer:</strong> <BR />A&nbsp;Program&nbsp;to&nbsp;demonstrate&nbsp;<font color=Blue>switch</font>&nbsp;statement: <BR /> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR /><font color=Blue>void</font>&nbsp;main() <BR />{&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;flag; <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(&nbsp;<font color=Maroon>"Enter&nbsp;any&nbsp;value\n"</font>&nbsp;); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(&nbsp;<font color=Maroon>"%d"</font>,&nbsp;&amp;flag&nbsp;); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>switch</font>&nbsp;(&nbsp;flag&nbsp;)&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1</font>: <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&nbsp;<font color=Maroon>"It&nbsp;is&nbsp;hot&nbsp;weather!\n"</font>&nbsp;); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>2</font>: <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&nbsp;<font color=Maroon>"It&nbsp;is&nbsp;a&nbsp;stormy&nbsp;weather!\n"</font>&nbsp;); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>3</font>: <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&nbsp;<font color=Maroon>"It&nbsp;is&nbsp;a&nbsp;sticky&nbsp;weather!\n"</font>&nbsp;); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>default</font>: <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&nbsp;<font color=Maroon>"It&nbsp;is&nbsp;a&nbsp;pleasant&nbsp;weather!\n"</font>&nbsp;); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />getch(); <BR />}&nbsp;</div>
		<BR />
		<div><strong>Question:</strong> <BR />Define&nbsp;a&nbsp;structure&nbsp;named&nbsp;‘student’&nbsp;containing&nbsp;two&nbsp;fields&nbsp;‘name’&nbsp;<font color=Blue>and</font>&nbsp;‘marks’. <BR /><strong>Answer:</strong> <BR />A&nbsp;structure&nbsp;student: <BR /> <BR /><font color=Blue>struct</font>&nbsp;student <BR />{&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;name[<font color=Maroon>10</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;marks[<font color=Maroon>6</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;total; <BR />};&nbsp;</div>
		<BR />
		<div><strong>Question:</strong> <BR />Write&nbsp;an&nbsp;input&nbsp;statement&nbsp;<font color=Blue>for</font>&nbsp;inputting&nbsp;the&nbsp;marks&nbsp;<font color=Blue>and</font>&nbsp;the&nbsp;names&nbsp;of&nbsp;<font color=Maroon>50</font>&nbsp;students&nbsp;defined&nbsp;as&nbsp;above. <BR /> <BR /><strong>Answer:</strong> <BR />Statements&nbsp;<font color=Blue>for</font>&nbsp;inputting&nbsp;marks&nbsp;of&nbsp;<font color=Maroon>50</font>&nbsp;students: <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR /><font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>50</font>;i++) <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d.&nbsp;name&nbsp;:&nbsp;"</font>,i+<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%s"</font>,&amp;stu[i].name); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\nenter&nbsp;marks&nbsp;:"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;stu[i].marks); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />}&nbsp;</div>
		<BR />
		<div><strong>Question:</strong> <BR />Write&nbsp;a&nbsp;complete&nbsp;C&nbsp;program&nbsp;to&nbsp;compute&nbsp;<font color=Blue>and</font>&nbsp;print&nbsp;the&nbsp;names&nbsp;of&nbsp;those&nbsp;students&nbsp;who&nbsp;have&nbsp;got&nbsp;more&nbsp; <BR />than&nbsp;<font color=Maroon>80</font>&nbsp;marks.&nbsp;Also&nbsp;print&nbsp;their&nbsp;marks&nbsp;along&nbsp;with&nbsp;their&nbsp;names. <BR /> <BR /><strong>Answer:</strong> <BR />A&nbsp;C&nbsp;program&nbsp;to&nbsp;compute&nbsp;<font color=Blue>and</font>&nbsp;print&nbsp;names&nbsp;of&nbsp;students&nbsp;who&nbsp;scored&nbsp;more&nbsp;than&nbsp;<font color=Maroon>80</font>&nbsp;marks. <BR /> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR /><font color=Blue>struct</font>&nbsp;student <BR />{&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;name[<font color=Maroon>10</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;marks; <BR />}; <BR /><font color=Blue>void</font>&nbsp;main() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i,n; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>struct</font>&nbsp;student&nbsp;stu[<font color=Maroon>50</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;clrscr(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"enter&nbsp;no.&nbsp;of&nbsp;students"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;n); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"ENTER&nbsp;NAME&nbsp;AND&nbsp;MARKS\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;n;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d.&nbsp;name&nbsp;:&nbsp;"</font>,i+<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%s"</font>,&amp;stu[i].name); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\nenter&nbsp;marks&nbsp;:"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;stu[i].marks); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;n;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(stu[i].marks&gt;<font color=Maroon>80</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%s"</font>,stu[i].name); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\t"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d"</font>,stu[i].marks); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />}&nbsp;</div>
		]]>
        </string>
      
       <string name="SAss3" formatted="false"> 
         <![CDATA[
    
    <div><strong>Question:</strong> <BR />Write&nbsp;a&nbsp;function&nbsp;‘exchange’&nbsp;to&nbsp;interchange&nbsp;the&nbsp;values&nbsp;of&nbsp;two&nbsp;variables&nbsp;say&nbsp;x&nbsp;<font color=Blue>and</font>&nbsp;y. <BR />Illustrate&nbsp;the&nbsp;use&nbsp;of&nbsp;<font color=Blue>this</font>&nbsp;function&nbsp;in&nbsp;calling&nbsp;program.&nbsp;Assume&nbsp;that&nbsp;x&nbsp;<font color=Blue>and</font>&nbsp;y&nbsp;are&nbsp;defined&nbsp;as <BR />global&nbsp;variables. <BR /> <BR /><strong>Answer:</strong> <BR />A&nbsp;C&nbsp;function&nbsp;exchange&nbsp;to&nbsp;interchange&nbsp;the&nbsp;values&nbsp;ofx&nbsp;<font color=Blue>and</font>&nbsp;y: <BR /> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt;&nbsp; <BR />#<font color=Blue>include</font>&lt;math.h&gt; <BR /><font color=Blue>int</font>&nbsp;i,j; <BR /><font color=Blue>int</font>&nbsp;x,y; <BR /><font color=Blue>void</font>&nbsp;main() <BR />{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i=<font color=Maroon>10</font>,j=<font color=Maroon>20</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"The&nbsp;values&nbsp;before&nbsp;exchange&nbsp;is&nbsp;i:&nbsp;%d,j:%d\n"</font>,i,j); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exchange(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"The&nbsp;values&nbsp;after&nbsp;exchange&nbsp;is&nbsp;i:&nbsp;%d,j:%d\n"</font>,i,j); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;exchange() <BR />{&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;temp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;x; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;y; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;=&nbsp;temp; <BR />}&nbsp; <BR /> <BR /><strong>Question:</strong> <BR />Write&nbsp;a&nbsp;C&nbsp;function&nbsp;that&nbsp;returns&nbsp;<font color=Maroon>1</font>&nbsp;<font color=Blue>if</font>&nbsp;the&nbsp;argument&nbsp;is&nbsp;a&nbsp;prime&nbsp;number&nbsp;<font color=Blue>and</font>&nbsp;returns&nbsp;<font color=Maroon>0</font>&nbsp;otherwise. <BR /> <BR /><strong>Answer:</strong> <BR />A&nbsp;C&nbsp;function&nbsp;prime(n)&nbsp;described&nbsp;below&nbsp;returns&nbsp;<font color=Maroon>1</font>&nbsp;<font color=Blue>if</font>&nbsp;the&nbsp;argument&nbsp;is&nbsp;a&nbsp;prime&nbsp;number&nbsp;otherwise&nbsp;<font color=Maroon>0</font>: <BR /> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR /><font color=Blue>void</font>&nbsp;main() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;n,flag; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"enter&nbsp;any&nbsp;number"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;n); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag=prime(n); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(flag==<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"no.&nbsp;is&nbsp;prime"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d"</font>,flag); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />} <BR /><font color=Blue>int</font>&nbsp;prime(n) <BR />{&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>2</font>;i&lt;n;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(n%i==<font color=Maroon>0</font>)&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>1</font>; <BR />} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR /> <BR /><strong>Question:</strong> <BR />Write&nbsp;a&nbsp;C&nbsp;function&nbsp;<font color=Blue>for</font>&nbsp;searching&nbsp;an&nbsp;element&nbsp;in&nbsp;an&nbsp;array&nbsp;of&nbsp;size&nbsp;N.&nbsp;Assume&nbsp;that&nbsp;elements&nbsp;in <BR />array&nbsp;are&nbsp;stored&nbsp;in&nbsp;ascending&nbsp;order. <BR /> <BR /><strong>Answer:</strong> <BR />A&nbsp;C&nbsp;function&nbsp;to&nbsp;search&nbsp;an&nbsp;element&nbsp;in&nbsp;an&nbsp;array&nbsp;of&nbsp;size&nbsp;n: <BR />rec(<font color=Blue>int</font>&nbsp;a[],<font color=Blue>int</font>&nbsp;low,<font color=Blue>int</font>&nbsp;high,<font color=Blue>int</font>&nbsp;m) <BR />{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;mid; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mid=(low+high)/<font color=Maroon>2</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(low&lt;=high) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a[mid]==m) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a[mid]&gt;m) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rec(a,low,(mid-<font color=Maroon>1</font>),m); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a[mid]&lt;m) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rec(a,(mid+<font color=Maroon>1</font>),high,m); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"element&nbsp;is&nbsp;not&nbsp;present"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />}&nbsp; <BR /> <BR /><strong>Question:</strong> <BR />Design&nbsp;an&nbsp;algorithm&nbsp;that&nbsp;accepts&nbsp;a&nbsp;positive&nbsp;integer&nbsp;<font color=Blue>and</font>&nbsp;reverses&nbsp;the&nbsp;order&nbsp;of&nbsp;its&nbsp;digits. <BR /> <BR /><strong>Answer:</strong> <BR />An&nbsp;algorithm&nbsp;to&nbsp;find&nbsp;reverse&nbsp;of&nbsp;an&nbsp;integer&nbsp;is: <BR /><font color=Blue>void</font>&nbsp;reversein() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;n,r; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"enter&nbsp;an&nbsp;integer"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;n); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\nreverse&nbsp;of&nbsp;%d&nbsp;:&nbsp;"</font>,n); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(n&gt;<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r=n%<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d"</font>,r); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n=n/<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />}&nbsp; <BR /> <BR /><strong>Question:</strong> <BR />Given&nbsp;a&nbsp;set&nbsp;of&nbsp;n&nbsp;numbers&nbsp;design&nbsp;an&nbsp;algorithm&nbsp;that&nbsp;adds&nbsp;these&nbsp;numbers&nbsp;<font color=Blue>and</font>&nbsp;returns&nbsp;the&nbsp;resultant&nbsp; <BR />sum. <BR /> <BR /><strong>Answer:</strong> <BR />An&nbsp;algorithm&nbsp;to&nbsp;add&nbsp;n&nbsp;numbers: <BR /><font color=Blue>void</font>&nbsp;main() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a[<font color=Maroon>10</font>],n,i,sum=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"how&nbsp;many&nbsp;nos.&nbsp;u&nbsp;want&nbsp;to&nbsp;enter"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;n); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"enter&nbsp;the&nbsp;nos."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;n;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;a[i]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum=sum+a[i]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"sum&nbsp;of&nbsp;these&nbsp;numbers&nbsp;=&nbsp;%d"</font>,sum); <BR />}&nbsp;</div>  
 
    ]]>
        </string>
    
     <string name="SAss4" formatted="false"> 
         <![CDATA[
    <div><strong>Question:</strong> <BR />Design&nbsp;an&nbsp;algorithm&nbsp;that&nbsp;accepts&nbsp;a&nbsp;positive&nbsp;integer&nbsp;<font color=Blue>and</font>&nbsp;reverses&nbsp;the&nbsp;order&nbsp;of&nbsp;its&nbsp;digits. <BR /> <BR /><strong>Answer:</strong> <BR />An&nbsp;algorithm&nbsp;to&nbsp;find&nbsp;reverse&nbsp;of&nbsp;an&nbsp;integer&nbsp;is: <BR /><font color=Blue>void</font>&nbsp;reversein() <BR />{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;n,r; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"enter&nbsp;an&nbsp;integer"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;n); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\nreverse&nbsp;of&nbsp;%d&nbsp;:&nbsp;"</font>,n); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(n&gt;<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r=n%<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d"</font>,r); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n=n/<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />}&nbsp; <BR /> <BR /><strong>Question:</strong> <BR />While&nbsp;purchasing&nbsp;certain&nbsp;items,&nbsp;a&nbsp;discount&nbsp;of&nbsp;<font color=Maroon>10</font>%&nbsp;is&nbsp;offered&nbsp;<font color=Blue>if</font>&nbsp;the&nbsp;quantity&nbsp;purchased&nbsp;is <BR />more&nbsp;than&nbsp;<font color=Maroon>1000</font>.&nbsp;If&nbsp;the&nbsp;quantity&nbsp;<font color=Blue>and</font>&nbsp;price&nbsp;per&nbsp;item&nbsp;are&nbsp;input&nbsp;through&nbsp;keyboard,&nbsp;write&nbsp;a&nbsp;program&nbsp; <BR />to&nbsp;calculate&nbsp;the&nbsp;total&nbsp;expenses. <BR /> <BR /><strong>Answer:</strong> <BR />A&nbsp;C&nbsp;program&nbsp;to&nbsp;calculate&nbsp;the&nbsp;total&nbsp;expenses&nbsp;<font color=Blue>if</font>&nbsp;the&nbsp;quantity&nbsp;<font color=Blue>and</font>&nbsp;price&nbsp;per&nbsp;item&nbsp;are&nbsp;input <BR />through&nbsp;keyboard&nbsp;is: <BR /> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR /><font color=Blue>void</font>&nbsp;main() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;n,i,price,dis,p,q,sum=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"how&nbsp;many&nbsp;items&nbsp;u&nbsp;purchased"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;n); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(i!=n+<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"enter&nbsp;the&nbsp;quantity&nbsp;of&nbsp;%d&nbsp;item"</font>,i); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;q); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"enter&nbsp;price&nbsp;per&nbsp;item"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;p); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(q&gt;<font color=Maroon>1000</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dis=<font color=Maroon>.1</font>*p*q; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;price=(p*q)-dis; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;price=p*q; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sum=sum+price; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"total&nbsp;bill&nbsp;=&nbsp;%d"</font>,sum); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />}&nbsp; <BR /> <BR /><strong>Question:</strong> <BR />Write&nbsp;a&nbsp;program&nbsp;to&nbsp;copy&nbsp;input&nbsp;to&nbsp;output,&nbsp;replacing&nbsp;each&nbsp;<font color=Blue>string</font>&nbsp;of&nbsp;one&nbsp;<font color=Blue>or</font>&nbsp;more&nbsp;blanks&nbsp;by&nbsp;a <BR />single&nbsp;blank. <BR /> <BR /><strong>Answer:</strong> <BR />A&nbsp;C&nbsp;program&nbsp;to&nbsp;copy&nbsp;input&nbsp;to&nbsp;output&nbsp;replacing&nbsp;each&nbsp;<font color=Blue>string</font>&nbsp;of&nbsp;one&nbsp;<font color=Blue>or</font>&nbsp;more&nbsp;blanks&nbsp;by&nbsp;a <BR />single&nbsp;blank&nbsp;is: <BR /> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR /><font color=Blue>void</font>&nbsp;main() <BR />{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i,j; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;a[<font color=Maroon>50</font>],b[<font color=Maroon>50</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"enter&nbsp;the&nbsp;string"</font>);&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gets(a); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(a[i]!=<font color=Maroon>&nbsp;</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b[j]=a[i]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j++;i++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b[j]=<font color=Maroon>&nbsp;</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(a[i]!=<font color=Maroon>\0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(a[i]!=<font color=Maroon>&nbsp;</font>&amp;&amp;a[i]!=<font color=Maroon>\0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b[j]=a[i]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(a[i]==<font color=Maroon>&nbsp;</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b[j]=<font color=Maroon>\0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%s"</font>,b); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />} <BR /> <BR /> <BR /><strong>Question:</strong> <BR />Write&nbsp;a&nbsp;program&nbsp;to&nbsp;test&nbsp;<font color=Blue>if</font>&nbsp;a&nbsp;character&nbsp;from&nbsp;the&nbsp;keyboard&nbsp;is&nbsp;a&nbsp;lower&nbsp;<font color=Blue>case</font>&nbsp;letter. <BR /> <BR /><strong>Answer:</strong> <BR />A&nbsp;C&nbsp;program&nbsp;to&nbsp;test&nbsp;<font color=Blue>if</font>&nbsp;a&nbsp;character&nbsp;from&nbsp;the&nbsp;keyboard&nbsp;is&nbsp;a&nbsp;lower&nbsp;<font color=Blue>case</font>&nbsp;letter: <BR /> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR />#<font color=Blue>include</font>&lt;process.h&gt; <BR /> <BR /><font color=Blue>void</font>&nbsp;main() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;a; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\nenter&nbsp;any&nbsp;character&nbsp;:\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a=getchar(); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(islower(a)&gt;<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\nit&nbsp;is&nbsp;lower&nbsp;case&nbsp;letter"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\nit&nbsp;is&nbsp;not&nbsp;a&nbsp;lower&nbsp;case&nbsp;letter"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />}&nbsp; <BR /> <BR /><strong>Question:</strong> <BR />Define&nbsp;a&nbsp;pointer?&nbsp;Write&nbsp;a&nbsp;program&nbsp;to&nbsp;assign&nbsp;any&nbsp;number&nbsp;at&nbsp;random&nbsp;to&nbsp;an&nbsp;integer&nbsp;variable&nbsp;k <BR /><font color=Blue>and</font>&nbsp;display&nbsp;the&nbsp;same&nbsp;through&nbsp;pointer. <BR /> <BR /><strong>Answer:</strong> <BR />A&nbsp;pointer&nbsp;is&nbsp;a&nbsp;variable&nbsp;which&nbsp;contains&nbsp;the&nbsp;address&nbsp;in&nbsp;memory&nbsp;of&nbsp;another&nbsp;variable.&nbsp;We&nbsp;can <BR />have&nbsp;a&nbsp;pointer&nbsp;to&nbsp;any&nbsp;variable&nbsp;type.&nbsp;The&nbsp;unary&nbsp;<font color=Blue>or</font>&nbsp;monadic&nbsp;<font color=Blue>operator</font>&nbsp;&amp;&nbsp;gives&nbsp;the&nbsp;“address&nbsp;of&nbsp;a <BR />variable”.&nbsp;The&nbsp;indirection&nbsp;<font color=Blue>or</font>&nbsp;dereference&nbsp;<font color=Blue>operator</font>&nbsp;*&nbsp;gives&nbsp;the&nbsp;“contents&nbsp;of&nbsp;an&nbsp;object&nbsp;pointed <BR />to&nbsp;by&nbsp;a&nbsp;pointer”. <BR />A&nbsp;pointer&nbsp;is&nbsp;declared&nbsp;as&nbsp;follows: <BR /><font color=Blue>int</font>&nbsp;*ptr; <BR />where&nbsp;*ptr&nbsp;is&nbsp;a&nbsp;pointer&nbsp;of&nbsp;<font color=Blue>int</font>&nbsp;type. <BR />A&nbsp;Program&nbsp;to&nbsp;display&nbsp;the&nbsp;value&nbsp;of&nbsp;an&nbsp;<font color=Blue>int</font>&nbsp;variable&nbsp;through&nbsp;pointer&nbsp;is&nbsp;listed&nbsp;below” <BR /> <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR /><font color=Blue>void</font>&nbsp;main() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;k; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;*ptr; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k=<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ptr=&amp;k; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n&nbsp;Value&nbsp;of&nbsp;k&nbsp;is&nbsp;%d\n\n"</font>,k); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d&nbsp;is&nbsp;stored&nbsp;at&nbsp;addr&nbsp;%u\n"</font>,k,&amp;k); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"%d&nbsp;is&nbsp;stored&nbsp;at&nbsp;addr&nbsp;%u\n"</font>,*ptr,ptr); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*ptr=<font color=Maroon>25</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n&nbsp;Now&nbsp;k&nbsp;=&nbsp;%d\n"</font>,k); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />} <BR /> <BR />Output&nbsp;of&nbsp;the&nbsp;program&nbsp;is: <BR />Value&nbsp;of&nbsp;k&nbsp;is&nbsp;<font color=Maroon>10</font> <BR /><font color=Maroon>10</font>&nbsp;is&nbsp;stored&nbsp;at&nbsp;addr&nbsp;<font color=Maroon>65524</font> <BR /><font color=Maroon>10</font>&nbsp;is&nbsp;stored&nbsp;at&nbsp;addr&nbsp;<font color=Maroon>65524</font> <BR />Now&nbsp;k=<font color=Maroon>25</font>.&nbsp; <BR /> <BR /> <BR /><strong>Question:</strong> <BR />Write&nbsp;a&nbsp;program&nbsp;to&nbsp;read&nbsp;the&nbsp;coordinates&nbsp;of&nbsp;the&nbsp;end&nbsp;points&nbsp;of&nbsp;a&nbsp;line&nbsp;<font color=Blue>and</font>&nbsp;to&nbsp;find&nbsp;its&nbsp;length. <BR />Use&nbsp;a&nbsp;structure&nbsp;variable&nbsp;named&nbsp;‘line’&nbsp;to&nbsp;store&nbsp;the&nbsp;relevant&nbsp;information&nbsp;about&nbsp;its&nbsp;end&nbsp;points. <BR /> <BR /><strong>Answer:</strong> <BR />A&nbsp;Program&nbsp;to&nbsp;read&nbsp;end&nbsp;points&nbsp;of&nbsp;a&nbsp;line&nbsp;<font color=Blue>and</font>&nbsp;finding&nbsp;its&nbsp;length&nbsp;is: <BR /> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt;&nbsp; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR />#<font color=Blue>include</font>&lt;math.h&gt; <BR /><font color=Blue>struct</font>&nbsp;lyn <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a1; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;b1; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a2; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;b2; <BR />}; <BR /> <BR /><font color=Blue>void</font>&nbsp;main() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a,b; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>float</font>&nbsp;length; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>struct</font>&nbsp;lyn&nbsp;line; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clrscr(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"enter&nbsp;the&nbsp;coordinates&nbsp;of&nbsp;end&nbsp;point&nbsp;A"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d&nbsp;%d"</font>,&amp;line.a1,&amp;line.b1); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\nenter&nbsp;the&nbsp;coordinates&nbsp;of&nbsp;end&nbsp;point&nbsp;B"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d%d"</font>,&amp;line.a2,&amp;line.b2); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a=line.a1-line.a2; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b=line.b1-line.b2; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length=sqrt(pow(a,<font color=Maroon>2</font>)+pow(b,<font color=Maroon>2</font>)); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"length&nbsp;of&nbsp;the&nbsp;line&nbsp;is&nbsp;%f"</font>,length); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />}&nbsp;</div>
       ]]>
        </string>
    
    <string name="SAss5" formatted="false"> 
         <![CDATA[
    <div><strong>Question:</strong> <BR />Write&nbsp;a&nbsp;program&nbsp;to&nbsp;find&nbsp;the&nbsp;sum&nbsp;&amp;&nbsp;average&nbsp;of&nbsp;the&nbsp;given&nbsp;numbers&nbsp;<font color=Blue>using</font>&nbsp;the&nbsp;<font color=Blue>do</font>----<font color=Blue>while</font>&nbsp;loop. <BR /> <BR /><strong>Answer:</strong> <BR />A&nbsp;C&nbsp;program&nbsp;to&nbsp;find&nbsp;the&nbsp;sum&nbsp;<font color=Blue>and</font>&nbsp;average&nbsp;of&nbsp;given&nbsp;numbers&nbsp;<font color=Blue>using</font>&nbsp;<font color=Blue>do</font>-<font color=Blue>while</font>&nbsp;loop&nbsp;is: <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR />#<font color=Blue>include</font>&lt;math.h&gt; <BR /><font color=Blue>void</font>&nbsp;main() <BR />{&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i=<font color=Maroon>0</font>,n; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>float</font>&nbsp;sum,avg,num; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;sum=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"How&nbsp;many&nbsp;numbers&nbsp;you&nbsp;want&nbsp;to&nbsp;find&nbsp;sum\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;n); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;the&nbsp;numbers\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>do</font>{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%f"</font>,&amp;num); <BR />&nbsp;&nbsp;&nbsp;&nbsp;sum=sum+num; <BR />&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;}<font color=Blue>while</font>(i&lt;n); <BR />&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;avg=sum/n;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Sum=%f\n"</font>,sum); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Average=%f\n"</font>,avg); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />}&nbsp; <BR /> <BR /><strong>Question:</strong> <BR />When&nbsp;passing&nbsp;parameters&nbsp;to&nbsp;functions,&nbsp;explain&nbsp;the&nbsp;difference&nbsp;between&nbsp;pass-by-value&nbsp;<font color=Blue>and</font> <BR />pass-by-reference. <BR /> <BR /><strong>Answer:</strong> <BR />The&nbsp;two&nbsp;ways&nbsp;of&nbsp;parameter&nbsp;passing&nbsp;mechanism&nbsp;are: <BR /> <BR />(i)Pass&nbsp;by&nbsp;value&nbsp;<font color=Blue>or</font>&nbsp;sending&nbsp;the&nbsp;values&nbsp;of&nbsp;the&nbsp;arguments-&nbsp;The&nbsp;value&nbsp;of&nbsp;each&nbsp;of&nbsp;the&nbsp;actual <BR />arguments&nbsp;in&nbsp;the&nbsp;calling&nbsp;function&nbsp;is&nbsp;copied&nbsp;into&nbsp;co&nbsp;rresponding&nbsp;formal&nbsp;arguments&nbsp;of&nbsp;the <BR />called&nbsp;function.&nbsp;The&nbsp;changes&nbsp;made&nbsp;to&nbsp;the&nbsp;formal&nbsp;arguments&nbsp;have&nbsp;no&nbsp;effect&nbsp;on&nbsp;the&nbsp;values&nbsp;of <BR />actual&nbsp;arguments&nbsp;in&nbsp;the&nbsp;calling&nbsp;function.&nbsp;This&nbsp;technique&nbsp;of&nbsp;passing&nbsp;arguments&nbsp;is&nbsp;called&nbsp;pass <BR />by&nbsp;value&nbsp;illustrated&nbsp;by&nbsp;the&nbsp;following&nbsp;example. <BR /> <BR />(ii)Pass&nbsp;by&nbsp;reference&nbsp;<font color=Blue>or</font>&nbsp;sending&nbsp;the&nbsp;addresses&nbsp;of&nbsp;the&nbsp;arguments-&nbsp;the&nbsp;add <BR />resses&nbsp;of&nbsp;actual&nbsp;arguments&nbsp;in&nbsp;the&nbsp;calling&nbsp;function&nbsp;are&nbsp;copied&nbsp;into&nbsp;formal&nbsp;arguments&nbsp;of&nbsp;the&nbsp;called&nbsp;function. <BR />Using&nbsp;these&nbsp;addresses&nbsp;we&nbsp;are&nbsp;actually&nbsp;working&nbsp;on&nbsp;actual&nbsp;argument&nbsp;so&nbsp;changes&nbsp;will&nbsp;be <BR />reflected&nbsp;in&nbsp;the&nbsp;calling&nbsp;function.&nbsp;This&nbsp;technique&nbsp;of&nbsp;passing&nbsp;arguments&nbsp;is&nbsp;called&nbsp;pass&nbsp;by <BR />reference,&nbsp;illustrated&nbsp;by&nbsp;following&nbsp;example.&nbsp; <BR /> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR />#<font color=Blue>include</font>&lt;math.h&gt; <BR /><font color=Blue>void</font>&nbsp;main() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i=<font color=Maroon>10</font>,j=<font color=Maroon>20</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;clrscr(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"The&nbsp;values&nbsp;before&nbsp;swap&nbsp;is&nbsp;i:&nbsp;%d,&nbsp;j:%d\n"</font>,i,j); <BR />&nbsp;&nbsp;&nbsp;&nbsp;swapv(i,j); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"The&nbsp;values&nbsp;after&nbsp;swap&nbsp;is&nbsp;i:&nbsp;%d,&nbsp;j:%d\n"</font>,i,j); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;swapr(&amp;i,&amp;j); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"The&nbsp;values&nbsp;after&nbsp;swap&nbsp;is&nbsp;i:&nbsp;%d,&nbsp;j:%d\n"</font>,i,j); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />} <BR />swapv(<font color=Blue>int</font>&nbsp;x,<font color=Blue>int</font>&nbsp;y) <BR />{&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;temp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;temp=x; <BR />&nbsp;&nbsp;&nbsp;&nbsp;x=y; <BR />&nbsp;&nbsp;&nbsp;&nbsp;y=temp; <BR />} <BR />swapr(<font color=Blue>int</font>&nbsp;*x,<font color=Blue>int</font>&nbsp;*y) <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;temp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;temp=*x; <BR />&nbsp;&nbsp;&nbsp;&nbsp;*x=*y; <BR />&nbsp;&nbsp;&nbsp;&nbsp;*y=temp; <BR />}&nbsp; <BR /> <BR /><strong>Question:</strong> <BR />Write&nbsp;a&nbsp;program&nbsp;to&nbsp;find&nbsp;the&nbsp;sum&nbsp;of&nbsp;given&nbsp;non-negative&nbsp;integers&nbsp;<font color=Blue>using</font>&nbsp;a&nbsp;function&nbsp;declaration. <BR />Sum&nbsp;=&nbsp;<font color=Maroon>1</font>+<font color=Maroon>2</font>+<font color=Maroon>3</font>+<font color=Maroon>4</font>+-------n <BR /> <BR /><strong>Answer:</strong> <BR />A&nbsp;Program&nbsp;to&nbsp;find&nbsp;the&nbsp;sum&nbsp;of&nbsp;given&nbsp;non-negative&nbsp;integers&nbsp;<font color=Blue>using</font>&nbsp;a&nbsp;function&nbsp;declaration: <BR /> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR />#<font color=Blue>include</font>&lt;math.h&gt; <BR /> <BR /><font color=Blue>int</font>&nbsp;Sum(&nbsp;<font color=Blue>int</font>&nbsp;[],<font color=Blue>int</font>&nbsp;); <BR /><font color=Blue>void</font>&nbsp;main() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i,sum,n; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a[<font color=Maroon>100</font>];clrscr(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"How&nbsp;many&nbsp;numbers&nbsp;you&nbsp;want&nbsp;to&nbsp;enter\n"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;n); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;Nos.\n"</font>);&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;n;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;a[i]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;sum=Sum(a,n); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"\n&nbsp;Sum&nbsp;of&nbsp;the&nbsp;%d&nbsp;number&nbsp;is&nbsp;%d\n"</font>,n,sum); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />} <BR /><font color=Blue>int</font>&nbsp;Sum(<font color=Blue>int</font>&nbsp;[],<font color=Blue>int</font>&nbsp;n) <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i,sum=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;n;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;sum=sum+a[i]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>(sum); <BR />}&nbsp; <BR /> <BR />Question <BR />What&nbsp;is&nbsp;an&nbsp;array&nbsp;&amp;&nbsp;how&nbsp;is&nbsp;an&nbsp;array&nbsp;variable&nbsp;different&nbsp;from&nbsp;an&nbsp;ordinary&nbsp;variable? <BR /> <BR /><strong>Ans:</strong>An&nbsp;array&nbsp;is&nbsp;a&nbsp;collection&nbsp;of&nbsp;data&nbsp;storage&nbsp;locations,&nbsp;each&nbsp;having&nbsp;the&nbsp;same&nbsp;data&nbsp;type&nbsp;<font color=Blue>and</font>&nbsp; <BR />the&nbsp;same&nbsp;name.&nbsp;Each&nbsp;storage&nbsp;location&nbsp;in&nbsp;an&nbsp;array&nbsp;is&nbsp;called&nbsp;an&nbsp;array&nbsp;element.&nbsp;A&nbsp;particular&nbsp;value&nbsp; <BR />is&nbsp;indicated&nbsp;by&nbsp;writing&nbsp;a&nbsp;number&nbsp;called&nbsp;index&nbsp;<font color=Blue>or</font>&nbsp;subsc&nbsp;ript&nbsp;after&nbsp;array&nbsp;name.&nbsp;For&nbsp;example&nbsp;a[<font color=Maroon>5</font>] <BR />stands&nbsp;<font color=Blue>for</font>&nbsp;<font color=Maroon>6</font>th&nbsp;element&nbsp;in&nbsp;the&nbsp;array&nbsp;a.&nbsp;The&nbsp;complete&nbsp;set&nbsp;of&nbsp;values&nbsp;is&nbsp;called&nbsp;array&nbsp;<font color=Blue>while</font>&nbsp;the <BR />individual&nbsp;values&nbsp;are&nbsp;called&nbsp;elements.&nbsp;Arrays&nbsp;can&nbsp;be&nbsp;of&nbsp;any&nbsp;variable&nbsp;type.&nbsp;</div>
     
    ]]>
        </string>
    
    <string name="SAss6" formatted="false"> 
        <![CDATA[
   <div>&nbsp;#<font color=Blue>include</font>&lt;<font color=Blue>iostream</font>.h&gt; <BR />#<font color=Blue>include</font>&lt;<font color=Blue>string</font>&gt; <BR /><font color=Blue>class</font>&nbsp;time24 <BR />{ <BR /><font color=Blue>int</font>&nbsp;hours,minutes,seconds; <BR /><font color=Blue>public</font>: <BR />time24() <BR />{ <BR />hours=minutes=seconds=<font color=Maroon>0</font>; <BR />} <BR />time24(<font color=Blue>int</font>&nbsp;h,<font color=Blue>int</font>&nbsp;m,<font color=Blue>int</font>&nbsp;s) <BR />{ <BR />hours=h; <BR />minutes=m; <BR />seconds=s; <BR />}</div>  ]]>
    </string> 
    
    
    
    <string name="CGraphics3DdiagramOfAnIC" formatted="false"> 
        <![CDATA[
        <div><font color=Maroon>3</font>D&nbsp;diagram&nbsp;of&nbsp;an&nbsp;IC <BR /> <BR />#<font color=Blue>include</font>&lt;graphics.h&gt; <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;time.h&gt; <BR /><font color=Blue>void</font>&nbsp;liner(<font color=Blue>int</font>&nbsp;x1,<font color=Blue>int</font>&nbsp;y1,<font color=Blue>int</font>&nbsp;x2,<font color=Blue>int</font>&nbsp;y2,<font color=Blue>int</font>&nbsp;x3,<font color=Blue>int</font>&nbsp;y3,<font color=Blue>int</font>&nbsp;x4,<font color=Blue>int</font>&nbsp;y4,<font color=Blue>int</font>&nbsp;x5,<font color=Blue>int</font>&nbsp;y5,<font color=Blue>int</font>&nbsp;i); <BR /> <BR /><font color=Blue>void</font>&nbsp;shadow(<font color=Blue>int</font>&nbsp;x1,<font color=Blue>int</font>&nbsp;y1,<font color=Blue>int</font>&nbsp;x2,<font color=Blue>int</font>&nbsp;y2,<font color=Blue>int</font>&nbsp;x3,<font color=Blue>int</font>&nbsp;y3,<font color=Blue>int</font>&nbsp;x4,<font color=Blue>int</font>&nbsp;y4,<font color=Blue>int</font>&nbsp; <BR />x5,<font color=Blue>int</font>&nbsp;y5,<font color=Blue>int</font>&nbsp;x6,<font color=Blue>int</font>&nbsp;y6,<font color=Blue>int</font>&nbsp;x7,<font color=Blue>int</font>&nbsp;y7); <BR /> <BR /><font color=Blue>void</font>&nbsp;rightlead(&nbsp;<font color=Blue>int</font>&nbsp;x1,<font color=Blue>int</font>&nbsp;y1,<font color=Blue>int</font>&nbsp;x2,<font color=Blue>int</font>&nbsp;y2,<font color=Blue>int</font>&nbsp;x3,<font color=Blue>int</font>&nbsp;y3,<font color=Blue>int</font>&nbsp;x4,<font color=Blue>int</font> <BR />y4,<font color=Blue>int</font>&nbsp;x5,<font color=Blue>int</font>&nbsp;y5,<font color=Blue>int</font>&nbsp;x6,<font color=Blue>int</font>&nbsp;y6,<font color=Blue>int</font>&nbsp;x7,<font color=Blue>int</font>&nbsp;y7,<font color=Blue>int</font>&nbsp;x8,<font color=Blue>int</font>&nbsp;y8,<font color=Blue>int</font>&nbsp;x9,<font color=Blue>int</font> <BR />y9,<font color=Blue>int</font>&nbsp;x10,<font color=Blue>int</font>&nbsp;y10,<font color=Blue>int</font>&nbsp;x11,&nbsp;<font color=Blue>int</font>&nbsp;y11); <BR /> <BR /><font color=Blue>void</font>&nbsp;leftlead(); <BR /><font color=Blue>void</font>&nbsp;identifier(); <BR /><font color=Blue>void</font>&nbsp;bibin(); <BR /> <BR /> <BR /> <BR /><font color=Blue>void</font>&nbsp;main() <BR />{ <BR /><font color=Blue>int</font>&nbsp;gd=DETECT,&nbsp;gm,i=<font color=Maroon>3</font>; <BR />initgraph(&amp;gd,&amp;gm,<font color=Maroon>"c:\tc\bgi"</font>); <BR />setbkcolor(<font color=Maroon>6</font>); <BR />cleardevice(); <BR />setcolor(i); <BR />line(<font color=Maroon>263</font>,<font color=Maroon>192</font>,<font color=Maroon>108</font>,<font color=Maroon>151</font>); <BR />line(<font color=Maroon>108</font>,<font color=Maroon>151</font>,<font color=Maroon>345</font>,<font color=Maroon>40</font>); <BR />line(<font color=Maroon>263</font>,<font color=Maroon>192</font>,<font color=Maroon>507</font>,<font color=Maroon>68</font>); <BR />line(<font color=Maroon>507</font>,<font color=Maroon>68</font>,<font color=Maroon>345</font>,<font color=Maroon>40</font>); <BR /> <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>9</font>); <BR /> <BR />floodfill(<font color=Maroon>347</font>,<font color=Maroon>49</font>,i);<font color=Green>//for&nbsp;upper&nbsp;part</font> <BR /> <BR />setcolor(i); <BR /> <BR />line(<font color=Maroon>263</font>,<font color=Maroon>192</font>,<font color=Maroon>269</font>,<font color=Maroon>231</font>); <BR />line(<font color=Maroon>269</font>,<font color=Maroon>231</font>,<font color=Maroon>89</font>,<font color=Maroon>179</font>); <BR />line(<font color=Maroon>89</font>,<font color=Maroon>179</font>,<font color=Maroon>108</font>,<font color=Maroon>151</font>); <BR /> <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>9</font>); <BR /> <BR />floodfill(<font color=Maroon>193</font>,<font color=Maroon>194</font>,i);<font color=Green>//for&nbsp;part&nbsp;left&nbsp;light&nbsp;blue</font> <BR /> <BR />setcolor(i); <BR /> <BR />line(<font color=Maroon>269</font>,<font color=Maroon>231</font>,<font color=Maroon>524</font>,<font color=Maroon>93</font>); <BR />line(<font color=Maroon>524</font>,<font color=Maroon>93</font>,<font color=Maroon>506</font>,<font color=Maroon>69</font>); <BR /> <BR />floodfill(<font color=Maroon>454</font>,<font color=Maroon>113</font>,i);<font color=Green>//for&nbsp;part&nbsp;side&nbsp;light&nbsp;blue</font> <BR /> <BR />setcolor(i); <BR /> <BR />line(<font color=Maroon>269</font>,<font color=Maroon>231</font>,<font color=Maroon>264</font>,<font color=Maroon>260</font>); <BR />line(<font color=Maroon>264</font>,<font color=Maroon>260</font>,<font color=Maroon>101</font>,<font color=Maroon>215</font>); <BR />line(<font color=Maroon>101</font>,<font color=Maroon>215</font>,<font color=Maroon>89</font>,<font color=Maroon>179</font>); <BR /> <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>1</font>);<font color=Green>//part&nbsp;left&nbsp;for&nbsp;blue</font> <BR /> <BR />floodfill(<font color=Maroon>193</font>,<font color=Maroon>234</font>,i); <BR /> <BR />setcolor(i); <BR /> <BR />line(<font color=Maroon>264</font>,<font color=Maroon>260</font>,<font color=Maroon>514</font>,<font color=Maroon>125</font>); <BR />line(<font color=Maroon>525</font>,<font color=Maroon>94</font>,<font color=Maroon>514</font>,<font color=Maroon>125</font>); <BR /> <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>1</font>); <BR /> <BR />floodfill(<font color=Maroon>489</font>,<font color=Maroon>126</font>,i); <BR /> <BR />setcolor(i);<font color=Green>//part&nbsp;side&nbsp;blue</font> <BR /> <BR /><font color=Green>//end&nbsp;of&nbsp;upperpart</font> <BR /> <BR />line(<font color=Maroon>102</font>,<font color=Maroon>315</font>,<font color=Maroon>292</font>,<font color=Maroon>383</font>); <BR />line(<font color=Maroon>294</font>,<font color=Maroon>419</font>,<font color=Maroon>292</font>,<font color=Maroon>383</font>); <BR />line(<font color=Maroon>294</font>,<font color=Maroon>419</font>,<font color=Maroon>101</font>,<font color=Maroon>348</font>); <BR />line(<font color=Maroon>102</font>,<font color=Maroon>315</font>,<font color=Maroon>101</font>,<font color=Maroon>348</font>); <BR /> <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>1</font>);<font color=Green>//lower&nbsp;left</font> <BR /> <BR />floodfill(<font color=Maroon>154</font>,<font color=Maroon>360</font>,i); <BR /> <BR />line(<font color=Maroon>542</font>,<font color=Maroon>222</font>,<font color=Maroon>292</font>,<font color=Maroon>383</font>); <BR />line(<font color=Maroon>542</font>,<font color=Maroon>257</font>,<font color=Maroon>542</font>,<font color=Maroon>222</font>); <BR />line(<font color=Maroon>542</font>,<font color=Maroon>257</font>,<font color=Maroon>294</font>,<font color=Maroon>419</font>); <BR /> <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>1</font>); <BR /> <BR />floodfill(<font color=Maroon>480</font>,<font color=Maroon>282</font>,i);<font color=Green>//lower&nbsp;side</font> <BR /> <BR />line(<font color=Maroon>102</font>,<font color=Maroon>315</font>,<font color=Maroon>222</font>,<font color=Maroon>249</font>); <BR />line(<font color=Maroon>407</font>,<font color=Maroon>183</font>,<font color=Maroon>542</font>,<font color=Maroon>222</font>); <BR /> <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>1</font>); <BR />floodfill(<font color=Maroon>206</font>,<font color=Maroon>274</font>,i); <BR /> <BR />line(<font color=Maroon>147</font>,<font color=Maroon>331</font>,<font color=Maroon>146</font>,<font color=Maroon>350</font>); <BR />line(<font color=Maroon>259</font>,<font color=Maroon>390</font>,<font color=Maroon>146</font>,<font color=Maroon>350</font>); <BR />line(<font color=Maroon>258</font>,<font color=Maroon>371</font>,<font color=Maroon>259</font>,<font color=Maroon>390</font>); <BR />line(<font color=Maroon>147</font>,<font color=Maroon>331</font>,<font color=Maroon>411</font>,<font color=Maroon>184</font>); <BR />line(<font color=Maroon>411</font>,<font color=Maroon>184</font>,<font color=Maroon>503</font>,<font color=Maroon>210</font>); <BR />line(<font color=Maroon>503</font>,<font color=Maroon>210</font>,<font color=Maroon>258</font>,<font color=Maroon>371</font>); <BR /> <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>13</font>); <BR />floodfill(<font color=Maroon>273</font>,<font color=Maroon>297</font>,i); <BR /> <BR /><font color=Green>//end&nbsp;of&nbsp;&nbsp;base&nbsp;of&nbsp;low&nbsp;part</font> <BR /><font color=Green>//&nbsp;start&nbsp;of&nbsp;holes</font> <BR /> <BR /> <BR />line(<font color=Maroon>130</font>,<font color=Maroon>311</font>,<font color=Maroon>138</font>,<font color=Maroon>313</font>); <BR />line(<font color=Maroon>138</font>,<font color=Maroon>313</font>,<font color=Maroon>147</font>,<font color=Maroon>307</font>); <BR />line(<font color=Maroon>147</font>,<font color=Maroon>307</font>,<font color=Maroon>139</font>,<font color=Maroon>305</font>); <BR />line(<font color=Maroon>139</font>,<font color=Maroon>305</font>,<font color=Maroon>130</font>,<font color=Maroon>311</font>); <BR /> <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>8</font>); <BR /> <BR />floodfill(<font color=Maroon>139</font>,<font color=Maroon>309</font>,i); <BR /> <BR /> <BR /><font color=Green>//left&nbsp;1</font> <BR />liner(<font color=Maroon>176</font>,<font color=Maroon>285</font>,<font color=Maroon>183</font>,<font color=Maroon>287</font>,<font color=Maroon>193</font>,<font color=Maroon>282</font>,<font color=Maroon>186</font>,<font color=Maroon>280</font>,<font color=Maroon>185</font>,<font color=Maroon>284</font>,i); <BR />liner(<font color=Maroon>221</font>,<font color=Maroon>260</font>,<font color=Maroon>229</font>,<font color=Maroon>262</font>,<font color=Maroon>239</font>,<font color=Maroon>257</font>,<font color=Maroon>232</font>,<font color=Maroon>255</font>,<font color=Maroon>230</font>,<font color=Maroon>258</font>,i); <BR />liner(<font color=Maroon>299</font>,<font color=Maroon>362</font>,<font color=Maroon>308</font>,<font color=Maroon>365</font>,<font color=Maroon>315</font>,<font color=Maroon>358</font>,<font color=Maroon>309</font>,<font color=Maroon>357</font>,<font color=Maroon>309</font>,<font color=Maroon>361</font>,i); <BR />liner(<font color=Maroon>347</font>,<font color=Maroon>332</font>,<font color=Maroon>354</font>,<font color=Maroon>335</font>,<font color=Maroon>363</font>,<font color=Maroon>330</font>,<font color=Maroon>357</font>,<font color=Maroon>327</font>,<font color=Maroon>357</font>,<font color=Maroon>330</font>,i); <BR />liner(<font color=Maroon>389</font>,<font color=Maroon>305</font>,<font color=Maroon>396</font>,<font color=Maroon>306</font>,<font color=Maroon>405</font>,<font color=Maroon>301</font>,<font color=Maroon>399</font>,<font color=Maroon>299</font>,<font color=Maroon>399</font>,<font color=Maroon>303</font>,i); <BR />liner(<font color=Maroon>428</font>,<font color=Maroon>280</font>,<font color=Maroon>436</font>,<font color=Maroon>282</font>,<font color=Maroon>444</font>,<font color=Maroon>277</font>,<font color=Maroon>438</font>,<font color=Maroon>276</font>,<font color=Maroon>437</font>,<font color=Maroon>279</font>,i); <BR />liner(<font color=Maroon>467</font>,<font color=Maroon>255</font>,<font color=Maroon>475</font>,<font color=Maroon>257</font>,<font color=Maroon>482</font>,<font color=Maroon>252</font>,<font color=Maroon>476</font>,<font color=Maroon>250</font>,<font color=Maroon>475</font>,<font color=Maroon>255</font>,i); <BR />liner(<font color=Maroon>505</font>,<font color=Maroon>233</font>,<font color=Maroon>511</font>,<font color=Maroon>234</font>,<font color=Maroon>521</font>,<font color=Maroon>229</font>,<font color=Maroon>514</font>,<font color=Maroon>227</font>,<font color=Maroon>513</font>,<font color=Maroon>231</font>,i); <BR /> <BR />delay(<font color=Maroon>1500</font>); <BR /> <BR />rightlead(<font color=Maroon>283</font>,<font color=Maroon>225</font>,<font color=Maroon>297</font>,<font color=Maroon>226</font>,<font color=Maroon>301</font>,<font color=Maroon>215</font>,<font color=Maroon>314</font>,<font color=Maroon>220</font>,<font color=Maroon>298</font>,<font color=Maroon>280</font>,<font color=Maroon>317</font>,<font color=Maroon>280</font>,<font color=Maroon>305</font>,<font color=Maroon>282</font>,<font color=Maroon>313</font>,<font color=Maroon>282</font>, <BR /><font color=Maroon>305</font>,<font color=Maroon>346</font>,<font color=Maroon>312</font>,<font color=Maroon>343</font>,<font color=Maroon>309</font>,<font color=Maroon>240</font>); <BR /> <BR />shadow(<font color=Maroon>282</font>,<font color=Maroon>226</font>,<font color=Maroon>294</font>,<font color=Maroon>231</font>,<font color=Maroon>294</font>,<font color=Maroon>281</font>,<font color=Maroon>300</font>,<font color=Maroon>285</font>,<font color=Maroon>301</font>,<font color=Maroon>346</font>,<font color=Maroon>305</font>,<font color=Maroon>346</font>,<font color=Maroon>296</font>,<font color=Maroon>280</font>); <BR /> <BR />delay(<font color=Maroon>500</font>); <BR /> <BR />rightlead(<font color=Maroon>333</font>,<font color=Maroon>197</font>,<font color=Maroon>344</font>,<font color=Maroon>200</font>,<font color=Maroon>348</font>,<font color=Maroon>189</font>,<font color=Maroon>360</font>,<font color=Maroon>196</font>,<font color=Maroon>346</font>,<font color=Maroon>253</font>,<font color=Maroon>362</font>,<font color=Maroon>252</font>,<font color=Maroon>350</font>,<font color=Maroon>256</font>,<font color=Maroon>358</font>,<font color=Maroon>255</font>, <BR /><font color=Maroon>351</font>,<font color=Maroon>316</font>,<font color=Maroon>358</font>,<font color=Maroon>314</font>,<font color=Maroon>353</font>,<font color=Maroon>221</font>); <BR /> <BR />shadow(<font color=Maroon>333</font>,<font color=Maroon>197</font>,<font color=Maroon>342</font>,<font color=Maroon>206</font>,<font color=Maroon>343</font>,<font color=Maroon>254</font>,<font color=Maroon>348</font>,<font color=Maroon>258</font>,<font color=Maroon>348</font>,<font color=Maroon>316</font>,<font color=Maroon>351</font>,<font color=Maroon>316</font>,<font color=Maroon>349</font>,<font color=Maroon>315</font>);<font color=Green>//for</font> <BR />second&nbsp;lead <BR /> <BR />delay(<font color=Maroon>500</font>); <BR /> <BR />rightlead(<font color=Maroon>373</font>,<font color=Maroon>175</font>,<font color=Maroon>385</font>,<font color=Maroon>178</font>,<font color=Maroon>391</font>,<font color=Maroon>166</font>,<font color=Maroon>402</font>,<font color=Maroon>172</font>,<font color=Maroon>388</font>,<font color=Maroon>228</font>,<font color=Maroon>404</font>,<font color=Maroon>225</font>,<font color=Maroon>393</font>,<font color=Maroon>232</font>,<font color=Maroon>400</font>,<font color=Maroon>231</font>, <BR /><font color=Maroon>394</font>,<font color=Maroon>290</font>,<font color=Maroon>400</font>,<font color=Maroon>287</font>,<font color=Maroon>397</font>,<font color=Maroon>197</font>); <BR /> <BR />shadow(<font color=Maroon>373</font>,<font color=Maroon>175</font>,<font color=Maroon>383</font>,<font color=Maroon>182</font>,<font color=Maroon>385</font>,<font color=Maroon>229</font>,<font color=Maroon>390</font>,<font color=Maroon>233</font>,<font color=Maroon>391</font>,<font color=Maroon>291</font>,<font color=Maroon>394</font>,<font color=Maroon>290</font>,<font color=Maroon>392</font>,<font color=Maroon>280</font>); <BR />delay(<font color=Maroon>500</font>); <BR /> <BR />rightlead(<font color=Maroon>417</font>,<font color=Maroon>152</font>,<font color=Maroon>428</font>,<font color=Maroon>155</font>,<font color=Maroon>432</font>,<font color=Maroon>143</font>,<font color=Maroon>442</font>,<font color=Maroon>148</font>,<font color=Maroon>430</font>,<font color=Maroon>205</font>,<font color=Maroon>446</font>,<font color=Maroon>202</font>,<font color=Maroon>435</font>,<font color=Maroon>208</font>,<font color=Maroon>441</font>,<font color=Maroon>207</font>, <BR /><font color=Maroon>436</font>,<font color=Maroon>265</font>,<font color=Maroon>441</font>,<font color=Maroon>263</font>,<font color=Maroon>436</font>,<font color=Maroon>178</font>); <BR /> <BR />shadow(<font color=Maroon>417</font>,<font color=Maroon>152</font>,<font color=Maroon>426</font>,<font color=Maroon>161</font>,<font color=Maroon>426</font>,<font color=Maroon>205</font>,<font color=Maroon>431</font>,<font color=Maroon>211</font>,<font color=Maroon>431</font>,<font color=Maroon>267</font>,<font color=Maroon>436</font>,<font color=Maroon>265</font>,<font color=Maroon>425</font>,<font color=Maroon>155</font>); <BR /> <BR />delay(<font color=Maroon>500</font>); <BR /> <BR />rightlead(<font color=Maroon>456</font>,<font color=Maroon>130</font>,<font color=Maroon>466</font>,<font color=Maroon>133</font>,<font color=Maroon>471</font>,<font color=Maroon>122</font>,<font color=Maroon>479</font>,<font color=Maroon>125</font>,<font color=Maroon>469</font>,<font color=Maroon>181</font>,<font color=Maroon>483</font>,<font color=Maroon>180</font>,<font color=Maroon>473</font>,<font color=Maroon>184</font>,<font color=Maroon>479</font>,<font color=Maroon>184</font>, <BR /><font color=Maroon>474</font>,<font color=Maroon>239</font>,<font color=Maroon>480</font>,<font color=Maroon>238</font>,<font color=Maroon>475</font>,<font color=Maroon>158</font>); <BR /> <BR />shadow(<font color=Maroon>456</font>,<font color=Maroon>130</font>,<font color=Maroon>464</font>,<font color=Maroon>137</font>,<font color=Maroon>465</font>,<font color=Maroon>183</font>,<font color=Maroon>471</font>,<font color=Maroon>187</font>,<font color=Maroon>472</font>,<font color=Maroon>241</font>,<font color=Maroon>474</font>,<font color=Maroon>239</font>,<font color=Maroon>473</font>,<font color=Maroon>220</font>); <BR /> <BR />delay(<font color=Maroon>500</font>); <BR /> <BR />rightlead(<font color=Maroon>493</font>,<font color=Maroon>110</font>,<font color=Maroon>501</font>,<font color=Maroon>114</font>,<font color=Maroon>506</font>,<font color=Maroon>102</font>,<font color=Maroon>517</font>,<font color=Maroon>107</font>,<font color=Maroon>504</font>,<font color=Maroon>160</font>,<font color=Maroon>519</font>,<font color=Maroon>159</font>,<font color=Maroon>508</font>,<font color=Maroon>163</font>,<font color=Maroon>515</font>,<font color=Maroon>162</font>, <BR /><font color=Maroon>509</font>,<font color=Maroon>216</font>,<font color=Maroon>515</font>,<font color=Maroon>216</font>,<font color=Maroon>513</font>,<font color=Maroon>137</font>); <BR /> <BR /> <BR />shadow(<font color=Maroon>493</font>,<font color=Maroon>110</font>,<font color=Maroon>499</font>,<font color=Maroon>117</font>,<font color=Maroon>499</font>,<font color=Maroon>162</font>,<font color=Maroon>505</font>,<font color=Maroon>165</font>,<font color=Maroon>505</font>,<font color=Maroon>218</font>,<font color=Maroon>509</font>,<font color=Maroon>216</font>,<font color=Maroon>506</font>,<font color=Maroon>213</font>); <BR /> <BR />delay(<font color=Maroon>500</font>); <BR /> <BR />leftlead(); <BR />identifier(); <BR /> <BR /> <BR />getch(); <BR />bibin(); <BR />} <BR /> <BR /> <BR /><font color=Blue>void</font>&nbsp;liner(<font color=Blue>int</font>&nbsp;x1,<font color=Blue>int</font>&nbsp;y1,<font color=Blue>int</font>&nbsp;x2,<font color=Blue>int</font>&nbsp;y2,<font color=Blue>int</font>&nbsp;x3,<font color=Blue>int</font>&nbsp;y3,<font color=Blue>int</font>&nbsp;x4,<font color=Blue>int</font>&nbsp;y4,<font color=Blue>int</font> <BR />x5,<font color=Blue>int</font>&nbsp;y5,<font color=Blue>int</font>&nbsp;i) <BR />{ <BR /> <BR />line(x1,y1,x2,y2); <BR />line(x2,y2,x3,y3); <BR />line(x3,y3,x4,y4); <BR />line(x4,y4,x1,y1); <BR /> <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>8</font>); <BR /> <BR />floodfill(x5,y5,i);<font color=Green>//x1,y1&nbsp;left&nbsp;most&nbsp;then&nbsp;go&nbsp;anticlockwise&nbsp;x5,y5&nbsp;for&nbsp;</font> <BR />fill <BR />} <BR /> <BR /> <BR /> <BR /><font color=Blue>void</font>&nbsp;rightlead(&nbsp;<font color=Blue>int</font>&nbsp;x1,<font color=Blue>int</font>&nbsp;y1,<font color=Blue>int</font>&nbsp;x2,<font color=Blue>int</font>&nbsp;y2,<font color=Blue>int</font>&nbsp;x3,<font color=Blue>int</font>&nbsp;y3,<font color=Blue>int</font>&nbsp;x4,<font color=Blue>int</font> <BR />y4,<font color=Blue>int</font>&nbsp;x5,<font color=Blue>int</font>&nbsp;y5,<font color=Blue>int</font>&nbsp;x6,<font color=Blue>int</font>&nbsp;y6,<font color=Blue>int</font>&nbsp;x7,<font color=Blue>int</font>&nbsp;y7,<font color=Blue>int</font>&nbsp;x8,<font color=Blue>int</font>&nbsp;y8,<font color=Blue>int</font>&nbsp;x9,<font color=Blue>int</font> <BR />y9,<font color=Blue>int</font>&nbsp;x10,<font color=Blue>int</font>&nbsp;y10,<font color=Blue>int</font>&nbsp;x11,<font color=Blue>int</font>&nbsp;y11) <BR /> <BR />{ <BR />setcolor(<font color=Maroon>15</font>); <BR /> <BR />line(x1,y1,x3,y3);<font color=Green>//for&nbsp;starting&nbsp;line</font> <BR />line(x1,y1,x2,y2); <BR />line(x3,y3,x4,y4); <BR />line(x2,y2,x5,y5); <BR />line(x4,y4,x6,y6); <BR />line(x5,y5,x7,y7); <BR />line(x6,y6,x8,y8); <BR />line(x7,y7,x9,y9); <BR />line(x10,y10,x8,y8); <BR />line(x10,y10,x9,y9); <BR /> <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>7</font>); <BR /> <BR />floodfill(x11,y11,<font color=Maroon>15</font>); <BR /> <BR />} <BR /><font color=Blue>void</font>&nbsp;shadow(<font color=Blue>int</font>&nbsp;x1,<font color=Blue>int</font>&nbsp;y1,<font color=Blue>int</font>&nbsp;x2,<font color=Blue>int</font>&nbsp;y2,<font color=Blue>int</font>&nbsp;x3,<font color=Blue>int</font>&nbsp;y3,<font color=Blue>int</font>&nbsp;x4,<font color=Blue>int</font>&nbsp;y4,<font color=Blue>int</font> <BR />x5,<font color=Blue>int</font>&nbsp;y5,<font color=Blue>int</font>&nbsp;x6,<font color=Blue>int</font>&nbsp;y6,<font color=Blue>int</font>&nbsp;x7,<font color=Blue>int</font>&nbsp;y7) <BR />{ <BR />setcolor(<font color=Maroon>15</font>); <BR /> <BR />line(x1,y1,x2,y2); <BR />line(x2,y2,x3,y3); <BR />line(x3,y3,x4,y4); <BR />line(x5,y5,x4,y4); <BR />line(x5,y5,x6,y6); <BR /> <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>8</font>); <BR /> <BR />floodfill(x7,y7,<font color=Maroon>15</font>); <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;leftlead() <BR />{ <BR /> <BR />setcolor(<font color=Maroon>15</font>); <BR /> <BR />line(<font color=Maroon>132</font>,<font color=Maroon>224</font>,<font color=Maroon>133</font>,<font color=Maroon>232</font>); <BR />line(<font color=Maroon>133</font>,<font color=Maroon>232</font>,<font color=Maroon>139</font>,<font color=Maroon>236</font>); <BR />line(<font color=Maroon>139</font>,<font color=Maroon>236</font>,<font color=Maroon>140</font>,<font color=Maroon>297</font>); <BR />line(<font color=Maroon>140</font>,<font color=Maroon>297</font>,<font color=Maroon>146</font>,<font color=Maroon>296</font>); <BR />line(<font color=Maroon>146</font>,<font color=Maroon>296</font>,<font color=Maroon>146</font>,<font color=Maroon>237</font>); <BR />line(<font color=Maroon>146</font>,<font color=Maroon>237</font>,<font color=Maroon>152</font>,<font color=Maroon>232</font>); <BR />line(<font color=Maroon>152</font>,<font color=Maroon>232</font>,<font color=Maroon>152</font>,<font color=Maroon>229</font>); <BR />line(<font color=Maroon>152</font>,<font color=Maroon>229</font>,<font color=Maroon>132</font>,<font color=Maroon>224</font>); <BR /> <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>7</font>); <BR /> <BR />floodfill(<font color=Maroon>142</font>,<font color=Maroon>244</font>,<font color=Maroon>15</font>); <BR /> <BR />line(<font color=Maroon>129</font>,<font color=Maroon>224</font>,<font color=Maroon>128</font>,<font color=Maroon>234</font>); <BR />line(<font color=Maroon>128</font>,<font color=Maroon>234</font>,<font color=Maroon>135</font>,<font color=Maroon>240</font>); <BR />line(<font color=Maroon>135</font>,<font color=Maroon>240</font>,<font color=Maroon>137</font>,<font color=Maroon>298</font>); <BR />line(<font color=Maroon>137</font>,<font color=Maroon>298</font>,<font color=Maroon>140</font>,<font color=Maroon>297</font>); <BR />line(<font color=Maroon>132</font>,<font color=Maroon>224</font>,<font color=Maroon>129</font>,<font color=Maroon>224</font>); <BR /> <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>8</font>); <BR /> <BR />floodfill(<font color=Maroon>131</font>,<font color=Maroon>236</font>,<font color=Maroon>15</font>); <BR /> <BR /> <BR /> <BR /><font color=Green>//end&nbsp;of&nbsp;first&nbsp;lead</font> <BR /> <BR />line(<font color=Maroon>181</font>,<font color=Maroon>237</font>,<font color=Maroon>181</font>,<font color=Maroon>273</font>); <BR />line(<font color=Maroon>181</font>,<font color=Maroon>273</font>,<font color=Maroon>188</font>,<font color=Maroon>272</font>); <BR />line(<font color=Maroon>188</font>,<font color=Maroon>272</font>,<font color=Maroon>188</font>,<font color=Maroon>241</font>); <BR />line(<font color=Maroon>181</font>,<font color=Maroon>237</font>,<font color=Maroon>188</font>,<font color=Maroon>241</font>); <BR /> <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>7</font>); <BR /> <BR />floodfill(<font color=Maroon>185</font>,<font color=Maroon>255</font>,<font color=Maroon>15</font>); <BR /> <BR /> <BR />line(<font color=Maroon>177</font>,<font color=Maroon>237</font>,<font color=Maroon>181</font>,<font color=Maroon>239</font>); <BR />line(<font color=Maroon>177</font>,<font color=Maroon>237</font>,<font color=Maroon>179</font>,<font color=Maroon>275</font>); <BR />line(<font color=Maroon>179</font>,<font color=Maroon>275</font>,<font color=Maroon>181</font>,<font color=Maroon>273</font>); <BR /> <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>8</font>); <BR /> <BR />floodfill(<font color=Maroon>179</font>,<font color=Maroon>256</font>,<font color=Maroon>15</font>); <BR /> <BR />line(<font color=Maroon>221</font>,<font color=Maroon>249</font>,<font color=Maroon>220</font>,<font color=Maroon>253</font>); <BR />line(<font color=Maroon>220</font>,<font color=Maroon>253</font>,<font color=Maroon>226</font>,<font color=Maroon>252</font>); <BR />line(<font color=Maroon>226</font>,<font color=Maroon>252</font>,<font color=Maroon>225</font>,<font color=Maroon>250</font>); <BR />line(<font color=Maroon>225</font>,<font color=Maroon>250</font>,<font color=Maroon>221</font>,<font color=Maroon>249</font>); <BR /> <BR />floodfill(<font color=Maroon>223</font>,<font color=Maroon>251</font>,<font color=Maroon>15</font>); <BR />} <BR /> <BR /> <BR /><font color=Blue>void</font>&nbsp;identifier() <BR />{ <BR /> <BR />setcolor(<font color=Maroon>6</font>); <BR /> <BR />arc(<font color=Maroon>196</font>,<font color=Maroon>177</font>,<font color=Maroon>350</font>,<font color=Maroon>160</font>,<font color=Maroon>26</font>); <BR /> <BR />line(<font color=Maroon>171</font>,<font color=Maroon>168</font>,<font color=Maroon>222</font>,<font color=Maroon>181</font>); <BR /> <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>1</font>); <BR /> <BR />floodfill(<font color=Maroon>200</font>,<font color=Maroon>170</font>,<font color=Maroon>6</font>); <BR />} <BR /> <BR /> <BR /><font color=Blue>void</font>&nbsp;bibin() <BR />{ <BR /><font color=Blue>int</font>&nbsp;midx=<font color=Maroon>320</font>,midy=<font color=Maroon>230</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cleardevice(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setbkcolor(RED); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextjustify(CENTER_TEXT,CENTER_TEXT); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(GREEN); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>5</font>,&nbsp;VERT_DIR,&nbsp;<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;; <BR />} <BR /></div>
        
        ]]>
        </string>
        
    
    
    
     <string name="CGameAnalogueClock" formatted="false"> 
        <![CDATA[
    <div>Analog&nbsp;Clock&nbsp;Program <BR /> <BR />#<font color=Blue>include</font>&lt;graphics.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR />#<font color=Blue>include</font>&lt;math.h&gt; <BR />#<font color=Blue>include</font>&lt;dos.h&gt; <BR /><font color=Blue>void</font>&nbsp;main() <BR />{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;gd=DETECT,gm; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;x=<font color=Maroon>320</font>,y=<font color=Maroon>240</font>,r=<font color=Maroon>200</font>,i,h,m,s,thetamin,thetasec; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>struct</font>&nbsp;&nbsp;time&nbsp;t; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;n[<font color=Maroon>12</font>][<font color=Maroon>3</font>]={<font color=Maroon>"3"</font>,<font color=Maroon>"2"</font>,<font color=Maroon>"1"</font>,<font color=Maroon>"12"</font>,<font color=Maroon>"11"</font>,<font color=Maroon>"10"</font>,<font color=Maroon>"9"</font>,<font color=Maroon>"8"</font>,<font color=Maroon>"7"</font>,<font color=Maroon>"6"</font>,<font color=Maroon>"5"</font>,<font color=Maroon>"4"</font>}; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;initgraph(&amp;gd,&amp;gm,<font color=Maroon>"f:\arun\tc"</font>);\put&nbsp;the&nbsp;directory&nbsp;which&nbsp;contains <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;egavga.bgi <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(x,y,<font color=Maroon>210</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>4</font>,<font color=Maroon>0</font>,<font color=Maroon>5</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>12</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(i!=<font color=Maroon>3</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(x+(r-<font color=Maroon>14</font>)*cos(M_PI/<font color=Maroon>6</font>*i)-<font color=Maroon>10</font>,y-(r-<font color=Maroon>14</font>)*sin(M_PI/<font color=Maroon>6</font>*i)-<font color=Maroon>26</font>,n[i]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(x+(r-<font color=Maroon>14</font>)*cos(M_PI/<font color=Maroon>6</font>*i)-<font color=Maroon>20</font>,y-(r-<font color=Maroon>14</font>)*sin(M_PI/<font color=Maroon>6</font>*i)-<font color=Maroon>26</font>,n[i]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gettime(&amp;t); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"The&nbsp;current&nbsp;time&nbsp;is:&nbsp;%2d:%02d:%02d.%02d"</font>,t.ti_hour,&nbsp;t.ti_min,t.ti_sec,&nbsp;t.ti_hund); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(!kbhit()) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>5</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>5</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(x,y,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floodfill(x,y,<font color=Maroon>5</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gettime(&amp;t); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(t.ti_min!=m) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(x,y,x+(r-<font color=Maroon>60</font>)*cos(thetamin*(M_PI/<font color=Maroon>180</font>)),y-(r-<font color=Maroon>60</font>)*sin(thetamin*(M_PI/<font color=Maroon>180</font>))); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(x+(r-<font color=Maroon>80</font>)*cos(thetamin*(M_PI/<font color=Maroon>180</font>)),y-(r-<font color=Maroon>80</font>)*sin(thetamin*(M_PI/<font color=Maroon>180</font>)),<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(x,y,x+(r-<font color=Maroon>110</font>)*cos(M_PI/<font color=Maroon>6</font>*h-((m/<font color=Maroon>2</font>)*(M_PI/<font color=Maroon>180</font>))),y-(r-<font color=Maroon>110</font>)*sin(M_PI/<font color=Maroon>6</font>*h-((m/<font color=Maroon>2</font>)*(M_PI/<font color=Maroon>180</font>)))); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(x+(r-<font color=Maroon>130</font>)*cos(M_PI/<font color=Maroon>6</font>*h-((m/<font color=Maroon>2</font>)*(M_PI/<font color=Maroon>180</font>))),y-(r-<font color=Maroon>130</font>)*sin(M_PI/<font color=Maroon>6</font>*h-((m/<font color=Maroon>2</font>)*(M_PI/<font color=Maroon>180</font>))),<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(t.ti_hour&gt;<font color=Maroon>12</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t.ti_hour=t.ti_hour-<font color=Maroon>12</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(t.ti_hour&lt;<font color=Maroon>4</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h=abs(t.ti_hour-<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h=<font color=Maroon>15</font>-t.ti_hour; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m=t.ti_min; <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(t.ti_min&lt;=<font color=Maroon>15</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thetamin=(<font color=Maroon>15</font>-t.ti_min)*<font color=Maroon>6</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thetamin=<font color=Maroon>450</font>-t.ti_min*<font color=Maroon>6</font>; <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(t.ti_sec&lt;=<font color=Maroon>15</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thetasec=(<font color=Maroon>15</font>-t.ti_sec)*<font color=Maroon>6</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;thetasec=<font color=Maroon>450</font>-t.ti_sec*<font color=Maroon>6</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>4</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(x,y,x+(r-<font color=Maroon>110</font>)*cos(M_PI/<font color=Maroon>6</font>*h-((m/<font color=Maroon>2</font>)*(M_PI/<font color=Maroon>180</font>))),y-(r-<font color=Maroon>110</font>)*sin(M_PI/<font color=Maroon>6</font>*h-((m/<font color=Maroon>2</font>)*(M_PI/<font color=Maroon>180</font>)))); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(x+(r-<font color=Maroon>130</font>)*cos(M_PI/<font color=Maroon>6</font>*h-((m/<font color=Maroon>2</font>)*(M_PI/<font color=Maroon>180</font>))),y-(r-<font color=Maroon>130</font>)*sin(M_PI/<font color=Maroon>6</font>*h-((m/<font color=Maroon>2</font>)*(M_PI/<font color=Maroon>180</font>))),<font color=Maroon>10</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(x,y,x+(r-<font color=Maroon>60</font>)*cos(thetamin*(M_PI/<font color=Maroon>180</font>)),y-(r-<font color=Maroon>60</font>)*sin(thetamin*(M_PI/<font color=Maroon>180</font>))); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(x+(r-<font color=Maroon>80</font>)*cos(thetamin*(M_PI/<font color=Maroon>180</font>)),y-(r-<font color=Maroon>80</font>)*sin(thetamin*(M_PI/<font color=Maroon>180</font>)),<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(x,y,x+(r-<font color=Maroon>70</font>)*cos(thetasec*(M_PI/<font color=Maroon>180</font>)),y-(r-<font color=Maroon>70</font>)*sin(thetasec*(M_PI/<font color=Maroon>180</font>))); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>1000</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>0</font>); <BR />line(x,y,x+(r-<font color=Maroon>70</font>)*cos(thetasec*(M_PI/<font color=Maroon>180</font>)),y-(r-<font color=Maroon>70</font>)*sin(thetasec*(M_PI/<font color=Maroon>180</font>))); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />} <BR /></div>
      ]]>
        </string>
    
      <string name="CFaceOffGame" formatted="false"> 
        <![CDATA[
        <div>Faceoff&nbsp;-&nbsp;human&nbsp;face&nbsp;which&nbsp;smiles <BR /> <BR />#<font color=Blue>include</font>&nbsp;&lt;graphics.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;stdlib.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;malloc.h&gt; <BR />#<font color=Blue>include</font>&lt;dos.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;conio.h&gt; <BR /> <BR /><font color=Blue>int</font>&nbsp;xasp,yasp,gdriver&nbsp;=&nbsp;VGA,&nbsp;gmode=VGAMED,&nbsp;errorcode; <BR /> <BR /><font color=Blue>struct</font>&nbsp;pos <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;x; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;y; <BR />}; <BR /> <BR /><font color=Blue>struct</font>&nbsp;face <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;radius; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>struct</font>&nbsp;pos&nbsp;position; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;mood; <BR />}; <BR /> <BR /><font color=Blue>typedef</font>&nbsp;<font color=Blue>struct</font>&nbsp;face&nbsp;face; <BR />face&nbsp;*face1; <BR /> <BR /><font color=Blue>void</font>&nbsp;getposition() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;X&nbsp;Co-ordinate:"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;face1-&gt;position.x); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;X&nbsp;Co-ordinate:"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;face1-&gt;position.y); <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;drawface() <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;ch=<font color=Maroon>x</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i=<font color=Maroon>0</font>,x,y,color,r,imgsize,dif; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;x=face1-&gt;position.x=<font color=Maroon>320</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;y=face1-&gt;position.y=<font color=Maroon>180</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;face1-&gt;radius=<font color=Maroon>150</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;color=<font color=Maroon>15</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;r=face1-&gt;radius; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setbkcolor(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getaspectratio(&amp;xasp,&amp;yasp); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>8</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;circle(x,y,face1-&gt;radius); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,color); <BR />&nbsp;&nbsp;&nbsp;&nbsp;floodfill(x,y,getcolor()); <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;draweyes(face1); <BR />&nbsp;&nbsp;&nbsp;&nbsp;drawhair(face1); <BR />&nbsp;&nbsp;&nbsp;&nbsp;drawmouth(face1); <BR />&nbsp;&nbsp;&nbsp;&nbsp;drawnose(face1); <BR /> <BR />} <BR /> <BR />drawnose() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i,x,y,r; <BR />&nbsp;&nbsp;&nbsp;&nbsp;x=face1-&gt;position.x; <BR />&nbsp;&nbsp;&nbsp;&nbsp;y=face1-&gt;position.y; <BR />&nbsp;&nbsp;&nbsp;&nbsp;r=face1-&gt;radius; <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>0</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>2</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arc(x-<font color=Maroon>160</font>-i,y-r/<font color=Maroon>4</font>,<font color=Maroon>340</font>-i,<font color=Maroon>10</font>,r); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(x-<font color=Maroon>20</font>,y+<font color=Maroon>4</font>+i,x+<font color=Maroon>20</font>,y+<font color=Maroon>10</font>+i); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />} <BR /> <BR />draweyes() <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i,x1,x2,y1,y2,r; <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;r=face1-&gt;radius; <BR />&nbsp;&nbsp;&nbsp;&nbsp;x1=face1-&gt;position.x-r/<font color=Maroon>2</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;y1=face1-&gt;position.y-r/<font color=Maroon>4</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;x2=face1-&gt;position.x+r/<font color=Maroon>2</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;y2=face1-&gt;position.y-r/<font color=Maroon>4</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setaspectratio(xasp/<font color=Maroon>2</font>,yasp); <BR />&nbsp;&nbsp;&nbsp;&nbsp;arc(x1,y1-r/<font color=Maroon>8</font>,<font color=Maroon>40</font>,<font color=Maroon>140</font>,r/<font color=Maroon>4</font>);<font color=Green>//left&nbsp;eyebrow</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;arc(x1,y1-r/<font color=Maroon>8</font>+<font color=Maroon>1</font>,<font color=Maroon>40</font>,<font color=Maroon>140</font>,r/<font color=Maroon>4</font>);<font color=Green>//left&nbsp;eyebrow</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;arc(x1,y1-r/<font color=Maroon>8</font>+<font color=Maroon>2</font>,<font color=Maroon>40</font>,<font color=Maroon>140</font>,r/<font color=Maroon>4</font>);<font color=Green>//left&nbsp;eyebrow</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setaspectratio(xasp,yasp); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>2</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arc(x1,y1+i+<font color=Maroon>5</font>,<font color=Maroon>40</font>,<font color=Maroon>140</font>,r/<font color=Maroon>4</font>);&nbsp;<font color=Green>//upper&nbsp;left&nbsp;eye</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arc(x1,y1-r/<font color=Maroon>5</font>+i,<font color=Maroon>220</font>,<font color=Maroon>320</font>,r/<font color=Maroon>4</font>);&nbsp;<font color=Green>//lower&nbsp;left&nbsp;eye</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;circle(x1,y1-r/<font color=Maroon>12</font>,r/<font color=Maroon>10</font>);<font color=Green>//left&nbsp;pupul</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;floodfill(x1,y1-r/<font color=Maroon>10</font>,getcolor()); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,WHITE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;floodfill(x1-<font color=Maroon>15</font>,y1-r/<font color=Maroon>6</font>,getcolor()); <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setaspectratio(xasp/<font color=Maroon>2</font>,yasp); <BR />&nbsp;&nbsp;&nbsp;&nbsp;arc(x2,y2-r/<font color=Maroon>8</font>,<font color=Maroon>40</font>,<font color=Maroon>140</font>,r/<font color=Maroon>4</font>);<font color=Green>//right&nbsp;eyebrow</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;arc(x2,y2-r/<font color=Maroon>8</font>+<font color=Maroon>1</font>,<font color=Maroon>40</font>,<font color=Maroon>140</font>,r/<font color=Maroon>4</font>);<font color=Green>//right&nbsp;eyebrow</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;arc(x2,y2-r/<font color=Maroon>8</font>+<font color=Maroon>2</font>,<font color=Maroon>40</font>,<font color=Maroon>140</font>,r/<font color=Maroon>4</font>);<font color=Green>//right&nbsp;eyebrow</font> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setaspectratio(xasp,yasp); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>2</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arc(x2,y2+i+<font color=Maroon>5</font>,<font color=Maroon>40</font>,<font color=Maroon>140</font>,r/<font color=Maroon>4</font>);<font color=Green>//upper&nbsp;right&nbsp;eye</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arc(x2,y2-r/<font color=Maroon>5</font>+i,<font color=Maroon>220</font>,<font color=Maroon>320</font>,r/<font color=Maroon>4</font>);<font color=Green>//lower&nbsp;right&nbsp;eye</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;circle(x2,y2-r/<font color=Maroon>12</font>,r/<font color=Maroon>10</font>);<font color=Green>//right&nbsp;pupil</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;floodfill(x2,y2-r/<font color=Maroon>12</font>,getcolor()); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,WHITE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;floodfill(x2-<font color=Maroon>15</font>,y2-r/<font color=Maroon>6</font>,getcolor()); <BR />} <BR /> <BR />drawmouth() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;x,y,r,i; <BR />&nbsp;&nbsp;&nbsp;&nbsp;x=face1-&gt;position.x; <BR />&nbsp;&nbsp;&nbsp;&nbsp;y=face1-&gt;position.y+(face1-&gt;radius/<font color=Maroon>1</font><font color=Maroon>.5</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;r=face1-&gt;radius; <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(BLACK); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>((face1-&gt;mood)==<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>4</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arc(x,y-r/<font color=Maroon>2</font>+i,<font color=Maroon>220</font>,<font color=Maroon>320</font>,r/<font color=Maroon>2</font>);<font color=Green>//make&nbsp;happy</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>((face1-&gt;mood)==<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>4</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arc(x,y-i,<font color=Maroon>40</font>,<font color=Maroon>140</font>,r/<font color=Maroon>2</font>);<font color=Green>//make&nbsp;sad</font> <BR />} <BR /> <BR />drawhair() <BR />{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;x,y,r; <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>8</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setaspectratio(xasp,yasp/<font color=Maroon>1</font><font color=Maroon>.5</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;r=face1-&gt;radius; <BR />&nbsp;&nbsp;&nbsp;&nbsp;x=face1-&gt;position.x-r/<font color=Maroon>2</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;y=face1-&gt;position.y-r/<font color=Maroon>3</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;arc(x,y,<font color=Maroon>34</font>,<font color=Maroon>225</font>,<font color=Maroon>100</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;arc(x+r,y,<font color=Maroon>314</font>,<font color=Maroon>138</font>,<font color=Maroon>100</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,RED); <BR />&nbsp;&nbsp;&nbsp;&nbsp;floodfill(x,y-<font color=Maroon>70</font>,getcolor()); <BR />&nbsp;&nbsp;&nbsp;&nbsp;floodfill(x+r,y-<font color=Maroon>70</font>,getcolor()); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setaspectratio(xasp,yasp); <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;main(<font color=Blue>void</font>) <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;initgraph(&amp;gdriver,&nbsp;&amp;gmode,<font color=Maroon>""</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(!kbhit()) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>((i%<font color=Maroon>2</font>)==<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setvisualpage(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setactivepage(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clearviewport(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;face1-&gt;mood=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;drawface(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>1000</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setvisualpage(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setactivepage(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clearviewport(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;face1-&gt;mood=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;drawface(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>300</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;closegraph(); <BR />}</div>
        
          ]]>
        </string>
        
         
           <string name="CEggGame" formatted="false"> 
        <![CDATA[
         <div>Egg&nbsp;Game&nbsp;in&nbsp;C <BR /> <BR />#<font color=Blue>include</font><font color=Maroon>"dos.h"</font> <BR />#<font color=Blue>include</font><font color=Maroon>"graphics.h"</font> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR />#<font color=Blue>include</font>&lt;process.h&gt; <BR />#<font color=Blue>include</font>&lt;dos.h&gt; <BR />#<font color=Blue>include</font>&lt;stdlib.h&gt; <BR />#<font color=Blue>include</font>&lt;<font color=Blue>iostream</font>.h&gt; <BR />&nbsp;<font color=Blue>union</font>&nbsp;REGS&nbsp;i,o; <BR />&nbsp;main() <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;initmouse(); <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;restrictmouseptr(<font color=Blue>int</font>,<font color=Blue>int</font>,<font color=Blue>int</font>,<font color=Blue>int</font>); <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;getmousepos(<font color=Blue>int</font>&nbsp;*,<font color=Blue>int</font>&nbsp;*,<font color=Blue>int</font>&nbsp;*); <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;showmouseptr(); <BR /> <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;gd=DETECT,gm,maxx,maxy,x,y,button; <BR />&nbsp;&nbsp;initgraph(&amp;gd,&amp;gm,<font color=Maroon>""</font>); <BR /> <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;count=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;maxx=getmaxx(); <BR />&nbsp;&nbsp;maxy=getmaxy(); <BR /> <BR />&nbsp;&nbsp;setbkcolor(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;setviewport(<font color=Maroon>0</font>,<font color=Maroon>0</font>,maxx,maxy,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;gotoxy(<font color=Maroon>26</font>,<font color=Maroon>1</font>); <BR /> <BR />&nbsp;&nbsp;<font color=Blue>if</font>(initmouse()==<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;closegraph(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;restorecrtmode();&nbsp; <BR /><font color=Green>//to&nbsp;go&nbsp;back&nbsp;to&nbsp;normal&nbsp;graphics&nbsp;mode&nbsp;or&nbsp;deleting&nbsp;viewport.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />mouse&nbsp;driver&nbsp;<font color=Blue>not</font>&nbsp;loaded"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;exit(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;restrictmouseptr(<font color=Maroon>0</font>,getmaxy()-<font color=Maroon>20</font>,maxx,getmaxy()-<font color=Maroon>15</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a=<font color=Maroon>30</font>;<font color=Blue>int</font>&nbsp;b=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;setcolor(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;score=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;count=<font color=Maroon>20</font>; <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;s=<font color=Maroon>5</font>; <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;level=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;name[<font color=Maroon>40</font>]; <BR />&nbsp;&nbsp;gotoxy(<font color=Maroon>5</font>,<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"PLEASE&nbsp;ENTER&nbsp;YOUR&nbsp;SWEET&nbsp;NAME::-"</font>; <BR />&nbsp;&nbsp;gets(name); <BR />&nbsp;&nbsp;gotoxy(<font color=Maroon>5</font>,<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;<font color=Blue>cout</font>&lt;&lt;" <BR />"; <BR /> <BR /> <BR />&nbsp;&nbsp;<font color=Blue>while</font>(!kbhit()) <BR />&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getmousepos(&amp;button,&amp;x,&amp;y); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fillellipse(a,b,<font color=Maroon>10</font>,<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>((b&gt;getmaxy()-<font color=Maroon>20</font>)&amp;&amp;(b&lt;=getmaxy()-<font color=Maroon>15</font>)) <BR /><font color=Green>//&nbsp;For&nbsp;checking&nbsp;the&nbsp;egg&nbsp;position.</font> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a&gt;=(x-<font color=Maroon>20</font>)&amp;&amp;(a&lt;=(x+<font color=Maroon>60</font>))) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;score+=<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gotoxy(<font color=Maroon>320</font>,<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;textcolor(<font color=Maroon>13</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"your&nbsp;score:&nbsp;"</font>&lt;&lt;score; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(b&gt;getmaxy()+<font color=Maroon>40</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;b=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;a=random(getmaxx()); <BR />&nbsp;&nbsp;&nbsp;&nbsp;gotoxy(<font color=Maroon>10</font>,<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"eggs&nbsp;left:&nbsp;"</font>&lt;&lt;count; <BR />&nbsp;&nbsp;&nbsp;&nbsp;count--; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(count==-<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gotoxy(<font color=Maroon>32</font>,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"LEVEL&nbsp;COMPLETED."</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;level++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(level==<font color=Maroon>4</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>goto</font>&nbsp;varun; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count=<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gotoxy(<font color=Maroon>32</font>,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(x,getmaxy(),x+<font color=Maroon>40</font>,getmaxy()); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(x,getmaxy(),x-<font color=Maroon>20</font>,getmaxy()-<font color=Maroon>20</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(x+<font color=Maroon>40</font>,getmaxy(),x+<font color=Maroon>60</font>,getmaxy()-<font color=Maroon>20</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(x-<font color=Maroon>20</font>,getmaxy()-<font color=Maroon>20</font>,x+<font color=Maroon>60</font>,getmaxy()-<font color=Maroon>20</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>10</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(x,getmaxy(),x+<font color=Maroon>40</font>,getmaxy()); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(x,getmaxy(),x-<font color=Maroon>20</font>,getmaxy()-<font color=Maroon>20</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(x+<font color=Maroon>40</font>,getmaxy(),x+<font color=Maroon>60</font>,getmaxy()-<font color=Maroon>20</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(x-<font color=Maroon>20</font>,getmaxy()-<font color=Maroon>20</font>,x+<font color=Maroon>60</font>,getmaxy()-<font color=Maroon>20</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fillellipse(a,b,<font color=Maroon>10</font>,<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;b+=s; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;varun: <BR />&nbsp;&nbsp;&nbsp;&nbsp;gotoxy(<font color=Maroon>30</font>,<font color=Maroon>12</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"EXCELLENT&nbsp;WORK&nbsp;"</font>&lt;&lt;name; <BR />&nbsp;&nbsp;&nbsp;&nbsp;gotoxy(<font color=Maroon>33</font>,<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"GAME&nbsp;OVER.&nbsp;&nbsp;&nbsp;"</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;gotoxy(<font color=Maroon>32</font>,<font color=Maroon>18</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"YOUR&nbsp;SCORE:"</font>&lt;&lt;score; <BR />&nbsp;&nbsp;&nbsp;&nbsp;gotoxy(<font color=Maroon>58</font>,<font color=Maroon>24</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"COMPOSED&nbsp;BY:"</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;gotoxy(<font color=Maroon>55</font>,<font color=Maroon>25</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"VARUN&nbsp;KUMAR&nbsp;SONKER"</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;gotoxy(<font color=Maroon>30</font>,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"GREATEST&nbsp;SCORE::"</font>&lt;&lt;&nbsp;<font color=Maroon>540</font>; <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;initmouse() <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i.x.ax=<font color=Maroon>0</font>;<font color=Green>//for&nbsp;&nbsp;initialising&nbsp;mouse.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int86(<font color=Maroon>0x33</font>,&amp;i,&amp;o); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>(o.x.ax); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;showmouseptr() <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i.x.ax=<font color=Maroon>1</font>;&nbsp;<font color=Green>//&nbsp;for&nbsp;displaying&nbsp;mouse&nbsp;pointer.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int86(<font color=Maroon>0x33</font>,&amp;i,&amp;o); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;restrictmouseptr(<font color=Blue>int</font>&nbsp;x1,<font color=Blue>int</font>&nbsp;y1,<font color=Blue>int</font>&nbsp;x2,<font color=Blue>int</font>&nbsp;y2) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i.x.ax=<font color=Maroon>7</font>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//to&nbsp;define&nbsp;the&nbsp;upper&nbsp;left&nbsp;boundry&nbsp;of&nbsp;mouse.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i.x.cx=x1; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i.x.dx=x2; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int86(<font color=Maroon>0x33</font>,&amp;i,&amp;o); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i.x.ax=<font color=Maroon>8</font>;&nbsp;&nbsp;&nbsp;<font color=Green>//to&nbsp;define&nbsp;the&nbsp;bottom&nbsp;right&nbsp;boundry&nbsp;of&nbsp;mouse.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i.x.cx=y1; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i.x.dx=y2; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int86(<font color=Maroon>0x33</font>,&amp;i,&amp;o); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;getmousepos(<font color=Blue>int</font>&nbsp;*button,<font color=Blue>int</font>&nbsp;*x,&nbsp;<font color=Blue>int</font>&nbsp;*y) <BR />&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;i.x.ax=<font color=Maroon>3</font>;&nbsp;<font color=Green>//to&nbsp;move&nbsp;mouse.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;int86(<font color=Maroon>0x33</font>,&amp;i,&amp;o); <BR />&nbsp;&nbsp;&nbsp;&nbsp;*button=o.x.bx; <BR />&nbsp;&nbsp;&nbsp;&nbsp;*x=o.x.cx; <BR />&nbsp;&nbsp;&nbsp;&nbsp;*y=o.x.dx; <BR />&nbsp;&nbsp;&nbsp;&nbsp;}</div>
           
          ]]>
        </string>
     
            <string name="CMickeyMouseGame" formatted="false"> 
        <![CDATA[     
          <div>Micky&nbsp;Mouse&nbsp;Program <BR /> <BR />#<font color=Blue>include</font>&lt;graphics.h&gt; <BR />#<font color=Blue>include</font>&lt;dos.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR />#<font color=Blue>include</font>&lt;alloc.h&gt; <BR /><font color=Blue>void</font>&nbsp;&nbsp;*buf; <BR /><font color=Blue>void</font>&nbsp;firstleft(); <BR /><font color=Blue>void</font>&nbsp;secondleft(); <BR /><font color=Blue>void</font>&nbsp;main() <BR />{ <BR /><font color=Blue>int</font>&nbsp;gd=DETECT,gm,i=<font color=Maroon>0</font>,x,y,area; <BR />initgraph(&amp;gd,&amp;gm,<font color=Maroon>"tc:\bgi"</font>);\put&nbsp;your&nbsp;directory&nbsp;contains&nbsp;egavga.bgi <BR />rectangle(<font color=Maroon>0</font>,<font color=Maroon>0</font>,getmaxx(),getmaxy()); <BR />arc(<font color=Maroon>240</font>,<font color=Maroon>120</font>,<font color=Maroon>40</font>,<font color=Maroon>140</font>,<font color=Maroon>70</font>); <BR />ellipse(<font color=Maroon>165</font>,<font color=Maroon>80</font>,<font color=Maroon>10</font>,<font color=Maroon>280</font>,<font color=Maroon>20</font>,<font color=Maroon>20</font>); <BR />ellipse(<font color=Maroon>315</font>,<font color=Maroon>80</font>,-<font color=Maroon>100</font>,<font color=Maroon>170</font>,<font color=Maroon>20</font>,<font color=Maroon>20</font>); <BR />arc(<font color=Maroon>235</font>,<font color=Maroon>120</font>,<font color=Maroon>163</font>,<font color=Maroon>215</font>,<font color=Maroon>70</font>); <BR />arc(<font color=Maroon>245</font>,<font color=Maroon>120</font>,-<font color=Maroon>35</font>,<font color=Maroon>17</font>,<font color=Maroon>70</font>); <BR />ellipse(<font color=Maroon>193</font>,<font color=Maroon>178</font>,<font color=Maroon>85</font>,<font color=Maroon>280</font>,<font color=Maroon>40</font>,<font color=Maroon>20</font>); <BR />ellipse(<font color=Maroon>283</font>,<font color=Maroon>178</font>,-<font color=Maroon>100</font>,<font color=Maroon>95</font>,<font color=Maroon>40</font>,<font color=Maroon>20</font>); <BR />ellipse(<font color=Maroon>238</font>,<font color=Maroon>199</font>,<font color=Maroon>180</font>,<font color=Maroon>0</font>,<font color=Maroon>39</font>,<font color=Maroon>50</font>); <BR />ellipse(<font color=Maroon>213</font>,<font color=Maroon>123</font>,<font color=Maroon>44</font>,<font color=Maroon>240</font>,<font color=Maroon>33</font>,<font color=Maroon>40</font>); <BR />ellipse(<font color=Maroon>262</font>,<font color=Maroon>123</font>,-<font color=Maroon>60</font>,<font color=Maroon>135</font>,<font color=Maroon>33</font>,<font color=Maroon>40</font>); <BR />ellipse(<font color=Maroon>210</font>,<font color=Maroon>123</font>,<font color=Maroon>0</font>,<font color=Maroon>360</font>,<font color=Maroon>13</font>,<font color=Maroon>20</font>);<font color=Green>//left&nbsp;eye</font> <BR />ellipse(<font color=Maroon>265</font>,<font color=Maroon>123</font>,<font color=Maroon>0</font>,<font color=Maroon>360</font>,<font color=Maroon>13</font>,<font color=Maroon>20</font>);<font color=Green>//right&nbsp;eye</font> <BR />ellipse(<font color=Maroon>210</font>,<font color=Maroon>133</font>,<font color=Maroon>0</font>,<font color=Maroon>360</font>,<font color=Maroon>10</font>,<font color=Maroon>10</font>);<font color=Green>//left&nbsp;eye&nbsp;ball</font> <BR />ellipse(<font color=Maroon>265</font>,<font color=Maroon>133</font>,<font color=Maroon>0</font>,<font color=Maroon>360</font>,<font color=Maroon>10</font>,<font color=Maroon>10</font>);<font color=Green>//right&nbsp;eye&nbsp;ball</font> <BR />ellipse(<font color=Maroon>210</font>,<font color=Maroon>133</font>,<font color=Maroon>0</font>,<font color=Maroon>360</font>,<font color=Maroon>3</font>,<font color=Maroon>3</font>);<font color=Green>//left&nbsp;eye&nbsp;ball</font> <BR />ellipse(<font color=Maroon>265</font>,<font color=Maroon>133</font>,<font color=Maroon>0</font>,<font color=Maroon>360</font>,<font color=Maroon>3</font>,<font color=Maroon>3</font>);<font color=Green>//right&nbsp;eye&nbsp;ball</font> <BR />ellipse(<font color=Maroon>238</font>,<font color=Maroon>160</font>,<font color=Maroon>0</font>,<font color=Maroon>360</font>,<font color=Maroon>10</font>,<font color=Maroon>13</font>);<font color=Green>//nose</font> <BR />arc(<font color=Maroon>240</font>,<font color=Maroon>125</font>,<font color=Maroon>228</font>,<font color=Maroon>312</font>,<font color=Maroon>68</font>);<font color=Green>//mouth</font> <BR />arc(<font color=Maroon>240</font>,<font color=Maroon>120</font>,<font color=Maroon>230</font>,<font color=Maroon>310</font>,<font color=Maroon>72</font>);<font color=Green>//mouth</font> <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>4</font>); <BR />floodfill(<font color=Maroon>238</font>,<font color=Maroon>160</font>,<font color=Maroon>15</font>);<font color=Green>//nose</font> <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>15</font>); <BR />floodfill(<font color=Maroon>210</font>,<font color=Maroon>113</font>,<font color=Maroon>15</font>); <BR />floodfill(<font color=Maroon>265</font>,<font color=Maroon>113</font>,<font color=Maroon>15</font>); <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>9</font>); <BR />floodfill(<font color=Maroon>210</font>,<font color=Maroon>100</font>,<font color=Maroon>15</font>); <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>1</font>); <BR />floodfill(<font color=Maroon>315</font>,<font color=Maroon>80</font>,<font color=Maroon>15</font>); <BR />moveto(<font color=Maroon>203</font>,<font color=Maroon>220</font>); <BR />lineto(<font color=Maroon>203</font>,<font color=Maroon>260</font>); <BR />lineto(<font color=Maroon>183</font>,<font color=Maroon>260</font>); <BR />lineto(<font color=Maroon>183</font>,<font color=Maroon>350</font>); <BR />lineto(<font color=Maroon>293</font>,<font color=Maroon>350</font>); <BR />lineto(<font color=Maroon>293</font>,<font color=Maroon>260</font>); <BR />lineto(<font color=Maroon>273</font>,<font color=Maroon>260</font>); <BR />lineto(<font color=Maroon>273</font>,<font color=Maroon>220</font>); <BR />moveto(<font color=Maroon>183</font>,<font color=Maroon>350</font>); <BR />lineto(<font color=Maroon>173</font>,<font color=Maroon>460</font>); <BR />lineto(<font color=Maroon>213</font>,<font color=Maroon>460</font>); <BR />lineto(<font color=Maroon>238</font>,<font color=Maroon>400</font>); <BR />lineto(<font color=Maroon>263</font>,<font color=Maroon>460</font>); <BR />lineto(<font color=Maroon>303</font>,<font color=Maroon>460</font>); <BR />lineto(<font color=Maroon>293</font>,<font color=Maroon>350</font>); <BR />moveto(<font color=Maroon>173</font>,<font color=Maroon>460</font>); <BR />lineto(<font color=Maroon>143</font>,<font color=Maroon>478</font>); <BR />lineto(<font color=Maroon>213</font>,<font color=Maroon>478</font>); <BR />lineto(<font color=Maroon>213</font>,<font color=Maroon>460</font>); <BR />moveto(<font color=Maroon>263</font>,<font color=Maroon>460</font>); <BR />lineto(<font color=Maroon>263</font>,<font color=Maroon>478</font>); <BR />lineto(<font color=Maroon>333</font>,<font color=Maroon>478</font>); <BR />lineto(<font color=Maroon>303</font>,<font color=Maroon>460</font>); <BR />line(<font color=Maroon>238</font>,<font color=Maroon>400</font>,<font color=Maroon>238</font>,<font color=Maroon>350</font>); <BR /><font color=Green>//right&nbsp;hand</font> <BR />moveto(<font color=Maroon>183</font>,<font color=Maroon>260</font>); <BR />lineto(<font color=Maroon>113</font>,<font color=Maroon>310</font>); <BR />lineto(<font color=Maroon>183</font>,<font color=Maroon>375</font>); <BR />moveto(<font color=Maroon>183</font>,<font color=Maroon>280</font>); <BR />lineto(<font color=Maroon>137</font>,<font color=Maroon>310</font>); <BR />lineto(<font color=Maroon>181</font>,<font color=Maroon>353</font>); <BR />setfillstyle(<font color=Maroon>2</font>,<font color=Maroon>13</font>); <BR />floodfill(<font color=Maroon>190</font>,<font color=Maroon>300</font>,<font color=Maroon>15</font>); <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>5</font>); <BR />floodfill(<font color=Maroon>223</font>,<font color=Maroon>400</font>,<font color=Maroon>15</font>); <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>5</font>); <BR />floodfill(<font color=Maroon>253</font>,<font color=Maroon>400</font>,<font color=Maroon>15</font>); <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>6</font>); <BR />floodfill(<font color=Maroon>173</font>,<font color=Maroon>470</font>,<font color=Maroon>15</font>); <BR />floodfill(<font color=Maroon>303</font>,<font color=Maroon>470</font>,<font color=Maroon>15</font>); <BR /><font color=Green>//fingers</font> <BR />secondleft(); <BR />ellipse(<font color=Maroon>413</font><font color=Maroon>.5</font>,<font color=Maroon>228</font>,<font color=Maroon>0</font>,<font color=Maroon>180</font>,<font color=Maroon>3</font><font color=Maroon>.5</font>,<font color=Maroon>3</font><font color=Maroon>.5</font>); <BR />line(<font color=Maroon>420</font>,<font color=Maroon>240</font>,<font color=Maroon>433</font>,<font color=Maroon>240</font>); <BR />line(<font color=Maroon>423</font>,<font color=Maroon>247</font>,<font color=Maroon>440</font>,<font color=Maroon>247</font>); <BR />line(<font color=Maroon>413</font>,<font color=Maroon>240</font>,<font color=Maroon>410</font>,<font color=Maroon>228</font>); <BR />line(<font color=Maroon>417</font>,<font color=Maroon>228</font>,<font color=Maroon>420</font>,<font color=Maroon>240</font>); <BR />ellipse(<font color=Maroon>433</font>,<font color=Maroon>243</font><font color=Maroon>.5</font>,-<font color=Maroon>90</font>,<font color=Maroon>90</font>,<font color=Maroon>3</font><font color=Maroon>.5</font>,<font color=Maroon>3</font><font color=Maroon>.5</font>); <BR />line(<font color=Maroon>423</font>,<font color=Maroon>254</font>,<font color=Maroon>440</font>,<font color=Maroon>254</font>); <BR />ellipse(<font color=Maroon>440</font>,<font color=Maroon>250</font><font color=Maroon>.5</font>,-<font color=Maroon>90</font>,<font color=Maroon>90</font>,<font color=Maroon>3</font><font color=Maroon>.5</font>,<font color=Maroon>3</font><font color=Maroon>.5</font>); <BR />ellipse(<font color=Maroon>430</font>,<font color=Maroon>257</font>,-<font color=Maroon>90</font>,<font color=Maroon>90</font>,<font color=Maroon>3</font>,<font color=Maroon>3</font>); <BR />line(<font color=Maroon>413</font>,<font color=Maroon>260</font>,<font color=Maroon>430</font>,<font color=Maroon>260</font>); <BR />area=imagesize(<font color=Maroon>409</font>,<font color=Maroon>224</font>,<font color=Maroon>444</font>,<font color=Maroon>261</font>); <BR />buf=malloc(area); <BR />getimage(<font color=Maroon>409</font>,<font color=Maroon>224</font>,<font color=Maroon>444</font>,<font color=Maroon>261</font>,buf); <BR /><font color=Blue>while</font>(!kbhit()) <BR />{ <BR /><font color=Blue>if</font>(i==<font color=Maroon>0</font>) <BR />{ <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>15</font>); <BR />setcolor(<font color=Maroon>15</font>); <BR />ellipse(<font color=Maroon>210</font>,<font color=Maroon>133</font>,<font color=Maroon>0</font>,<font color=Maroon>360</font>,<font color=Maroon>10</font>,<font color=Maroon>10</font>);<font color=Green>//left&nbsp;eye&nbsp;ball</font> <BR />ellipse(<font color=Maroon>265</font>,<font color=Maroon>133</font>,<font color=Maroon>0</font>,<font color=Maroon>360</font>,<font color=Maroon>10</font>,<font color=Maroon>10</font>);<font color=Green>//right&nbsp;eye&nbsp;ball</font> <BR />setcolor(<font color=Maroon>0</font>); <BR />ellipse(<font color=Maroon>210</font>,<font color=Maroon>133</font>,<font color=Maroon>0</font>,<font color=Maroon>360</font>,<font color=Maroon>3</font>,<font color=Maroon>3</font>);<font color=Green>//left&nbsp;eye&nbsp;ball</font> <BR />ellipse(<font color=Maroon>265</font>,<font color=Maroon>133</font>,<font color=Maroon>0</font>,<font color=Maroon>360</font>,<font color=Maroon>3</font>,<font color=Maroon>3</font>);<font color=Green>//right&nbsp;eye&nbsp;ball</font> <BR />floodfill(<font color=Maroon>210</font>,<font color=Maroon>133</font>,<font color=Maroon>15</font>); <BR />floodfill(<font color=Maroon>265</font>,<font color=Maroon>133</font>,<font color=Maroon>15</font>); <BR />setcolor(<font color=Maroon>0</font>); <BR />putimage(<font color=Maroon>391</font>,<font color=Maroon>209</font>,buf,<font color=Maroon>1</font>); <BR />firstleft(); <BR />setcolor(<font color=Maroon>15</font>); <BR />secondleft(); <BR />putimage(<font color=Maroon>409</font>,<font color=Maroon>224</font>,buf,<font color=Maroon>0</font>); <BR />i=<font color=Maroon>1</font>; <BR />} <BR /><font color=Blue>else</font> <BR />{ <BR />setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>0</font>); <BR />setcolor(<font color=Maroon>0</font>); <BR />ellipse(<font color=Maroon>210</font>,<font color=Maroon>133</font>,<font color=Maroon>0</font>,<font color=Maroon>360</font>,<font color=Maroon>10</font>,<font color=Maroon>10</font>);<font color=Green>//left&nbsp;eye&nbsp;ball</font> <BR />ellipse(<font color=Maroon>265</font>,<font color=Maroon>133</font>,<font color=Maroon>0</font>,<font color=Maroon>360</font>,<font color=Maroon>10</font>,<font color=Maroon>10</font>);<font color=Green>//right&nbsp;eye&nbsp;ball</font> <BR />floodfill(<font color=Maroon>210</font>,<font color=Maroon>133</font>,<font color=Maroon>0</font>); <BR />floodfill(<font color=Maroon>265</font>,<font color=Maroon>133</font>,<font color=Maroon>0</font>); <BR />setcolor(<font color=Maroon>15</font>); <BR />ellipse(<font color=Maroon>210</font>,<font color=Maroon>133</font>,<font color=Maroon>0</font>,<font color=Maroon>360</font>,<font color=Maroon>3</font>,<font color=Maroon>3</font>);<font color=Green>//left&nbsp;eye&nbsp;ball</font> <BR />ellipse(<font color=Maroon>265</font>,<font color=Maroon>133</font>,<font color=Maroon>0</font>,<font color=Maroon>360</font>,<font color=Maroon>3</font>,<font color=Maroon>3</font>);<font color=Green>//right&nbsp;eye&nbsp;ball</font> <BR />floodfill(<font color=Maroon>210</font>,<font color=Maroon>133</font>,<font color=Maroon>15</font>); <BR />floodfill(<font color=Maroon>265</font>,<font color=Maroon>133</font>,<font color=Maroon>15</font>); <BR />setcolor(<font color=Maroon>0</font>); <BR />putimage(<font color=Maroon>409</font>,<font color=Maroon>224</font>,buf,<font color=Maroon>1</font>); <BR />secondleft(); <BR />setcolor(<font color=Maroon>15</font>); <BR />firstleft(); <BR />putimage(<font color=Maroon>391</font>,<font color=Maroon>209</font>,buf,<font color=Maroon>0</font>); <BR />i=<font color=Maroon>0</font>; <BR />} <BR />delay(<font color=Maroon>300</font>); <BR />} <BR />getch(); <BR />} <BR /><font color=Blue>void</font>&nbsp;firstleft() <BR />{ <BR />moveto(<font color=Maroon>293</font>,<font color=Maroon>260</font>); <BR />lineto(<font color=Maroon>353</font>,<font color=Maroon>276</font>); <BR />lineto(<font color=Maroon>395</font>,<font color=Maroon>223</font>); <BR />moveto(<font color=Maroon>293</font>,<font color=Maroon>280</font>); <BR />lineto(<font color=Maroon>355</font>,<font color=Maroon>296</font>); <BR />lineto(<font color=Maroon>395</font>,<font color=Maroon>245</font>); <BR />} <BR /><font color=Blue>void</font>&nbsp;secondleft() <BR />{ <BR />moveto(<font color=Maroon>293</font>,<font color=Maroon>260</font>); <BR />lineto(<font color=Maroon>363</font>,<font color=Maroon>280</font>); <BR />lineto(<font color=Maroon>413</font>,<font color=Maroon>240</font>); <BR />moveto(<font color=Maroon>293</font>,<font color=Maroon>280</font>); <BR />lineto(<font color=Maroon>363</font>,<font color=Maroon>300</font>); <BR />lineto(<font color=Maroon>413</font>,<font color=Maroon>260</font>); <BR />} <BR /></div> 
           
           
            ]]>
        </string>
           
                 <string name="CNeedlesAndBalloonsGame" formatted="false"> 
        <![CDATA[ 
           
           <div>Needle&nbsp;&amp;&nbsp;ballons. <BR /> <BR />#<font color=Blue>include</font>&lt;dos.h&gt; <BR />#<font color=Blue>include</font>&lt;graphics.h&gt; <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;stdlib.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR /><font color=Blue>union</font>&nbsp;REGS&nbsp;in,o; <BR /> <BR />circ() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>15</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(<font color=Maroon>320</font>,<font color=Maroon>240</font>,i*<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;rectangle(<font color=Maroon>240</font>,<font color=Maroon>160</font>,<font color=Maroon>400</font>,<font color=Maroon>320</font>); <BR />} <BR /> <BR />bulb() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i=<font color=Maroon>1</font>,c=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;randomize(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(!kbhit()) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>((i%<font color=Maroon>2</font>)==<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(c++); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,getcolor()); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(<font color=Maroon>320</font>,<font color=Maroon>240</font>,i*<font color=Maroon>20</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;putpixel(<font color=Maroon>320</font>-i+<font color=Maroon>2</font>,<font color=Maroon>240</font>-i+<font color=Maroon>2</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floodfill(<font color=Maroon>320</font>-i+<font color=Maroon>2</font>,<font color=Maroon>240</font>-i+<font color=Maroon>2</font>,getcolor()); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>1000</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(i&gt;=<font color=Maroon>5</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />} <BR /> <BR />dot() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i,j,of=<font color=Maroon>40</font>,wid=<font color=Maroon>5</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>8</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,getcolor()); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=of;i&lt;getmaxx();i+=of) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(i,<font color=Maroon>0</font>,i+wid,getmaxy()); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=of;i&lt;getmaxy();i+=of) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>0</font>,i,getmaxx(),i+wid); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=of;i&lt;getmaxx();i+=of) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=of;j&lt;getmaxy();j+=of) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,getcolor()); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(i+<font color=Maroon>2</font>,j+<font color=Maroon>2</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floodfill(i+<font color=Maroon>2</font>,j+<font color=Maroon>2</font>,getcolor()); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;main() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;x=<font color=Maroon>0</font>,y=<font color=Maroon>10</font>,gd=DETECT,gm,i; <BR />&nbsp;&nbsp;&nbsp;&nbsp;initgraph(&amp;gd,&amp;gm,<font color=Maroon>"c:\tc\bgi"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(YELLOW); <BR />&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>1</font>,<font color=Maroon>0</font>,<font color=Maroon>6</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>0</font>,<font color=Maroon>240</font>,<font color=Maroon>"Count&nbsp;the&nbsp;black&nbsp;dots....."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;sleep(<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;cleardevice(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;dot(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;cleardevice(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(YELLOW); <BR />&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>1</font>,<font color=Maroon>0</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>0</font>,<font color=Maroon>240</font>,<font color=Maroon>"I&nbsp;bet&nbsp;the&nbsp;lines&nbsp;of&nbsp;rectangle&nbsp;are&nbsp;straight....."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;sleep(<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;cleardevice(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;circ(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;closegraph(); <BR />} <BR /></div>
             ]]>
        </string>
        
           <string name="COilSpillGame" formatted="false"> 
        <![CDATA[  
           <div>Oil&nbsp;Spill&nbsp;Game&nbsp;in&nbsp;C. <BR /> <BR />#<font color=Blue>include</font>&lt;graphics.h&gt; <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;stdlib.h&gt; <BR />#<font color=Blue>include</font>&lt;time.h&gt; <BR />#<font color=Blue>include</font>&lt;dos.h&gt; <BR /> <BR /><font color=Blue>#define</font>&nbsp;L&nbsp;&nbsp;<font color=Maroon>75</font> <BR /><font color=Blue>#define</font>&nbsp;R&nbsp;&nbsp;<font color=Maroon>77</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>/*&nbsp;&nbsp;variable&nbsp;initialisations&nbsp;*/</font> <BR /> <BR /><font color=Blue>union</font>&nbsp;REGS&nbsp;i,o; <BR /><font color=Blue>int</font>&nbsp;ch1,ch2; <BR /><font color=Blue>int</font>&nbsp;mx,my,vx=<font color=Maroon>270</font>,vy; <BR /><font color=Blue>int</font>&nbsp;temp,retval; <BR /><font color=Blue>char</font>&nbsp;s[<font color=Maroon>20</font>],s1[<font color=Maroon>20</font>]; <BR /><font color=Blue>char</font>&nbsp;ch; <BR /><font color=Blue>int</font>&nbsp;gd=DETECT,gm; <BR /><font color=Blue>int</font>&nbsp;x,y=<font color=Maroon>400</font>,r,c=<font color=Maroon>7</font>,score=<font color=Maroon>0</font>,lifes=<font color=Maroon>4</font>,flag=<font color=Maroon>0</font>,dlyfactor=<font color=Maroon>0</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>/*&nbsp;&nbsp;main&nbsp;function&nbsp;*/</font> <BR />main() <BR />{ <BR />&nbsp;initialise(); <BR />&nbsp;firstscreen(); <BR />&nbsp;displaylifes(); <BR />&nbsp;displayscore(); <BR />&nbsp;welcome(); <BR />&nbsp;<font color=Blue>while</font>(<font color=Maroon>1</font>) <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;condition1(); <BR />&nbsp;&nbsp;&nbsp;display_drop(); <BR />&nbsp;&nbsp;&nbsp;is_keyhit(); <BR />&nbsp;&nbsp;&nbsp;check_catchdrop(); <BR />&nbsp;&nbsp;&nbsp;check_looselife(); <BR />&nbsp;} <BR />&nbsp;&nbsp;nosound(); <BR />} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>/*&nbsp;&nbsp;sub&nbsp;functions&nbsp;*/</font> <BR /> <BR /> <BR />initialise() <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;initgraph(&amp;gd,&amp;gm,<font color=Maroon>""</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;mx=getmaxx();my=getmaxy(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;x=mx/<font color=Maroon>2</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;image(x,y,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;vy=<font color=Maroon>20</font>; <BR />&nbsp;} <BR />firstscreen() <BR />&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button3d(<font color=Maroon>100</font>,<font color=Maroon>0</font>,<font color=Maroon>430</font>,<font color=Maroon>5</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button3d(<font color=Maroon>100</font>,<font color=Maroon>0</font>,<font color=Maroon>5</font>,<font color=Maroon>450</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button3d(<font color=Maroon>100</font>,<font color=Maroon>450</font>,<font color=Maroon>430</font>,<font color=Maroon>5</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button3d(<font color=Maroon>525</font>,<font color=Maroon>0</font>,<font color=Maroon>5</font>,<font color=Maroon>455</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>7</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>270</font>,<font color=Maroon>5</font>,<font color=Maroon>275</font>,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>320</font>,<font color=Maroon>5</font>,<font color=Maroon>325</font>,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>370</font>,<font color=Maroon>5</font>,<font color=Maroon>375</font>,<font color=Maroon>10</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>8</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>267</font>,<font color=Maroon>10</font>,<font color=Maroon>278</font>,<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>317</font>,<font color=Maroon>10</font>,<font color=Maroon>328</font>,<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>367</font>,<font color=Maroon>10</font>,<font color=Maroon>378</font>,<font color=Maroon>15</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button3d(<font color=Maroon>280</font>,<font color=Maroon>448</font>,<font color=Maroon>80</font>,<font color=Maroon>9</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>290</font>,<font color=Maroon>450</font>,<font color=Maroon>"OIL&nbsp;SPIL"</font>); <BR />&nbsp;} <BR />welcome() <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>200</font>,<font color=Maroon>250</font>,<font color=Maroon>450</font>,<font color=Maroon>350</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clk_but3d(<font color=Maroon>200</font>,<font color=Maroon>250</font>,<font color=Maroon>250</font>,<font color=Maroon>100</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>0</font>,<font color=Maroon>0</font>,<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>240</font>,<font color=Maroon>280</font>,<font color=Maroon>"&nbsp;WELCOME"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>215</font>,<font color=Maroon>310</font>,&nbsp;<font color=Maroon>"&nbsp;TO&nbsp;OILSPIL"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>200</font>,<font color=Maroon>250</font>,<font color=Maroon>453</font>,<font color=Maroon>353</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>; <BR />&nbsp;&nbsp;} <BR /> <BR /> <BR />is_keyhit() <BR />&nbsp;{ <BR />&nbsp;&nbsp;<font color=Blue>if</font>(kbhit()) <BR />&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i.h.ah=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;int86(<font color=Maroon>22</font>,&amp;i,&amp;o); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(o.h.ah==<font color=Maroon>1</font>)&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;nosound();closegraph();exit(<font color=Maroon>0</font>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(o.h.ah==<font color=Maroon>75</font>)&nbsp;{ <BR />sound(<font color=Maroon>1800</font>);image(x,y,<font color=Maroon>0</font>);x=x-<font color=Maroon>10</font>;image(x,y,c);nosound();&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(o.h.ah==<font color=Maroon>77</font>)&nbsp;{ <BR />sound(<font color=Maroon>1800</font>);image(x,y,<font color=Maroon>0</font>);x=x+<font color=Maroon>10</font>;image(x,y,c);nosound();&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(o.h.ah==<font color=Maroon>80</font>)&nbsp;{&nbsp;&nbsp;&nbsp;dlyfactor+=<font color=Maroon>250</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(o.h.ah==<font color=Maroon>72</font>)&nbsp;{&nbsp;&nbsp;&nbsp;dlyfactor-=<font color=Maroon>250</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;} <BR />&nbsp;} <BR />image(<font color=Blue>int</font>&nbsp;x,<font color=Blue>int</font>&nbsp;y,<font color=Blue>int</font>&nbsp;c) <BR />&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;b; <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;rectangle(x-<font color=Maroon>10</font>,y+<font color=Maroon>6</font>,x+<font color=Maroon>10</font>,y+<font color=Maroon>20</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;line(x-<font color=Maroon>9</font>,y+<font color=Maroon>6</font>,x+<font color=Maroon>9</font>,y+<font color=Maroon>6</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;bar(x-<font color=Maroon>9</font>,y+<font color=Maroon>6</font>,x+<font color=Maroon>9</font>,y+<font color=Maroon>19</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(x-<font color=Maroon>6</font>,y+<font color=Maroon>6</font>,x+<font color=Maroon>6</font>,y+<font color=Maroon>19</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(b=<font color=Maroon>1</font>;b&lt;=<font color=Maroon>6</font>;b++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;line(x-<font color=Maroon>10</font>+b,y+<font color=Maroon>19</font>+b,x+<font color=Maroon>10</font>-b,y+<font color=Maroon>19</font>+b); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;bar(x-<font color=Maroon>1</font>,y+<font color=Maroon>19</font>+b,x+<font color=Maroon>1</font>,y+<font color=Maroon>25</font>+b); <BR />&nbsp;&nbsp;&nbsp;&nbsp;fillellipse(x,y+<font color=Maroon>25</font>+b+<font color=Maroon>3</font>,<font color=Maroon>8</font>,<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;} <BR />object(<font color=Blue>int</font>&nbsp;x,<font color=Blue>int</font>&nbsp;y,<font color=Blue>int</font>&nbsp;c) <BR />&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;fillellipse(x,y+<font color=Maroon>5</font>,<font color=Maroon>4</font>,<font color=Maroon>8</font>); <BR />&nbsp;&nbsp;} <BR />condition1() <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(flag==<font color=Maroon>1</font>||vy&gt;<font color=Maroon>410</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vy&nbsp;=&nbsp;<font color=Maroon>20</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp&nbsp;=&nbsp;random(<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(temp==<font color=Maroon>0</font>)&nbsp;&nbsp;vx=<font color=Maroon>270</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(temp==<font color=Maroon>1</font>)&nbsp;vx=<font color=Maroon>320</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(temp==<font color=Maroon>2</font>)&nbsp;vx&nbsp;=<font color=Maroon>370</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR /> <BR />check_looselife() <BR />&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(lifes==<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>200</font>,<font color=Maroon>250</font>,<font color=Maroon>450</font>,<font color=Maroon>350</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clk_but3d(<font color=Maroon>200</font>,<font color=Maroon>250</font>,<font color=Maroon>250</font>,<font color=Maroon>100</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>0</font>,<font color=Maroon>0</font>,<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>240</font>,<font color=Maroon>290</font>,<font color=Maroon>"GAME&nbsp;OVER"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;closegraph(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;play_again(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;} <BR />display_drop() <BR />&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;object(vx,vy,<font color=Maroon>8</font>); <BR />&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>3000</font>+dlyfactor); <BR />&nbsp;&nbsp;&nbsp;object(vx,vy,<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;vy+=<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;} <BR />check_catchdrop() <BR />&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>((x-<font color=Maroon>5</font>&lt;=vx)&amp;&amp;(vx&lt;=x+<font color=Maroon>5</font>)&amp;&amp;vy==<font color=Maroon>410</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;displayscore(); <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(vy&gt;<font color=Maroon>410</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;displaylifes(); <BR />&nbsp;&nbsp;&nbsp;nosound(); <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;displaylifes() <BR />&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>0</font>,<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clk_but3d(<font color=Maroon>0</font>,<font color=Maroon>440</font>,<font color=Maroon>90</font>,<font color=Maroon>13</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>7</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>5</font>,<font color=Maroon>445</font>,s1); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lifes&nbsp;=&nbsp;lifes&nbsp;-<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sprintf(s1,<font color=Maroon>"LIFES&nbsp;=&nbsp;%d"</font>,&nbsp;lifes); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>5</font>,<font color=Maroon>445</font>,s1); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;displayscore() <BR />&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>0</font>,<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clk_but3d(<font color=Maroon>540</font>,<font color=Maroon>440</font>,<font color=Maroon>90</font>,<font color=Maroon>13</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>7</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>545</font>,<font color=Maroon>445</font>,s); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;score=score+<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sprintf(s,<font color=Maroon>"SCORE&nbsp;=&nbsp;%d"</font>,score); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>545</font>,<font color=Maroon>445</font>,s); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;vy=<font color=Maroon>20</font>; <BR />&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;button3d(<font color=Blue>int</font>&nbsp;x,<font color=Blue>int</font>&nbsp;y,<font color=Blue>int</font>&nbsp;l,<font color=Blue>int</font>&nbsp;w) <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(LIGHTGRAY); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,LIGHTGRAY); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;bar(x,y,x+l,y+w); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(WHITE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;line(x,y,x+l,y); <BR />&nbsp;&nbsp;&nbsp;&nbsp;line(x,y,x,y+w); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(DARKGRAY); <BR />&nbsp;&nbsp;&nbsp;&nbsp;line(x+l+<font color=Maroon>1</font>,y,x+l+<font color=Maroon>1</font>,y+w+<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;line(x,y+w+<font color=Maroon>1</font>,x+l+<font color=Maroon>1</font>,y+w+<font color=Maroon>1</font>); <BR />&nbsp;} <BR />&nbsp;clk_but3d(<font color=Blue>int</font>&nbsp;x,<font color=Blue>int</font>&nbsp;y,<font color=Blue>int</font>&nbsp;l,<font color=Blue>int</font>&nbsp;w) <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(LIGHTGRAY); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,LIGHTGRAY); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;bar(x,y,x+l,y+w); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(DARKGRAY); <BR />&nbsp;&nbsp;&nbsp;&nbsp;line(x,y,x+l,y); <BR />&nbsp;&nbsp;&nbsp;&nbsp;line(x,y,x,y+w); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(WHITE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;line(x+l+<font color=Maroon>1</font>,y,x+l+<font color=Maroon>1</font>,y+w+<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;line(x,y+w+<font color=Maroon>1</font>,x+l+<font color=Maroon>1</font>,y+w+<font color=Maroon>1</font>); <BR />&nbsp;} <BR /> <BR /> <BR />&nbsp;letter(<font color=Blue>int</font>&nbsp;x,<font color=Blue>int</font>&nbsp;y,<font color=Blue>int</font>&nbsp;l,<font color=Blue>int</font>&nbsp;w) <BR />&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;s[<font color=Maroon>1</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;ch=<font color=Maroon>3</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(RED); <BR />&nbsp;&nbsp;&nbsp;&nbsp;sprintf(s,<font color=Maroon>"%c"</font>,ch); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(x&nbsp;+&nbsp;l/<font color=Maroon>4</font>&nbsp;+&nbsp;<font color=Maroon>2</font>,y&nbsp;+&nbsp;w/<font color=Maroon>5</font>,&nbsp;s); <BR />&nbsp;&nbsp;} <BR />&nbsp;restore_defaults() <BR />&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;y=<font color=Maroon>400</font>;c=<font color=Maroon>7</font>;score=<font color=Maroon>0</font>;lifes=<font color=Maroon>4</font>;flag=<font color=Maroon>0</font>;dlyfactor=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;} <BR />&nbsp;play_again() <BR />&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"To&nbsp;Play&nbsp;again&nbsp;Press&nbsp;y"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(getch()==<font color=Maroon>y</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;restore_defaults(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;main(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /></div> 
         ]]>
        </string>
        
           
           
           
           
           
           
            
            
     <string name="CprojectBalloonShooting" formatted="false"> 
        <![CDATA[
     <div>Balloon&nbsp;Shooting&nbsp;-&nbsp;A&nbsp;Game&nbsp;(&nbsp;Mini&nbsp;Project&nbsp;) <BR /> <BR />#&nbsp;<font color=Blue>include</font>&nbsp;<font color=Maroon>"graphics.h"</font> <BR />#&nbsp;<font color=Blue>include</font>&nbsp;<font color=Maroon>"conio.h"</font> <BR />#&nbsp;<font color=Blue>include</font>&nbsp;<font color=Maroon>"stdio.h"</font> <BR />#&nbsp;<font color=Blue>include</font>&nbsp;<font color=Maroon>"stdlib.h"</font> <BR />#&nbsp;<font color=Blue>include</font>&nbsp;<font color=Maroon>"dos.h"</font> <BR /><font color=Blue>#define</font>&nbsp;ARROW_SIZE&nbsp;<font color=Maroon>7</font> <BR /><font color=Blue>#define</font>&nbsp;BALLOON_SIZE&nbsp;<font color=Maroon>3</font> <BR /> <BR /><font color=Blue>int</font>&nbsp;flag_arrow=<font color=Maroon>0</font>,flag_balloon=<font color=Maroon>1</font>,count_arrow=<font color=Maroon>6</font>,count_balloon=<font color=Maroon>10</font>; <BR /><font color=Blue>void</font>&nbsp;*balloon,*bow,*arrow,*burst; <BR /><font color=Blue>void</font>&nbsp;*clear_balloon,*clear_burst; <BR /><font color=Blue>void</font>&nbsp;draw_balloon(<font color=Blue>int</font>&nbsp;,<font color=Blue>int</font>&nbsp;); <BR /><font color=Blue>void</font>&nbsp;draw_burst&nbsp;(&nbsp;<font color=Blue>int</font>&nbsp;x,&nbsp;<font color=Blue>int</font>&nbsp;y&nbsp;); <BR /><font color=Blue>void</font>&nbsp;draw_bow(<font color=Blue>int</font>&nbsp;x,<font color=Blue>int</font>&nbsp;y); <BR /><font color=Blue>void</font>&nbsp;draw_arrow(<font color=Blue>int</font>&nbsp;x,&nbsp;<font color=Blue>int</font>&nbsp;y); <BR /><font color=Blue>void</font>&nbsp;shoot(<font color=Blue>int</font>&nbsp;*x,&nbsp;<font color=Blue>int</font>&nbsp;*y); <BR /><font color=Blue>int</font>&nbsp;testkeys(); <BR /><font color=Blue>void</font>&nbsp;fly(<font color=Blue>int</font>&nbsp;*x,&nbsp;<font color=Blue>int</font>&nbsp;*y); <BR /><font color=Blue>void</font>&nbsp;start(); <BR /> <BR /><font color=Blue>void</font>&nbsp;main() <BR />{ <BR /><font color=Blue>int</font>&nbsp;gmode&nbsp;=&nbsp;DETECT,&nbsp;gdriver&nbsp;,&nbsp;area&nbsp;; <BR />initgraph&nbsp;(&nbsp;&amp;gmode,&nbsp;&amp;gdriver,&nbsp;"c:\tc\bgi\"&nbsp;)&nbsp;; <BR />setbkcolor(<font color=Maroon>1</font>); <BR />start(); <BR /><font color=Blue>int</font>&nbsp;maxx&nbsp;=&nbsp;getmaxx()&nbsp;; <BR /><font color=Blue>int</font>&nbsp;maxy&nbsp;=&nbsp;getmaxy()&nbsp;; <BR /><font color=Blue>int</font>&nbsp;p=<font color=Maroon>400</font>,q=<font color=Maroon>300</font>,m=<font color=Maroon>100</font>,n=<font color=Maroon>100</font>,x=m,y=n,key,score=<font color=Maroon>0</font>,finish=<font color=Maroon>0</font>,level=<font color=Maroon>1</font>,l_flag=<font color=Maroon>1</font>; <BR /><font color=Blue>char</font>&nbsp;score1[<font color=Maroon>5</font>],ch,cnt_ball[<font color=Maroon>5</font>],char_level[<font color=Maroon>2</font>]; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;rectangle&nbsp;(&nbsp;<font color=Maroon>0</font>,&nbsp;<font color=Maroon>0</font>,&nbsp;maxx,&nbsp;maxy&nbsp;-&nbsp;<font color=Maroon>10</font>&nbsp;)&nbsp;; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;draw_burst(<font color=Maroon>200</font>,<font color=Maroon>300</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;area=imagesize(<font color=Maroon>0</font>,<font color=Maroon>0</font>,<font color=Maroon>32</font>,<font color=Maroon>24</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;burst=malloc(area); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getimage(<font color=Maroon>200</font>-<font color=Maroon>16</font>,<font color=Maroon>300</font>-<font color=Maroon>12</font>,<font color=Maroon>200</font>+<font color=Maroon>16</font>,<font color=Maroon>300</font>+<font color=Maroon>12</font>,burst); <BR />&nbsp;&nbsp;&nbsp;&nbsp;putimage(<font color=Maroon>200</font>-<font color=Maroon>16</font>,<font color=Maroon>300</font>-<font color=Maroon>12</font>,burst,XOR_PUT); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;draw_balloon(p,q); <BR /> <BR />area=imagesize(p-<font color=Maroon>4</font>*BALLOON_SIZE,q-<font color=Maroon>5</font>*BALLOON_SIZE,p+<font color=Maroon>4</font>*BALLOON_SIZE,q+<font color=Maroon>7</font>*BALLOON_SIZE); <BR />balloon=malloc(area); <BR /> <BR />getimage(p-<font color=Maroon>4</font>*BALLOON_SIZE,q-<font color=Maroon>5</font>*BALLOON_SIZE,p+<font color=Maroon>4</font>*BALLOON_SIZE,q+<font color=Maroon>7</font>*BALLOON_SIZE,balloon); <BR />&nbsp;&nbsp;&nbsp;&nbsp;putimage(p-<font color=Maroon>4</font>*BALLOON_SIZE,&nbsp;q-<font color=Maroon>5</font>*BALLOON_SIZE,&nbsp;balloon,&nbsp;COPY_PUT); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;draw_arrow(x&nbsp;,y&nbsp;&nbsp;); <BR />&nbsp;&nbsp;&nbsp;&nbsp;area&nbsp;=&nbsp;imagesize(x,&nbsp;y-ARROW_SIZE,&nbsp;x+(<font color=Maroon>6</font>*ARROW_SIZE),&nbsp;y+ARROW_SIZE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;arrow=malloc(area); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getimage(x,&nbsp;y-ARROW_SIZE,&nbsp;x+(<font color=Maroon>6</font>*ARROW_SIZE),&nbsp;y+ARROW_SIZE,arrow); <BR />&nbsp;&nbsp;&nbsp;&nbsp;putimage(x,&nbsp;y-ARROW_SIZE,arrow,XOR_PUT); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;draw_bow(x,y); <BR />&nbsp;&nbsp;&nbsp;&nbsp;area=imagesize(x+<font color=Maroon>25</font>,y-<font color=Maroon>65</font>,x+<font color=Maroon>66</font>,y+<font color=Maroon>65</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;bow=malloc(area); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getimage(x+<font color=Maroon>25</font>,y-<font color=Maroon>65</font>,x+<font color=Maroon>66</font>,y+<font color=Maroon>65</font>,bow); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>&nbsp;(&nbsp;balloon&nbsp;==&nbsp;<font color=Blue>NULL</font>&nbsp;||&nbsp;burst&nbsp;==&nbsp;<font color=Blue>NULL</font>&nbsp;||&nbsp;bow&nbsp;==&nbsp;<font color=Blue>NULL</font>&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(&nbsp;" <BR />Insufficient&nbsp;memory...&nbsp;Press&nbsp;any&nbsp;key&nbsp;"&nbsp;)&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch()&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;closegraph()&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;restorecrtmode()&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(&nbsp;<font color=Maroon>0</font>&nbsp;)&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>&nbsp;(!finish) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>8</font>,<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setusercharsize(<font color=Maroon>4</font>,<font color=Maroon>4</font>,<font color=Maroon>3</font>,<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(getmaxx()/<font color=Maroon>2</font>-<font color=Maroon>100</font>,<font color=Maroon>5</font>,<font color=Maroon>"LEVEL&nbsp;:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itoa(level,char_level,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>0</font>,<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(getmaxx()/<font color=Maroon>2</font>+<font color=Maroon>40</font>,<font color=Maroon>15</font>,getmaxx()/<font color=Maroon>2</font>+<font color=Maroon>70</font>,<font color=Maroon>45</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(getmaxx()/<font color=Maroon>2</font>+<font color=Maroon>50</font>,<font color=Maroon>5</font>,char_level); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rectangle(<font color=Maroon>5</font>,<font color=Maroon>360</font>,<font color=Maroon>250</font>,<font color=Maroon>460</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(&nbsp;flag_balloon&nbsp;&amp;&amp;&nbsp;count_balloon&gt;<font color=Maroon>0</font>&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fly(&nbsp;&amp;p,&nbsp;&amp;q&nbsp;); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;q&nbsp;=&nbsp;<font color=Maroon>400</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag_balloon&nbsp;=&nbsp;<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(&nbsp;kbhit()&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key&nbsp;=&nbsp;testkeys(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(key==<font color=Maroon>77</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag_arrow&nbsp;=&nbsp;<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(&nbsp;key&nbsp;==&nbsp;<font color=Maroon>27</font>&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>&nbsp;(key&nbsp;==&nbsp;<font color=Maroon>80</font>&nbsp;&amp;&amp;!flag_arrow) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x=<font color=Maroon>125</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;putimage(x,y-<font color=Maroon>65</font>,bow,XOR_PUT); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(y&lt;<font color=Maroon>300</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y+=<font color=Maroon>25</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;putimage(x,y-<font color=Maroon>65</font>,bow,XOR_PUT); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw_bow(x-<font color=Maroon>25</font>,y); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>&nbsp;(key&nbsp;==&nbsp;<font color=Maroon>72</font>&nbsp;&amp;&amp;!flag_arrow) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x=<font color=Maroon>125</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;putimage(x,y-<font color=Maroon>65</font>,bow,XOR_PUT); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(y&gt;<font color=Maroon>70</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y-=<font color=Maroon>25</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;putimage(x,y-<font color=Maroon>65</font>,bow,XOR_PUT); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw_bow(x-<font color=Maroon>25</font>,y); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(count_arrow&nbsp;&gt;&nbsp;<font color=Maroon>0</font>&nbsp;&amp;&amp;&nbsp;count_balloon&nbsp;&gt;&nbsp;<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(score==<font color=Maroon>100</font>&nbsp;&amp;&amp;&nbsp;l_flag==<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;level=<font color=Maroon>2</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count_balloon=<font color=Maroon>8</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count_arrow=<font color=Maroon>6</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;l_flag=<font color=Maroon>2</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(score==<font color=Maroon>180</font>&nbsp;&amp;&amp;&nbsp;l_flag==<font color=Maroon>2</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;level=<font color=Maroon>3</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count_balloon=<font color=Maroon>6</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count_arrow=<font color=Maroon>6</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;l_flag=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(&nbsp;key&nbsp;==&nbsp;<font color=Maroon>77</font>&nbsp;||&nbsp;flag_arrow) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;shoot(&amp;x,&amp;y); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw_bow(m,y); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(x&gt;(p-<font color=Maroon>12</font>)&nbsp;&amp;&amp;&nbsp;x&lt;(p+<font color=Maroon>12</font>)&nbsp;&amp;&amp;&nbsp;y&gt;(q-<font color=Maroon>15</font>)&nbsp;&amp;&amp;&nbsp;y&lt;(q+<font color=Maroon>25</font>)) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;putimage(p-<font color=Maroon>16</font>,q-<font color=Maroon>12</font>,burst,COPY_PUT); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sound(<font color=Maroon>1500</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>800</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nosound(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;putimage(p-<font color=Maroon>16</font>,q-<font color=Maroon>12</font>,burst,XOR_PUT); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count_balloon--; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>10</font>,<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setusercharsize(<font color=Maroon>30</font>,<font color=Maroon>70</font>,<font color=Maroon>20</font>,<font color=Maroon>70</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>20</font>,<font color=Maroon>380</font>,<font color=Maroon>"BALLOONS&nbsp;LEFT:"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>0</font>,<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>200</font>,<font color=Maroon>370</font>,<font color=Maroon>230</font>,<font color=Maroon>400</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itoa(count_balloon,cnt_ball,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>200</font>,<font color=Maroon>380</font>,cnt_ball); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag_balloon=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;score+=<font color=Maroon>20</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itoa(score,score1,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>0</font>,<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>190</font>,getmaxy()-<font color=Maroon>50</font>,<font color=Maroon>230</font>,getmaxy()-<font color=Maroon>30</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(RED); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>20</font>,getmaxy()-<font color=Maroon>50</font>,<font color=Maroon>"SCORE&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>190</font>,getmaxy()-<font color=Maroon>50</font>,score1); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;key=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;clearviewport(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setbkcolor(<font color=Maroon>9</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>4</font>,<font color=Maroon>0</font>,<font color=Maroon>7</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setusercharsize(<font color=Maroon>120</font>,<font color=Maroon>50</font>,<font color=Maroon>120</font>,<font color=Maroon>40</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(getmaxx()/<font color=Maroon>2</font>-<font color=Maroon>220</font>,getmaxy()/<font color=Maroon>2</font>-<font color=Maroon>180</font>,<font color=Maroon>"GAME&nbsp;OVER"</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>8</font>,<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setusercharsize(<font color=Maroon>50</font>,<font color=Maroon>60</font>,<font color=Maroon>40</font>,<font color=Maroon>50</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(count_arrow&lt;=<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(getmaxx()/<font color=Maroon>2</font>-<font color=Maroon>100</font>,getmaxy()/<font color=Maroon>2</font>-<font color=Maroon>70</font>,<font color=Maroon>"NO&nbsp;MORE&nbsp;ARROWS"</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(count_balloon&lt;=<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(getmaxx()/<font color=Maroon>2</font>-<font color=Maroon>120</font>,getmaxy()/<font color=Maroon>2</font>-<font color=Maroon>70</font>,<font color=Maroon>"NO&nbsp;MORE&nbsp;BALLOONS"</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(getmaxx()/<font color=Maroon>2</font>-<font color=Maroon>120</font>,getmaxy()/<font color=Maroon>2</font>-<font color=Maroon>20</font>,<font color=Maroon>"YOUR&nbsp;SCORE&nbsp;IS&nbsp;:&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;itoa(score,score1,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(getmaxx()/<font color=Maroon>2</font>+<font color=Maroon>150</font>,getmaxy()/<font color=Maroon>2</font>-<font color=Maroon>20</font>,score1); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(level==<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(getmaxx()/<font color=Maroon>2</font>-<font color=Maroon>220</font>,getmaxy()/<font color=Maroon>2</font>+<font color=Maroon>20</font>,<font color=Maroon>"YOU&nbsp;REQUIRE&nbsp;TO&nbsp;PRACTICE&nbsp;MORE"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(level==<font color=Maroon>2</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(getmaxx()/<font color=Maroon>2</font>-<font color=Maroon>70</font>,getmaxy()/<font color=Maroon>2</font>+<font color=Maroon>20</font>,<font color=Maroon>"WELL&nbsp;PLAYED"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(level==<font color=Maroon>3</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(getmaxx()/<font color=Maroon>2</font>-<font color=Maroon>220</font>,getmaxy()/<font color=Maroon>2</font>+<font color=Maroon>20</font>,<font color=Maroon>"YOU&nbsp;ARE&nbsp;AN&nbsp;EFFICIENT&nbsp;SHOOTER"</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(getmaxx()/<font color=Maroon>2</font>-<font color=Maroon>30</font>,getmaxy()/<font color=Maroon>2</font>+<font color=Maroon>50</font>,<font color=Maroon>"(Q)UIT"</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>1</font>,<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setusercharsize(<font color=Maroon>30</font>,<font color=Maroon>65</font>,<font color=Maroon>30</font>,<font color=Maroon>60</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(&nbsp;getch()&nbsp;!=&nbsp;<font color=Maroon>q</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;finish=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;free(bow); <BR />&nbsp;&nbsp;&nbsp;free(arrow); <BR />&nbsp;&nbsp;&nbsp;free(balloon); <BR />&nbsp;&nbsp;&nbsp;closegraph(); <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;draw_balloon(<font color=Blue>int</font>&nbsp;x,<font color=Blue>int</font>&nbsp;y) <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(RED); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,RED); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fillellipse(x,y,<font color=Maroon>3</font>*BALLOON_SIZE,<font color=Maroon>4</font>*BALLOON_SIZE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(x,y+<font color=Maroon>4</font>*BALLOON_SIZE,x,y+<font color=Maroon>6</font>*BALLOON_SIZE); <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;draw_burst&nbsp;(&nbsp;<font color=Blue>int</font>&nbsp;x,&nbsp;<font color=Blue>int</font>&nbsp;y&nbsp;) <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;setlinestyle(<font color=Maroon>0</font>,<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;(&nbsp;x&nbsp;-&nbsp;<font color=Maroon>16</font>,&nbsp;y&nbsp;-&nbsp;<font color=Maroon>12</font>,&nbsp;x&nbsp;-&nbsp;<font color=Maroon>10</font>,&nbsp;y&nbsp;-&nbsp;<font color=Maroon>2</font>&nbsp;)&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;(&nbsp;x&nbsp;-&nbsp;<font color=Maroon>10</font>,&nbsp;y&nbsp;-&nbsp;<font color=Maroon>2</font>,&nbsp;x&nbsp;-&nbsp;<font color=Maroon>16</font>,&nbsp;y&nbsp;)&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;(&nbsp;x&nbsp;-&nbsp;<font color=Maroon>16</font>,&nbsp;y,&nbsp;x&nbsp;-&nbsp;<font color=Maroon>10</font>,&nbsp;y&nbsp;+&nbsp;<font color=Maroon>2</font>&nbsp;)&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;(&nbsp;x&nbsp;-&nbsp;<font color=Maroon>10</font>,&nbsp;y&nbsp;+&nbsp;<font color=Maroon>2</font>,&nbsp;x&nbsp;-&nbsp;<font color=Maroon>16</font>,&nbsp;y&nbsp;+&nbsp;<font color=Maroon>12</font>&nbsp;)&nbsp;; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;(&nbsp;x&nbsp;-&nbsp;<font color=Maroon>16</font>,&nbsp;y&nbsp;+&nbsp;<font color=Maroon>12</font>,&nbsp;x&nbsp;-&nbsp;<font color=Maroon>6</font>,&nbsp;y&nbsp;+&nbsp;<font color=Maroon>2</font>&nbsp;)&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;(&nbsp;x&nbsp;-&nbsp;<font color=Maroon>6</font>,&nbsp;y&nbsp;+&nbsp;<font color=Maroon>2</font>,&nbsp;x,&nbsp;y&nbsp;+&nbsp;<font color=Maroon>12</font>&nbsp;)&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;(&nbsp;x,&nbsp;y&nbsp;+&nbsp;<font color=Maroon>12</font>,&nbsp;x&nbsp;+&nbsp;<font color=Maroon>6</font>,&nbsp;y&nbsp;+&nbsp;<font color=Maroon>2</font>&nbsp;)&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;(&nbsp;x&nbsp;+&nbsp;<font color=Maroon>6</font>,&nbsp;y&nbsp;+&nbsp;<font color=Maroon>2</font>,&nbsp;x&nbsp;+&nbsp;<font color=Maroon>16</font>,&nbsp;y&nbsp;+&nbsp;<font color=Maroon>12</font>&nbsp;)&nbsp;; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;(&nbsp;x&nbsp;-&nbsp;<font color=Maroon>16</font>,&nbsp;y&nbsp;-&nbsp;<font color=Maroon>12</font>,&nbsp;x&nbsp;-&nbsp;<font color=Maroon>6</font>,&nbsp;y&nbsp;-&nbsp;<font color=Maroon>2</font>&nbsp;)&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;(&nbsp;x&nbsp;-&nbsp;<font color=Maroon>6</font>,&nbsp;y&nbsp;-&nbsp;<font color=Maroon>2</font>,&nbsp;x,&nbsp;y&nbsp;-&nbsp;<font color=Maroon>12</font>&nbsp;)&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;(&nbsp;x,&nbsp;y&nbsp;-&nbsp;<font color=Maroon>12</font>,&nbsp;x&nbsp;+&nbsp;<font color=Maroon>6</font>,&nbsp;y&nbsp;-&nbsp;<font color=Maroon>2</font>&nbsp;)&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;(&nbsp;x&nbsp;+&nbsp;<font color=Maroon>6</font>,&nbsp;y&nbsp;-&nbsp;<font color=Maroon>2</font>,&nbsp;x&nbsp;+&nbsp;<font color=Maroon>16</font>,&nbsp;y&nbsp;-&nbsp;<font color=Maroon>12</font>&nbsp;)&nbsp;; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;(&nbsp;x&nbsp;+&nbsp;<font color=Maroon>16</font>,&nbsp;y&nbsp;-&nbsp;<font color=Maroon>12</font>,&nbsp;x&nbsp;+&nbsp;<font color=Maroon>10</font>,&nbsp;y&nbsp;-&nbsp;<font color=Maroon>2</font>&nbsp;)&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;(&nbsp;x&nbsp;+&nbsp;<font color=Maroon>10</font>,&nbsp;y&nbsp;-&nbsp;<font color=Maroon>2</font>,&nbsp;x&nbsp;+&nbsp;<font color=Maroon>16</font>,&nbsp;y&nbsp;)&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;(&nbsp;x&nbsp;+&nbsp;<font color=Maroon>16</font>,&nbsp;y,&nbsp;x&nbsp;+&nbsp;<font color=Maroon>10</font>,&nbsp;y&nbsp;+&nbsp;<font color=Maroon>2</font>&nbsp;)&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;(&nbsp;x&nbsp;+&nbsp;<font color=Maroon>10</font>,&nbsp;y&nbsp;+&nbsp;<font color=Maroon>2</font>,&nbsp;x&nbsp;+&nbsp;<font color=Maroon>16</font>,&nbsp;y&nbsp;+&nbsp;<font color=Maroon>12</font>&nbsp;)&nbsp;; <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;draw_bow(<font color=Blue>int</font>&nbsp;x,<font color=Blue>int</font>&nbsp;y) <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(RED); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setlinestyle(<font color=Maroon>0</font>,<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;line(x+<font color=Maroon>32</font>,y-<font color=Maroon>49</font>,x+<font color=Maroon>32</font>,y+<font color=Maroon>49</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setlinestyle(<font color=Maroon>0</font>,<font color=Maroon>0</font>,<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;arc(x,y,<font color=Maroon>300</font>,<font color=Maroon>60</font>,<font color=Maroon>60</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;arc(x+<font color=Maroon>34</font>,y-<font color=Maroon>56</font>,<font color=Maroon>100</font>,<font color=Maroon>220</font>,<font color=Maroon>6</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;arc(x+<font color=Maroon>34</font>,y+<font color=Maroon>56</font>,<font color=Maroon>140</font>,<font color=Maroon>260</font>,<font color=Maroon>6</font>); <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;shoot(<font color=Blue>int</font>&nbsp;*x,&nbsp;<font color=Blue>int</font>&nbsp;*y) <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;cnt_arrow[<font color=Maroon>5</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;putimage(*x,&nbsp;*y-ARROW_SIZE,&nbsp;arrow,&nbsp;COPY_PUT); <BR />&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;putimage(*x,&nbsp;*y-ARROW_SIZE,&nbsp;arrow,&nbsp;XOR_PUT); <BR />&nbsp;&nbsp;&nbsp;&nbsp;*x+=ARROW_SIZE; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>&nbsp;(*x&gt;<font color=Maroon>590</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*x=<font color=Maroon>155</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag_arrow=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count_arrow--; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>10</font>,<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setusercharsize(<font color=Maroon>30</font>,<font color=Maroon>70</font>,<font color=Maroon>20</font>,<font color=Maroon>70</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>20</font>,<font color=Maroon>400</font>,<font color=Maroon>"ARROWS&nbsp;LEFT&nbsp;:"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>0</font>,WHITE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>200</font>,<font color=Maroon>400</font>,<font color=Maroon>220</font>,<font color=Maroon>425</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itoa(count_arrow,cnt_arrow,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>200</font>,<font color=Maroon>400</font>,cnt_arrow); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />} <BR /><font color=Blue>void</font>&nbsp;draw_arrow(<font color=Blue>int</font>&nbsp;x,&nbsp;<font color=Blue>int</font>&nbsp;y) <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;setlinestyle(<font color=Maroon>0</font>,<font color=Maroon>0</font>,<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;moveto(x,&nbsp;y); <BR />&nbsp;&nbsp;&nbsp;&nbsp;linerel(<font color=Maroon>6</font>*ARROW_SIZE,&nbsp;<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;linerel(-<font color=Maroon>2</font>*ARROW_SIZE,&nbsp;-<font color=Maroon>1</font>*ARROW_SIZE+<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;linerel(<font color=Maroon>0</font>,&nbsp;<font color=Maroon>2</font>*ARROW_SIZE-<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;linerel(<font color=Maroon>2</font>*ARROW_SIZE,&nbsp;-<font color=Maroon>1</font>*ARROW_SIZE); <BR />} <BR /> <BR /><font color=Blue>int</font>&nbsp;testkeys() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>union</font>&nbsp;REGS&nbsp;ii,&nbsp;oo&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;ii.h.ah&nbsp;=&nbsp;<font color=Maroon>0</font>&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;int86&nbsp;(&nbsp;<font color=Maroon>22</font>,&nbsp;&amp;ii,&nbsp;&amp;oo&nbsp;)&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>/*&nbsp;if&nbsp;ascii&nbsp;code&nbsp;is&nbsp;not&nbsp;0&nbsp;*/</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>&nbsp;(&nbsp;oo.h.al&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;(&nbsp;oo.h.al&nbsp;)&nbsp;;&nbsp;&nbsp;<font color=Green>/*&nbsp;return&nbsp;ascii&nbsp;code&nbsp;*/</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;(&nbsp;oo.h.ah&nbsp;)&nbsp;;&nbsp;&nbsp;<font color=Green>/*&nbsp;return&nbsp;scan&nbsp;code&nbsp;*/</font> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;fly(<font color=Blue>int</font>&nbsp;*x,&nbsp;<font color=Blue>int</font>&nbsp;*y) <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;x1; <BR />&nbsp;&nbsp;&nbsp;&nbsp;putimage(*x-<font color=Maroon>4</font>*BALLOON_SIZE,&nbsp;*y-<font color=Maroon>5</font>*BALLOON_SIZE,&nbsp;balloon,&nbsp;COPY_PUT); <BR />&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>20</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;cnt_ball[<font color=Maroon>5</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;putimage(*x-<font color=Maroon>4</font>*BALLOON_SIZE,&nbsp;*y-<font color=Maroon>5</font>*BALLOON_SIZE,&nbsp;balloon,&nbsp;XOR_PUT); <BR />&nbsp;&nbsp;&nbsp;&nbsp;*y-=BALLOON_SIZE; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(*y&lt;=&nbsp;<font color=Maroon>20</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*y=<font color=Maroon>400</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x1=<font color=Maroon>450</font>+rand()%<font color=Maroon>150</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*x=x1; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count_balloon--; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>10</font>,<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setusercharsize(<font color=Maroon>30</font>,<font color=Maroon>70</font>,<font color=Maroon>20</font>,<font color=Maroon>70</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>20</font>,<font color=Maroon>380</font>,<font color=Maroon>"BALLOONS&nbsp;LEFT:"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>0</font>,<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>200</font>,<font color=Maroon>370</font>,<font color=Maroon>230</font>,<font color=Maroon>400</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itoa(count_balloon,cnt_ball,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>200</font>,<font color=Maroon>380</font>,cnt_ball); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;start() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;setbkcolor(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>7</font>,<font color=Maroon>0</font>,<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>10</font>,<font color=Maroon>400</font>,<font color=Maroon>"&nbsp;&nbsp;PRESS&nbsp;ANY&nbsp;KEY&nbsp;TO&nbsp;CONTINUE...."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>1</font>,<font color=Maroon>0</font>,<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setusercharsize(<font color=Maroon>25</font>,<font color=Maroon>15</font>,<font color=Maroon>20</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>85</font>,<font color=Maroon>120</font>,<font color=Maroon>"BALLOON&nbsp;SHOOTING"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>float</font>&nbsp;octave[<font color=Maroon>7</font>]&nbsp;=&nbsp;{&nbsp;<font color=Maroon>130</font><font color=Maroon>.81</font>,&nbsp;<font color=Maroon>146</font><font color=Maroon>.83</font>,&nbsp;<font color=Maroon>164</font><font color=Maroon>.81</font>,&nbsp;<font color=Maroon>174</font><font color=Maroon>.61</font>,&nbsp;<font color=Maroon>196</font>,&nbsp;<font color=Maroon>220</font>,&nbsp;<font color=Maroon>246</font><font color=Maroon>.94</font>&nbsp; <BR />}; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(&nbsp;!kbhit()&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sound(&nbsp;octave[&nbsp;random(<font color=Maroon>7</font>)&nbsp;]*<font color=Maroon>4</font>&nbsp;); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>300</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;nosound(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;clearviewport(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;rectangle(<font color=Maroon>1</font>,<font color=Maroon>1</font>,<font color=Maroon>638</font>,<font color=Maroon>478</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>3</font>,<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setusercharsize(<font color=Maroon>50</font>,<font color=Maroon>30</font>,<font color=Maroon>50</font>,<font color=Maroon>30</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>150</font>,<font color=Maroon>10</font>,<font color=Maroon>"INSTRUCTIONS"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setbkcolor(<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>1</font>,<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setusercharsize(<font color=Maroon>40</font>,<font color=Maroon>70</font>,<font color=Maroon>20</font>,<font color=Maroon>20</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>10</font>,<font color=Maroon>70</font>,<font color=Maroon>"1.&nbsp;You&nbsp;can&nbsp;play&nbsp;three&nbsp;levels."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>10</font>,<font color=Maroon>110</font>,<font color=Maroon>"2.&nbsp;You&nbsp;can&nbsp;move&nbsp;the&nbsp;bow&nbsp;UP&nbsp;and&nbsp;DOWN&nbsp;with&nbsp;the&nbsp;help&nbsp;of&nbsp;arrow&nbsp;keys."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>10</font>,<font color=Maroon>150</font>,<font color=Maroon>"3.&nbsp;Press&nbsp;right&nbsp;arrow&nbsp;key&nbsp;to&nbsp;shoot&nbsp;the&nbsp;arrow."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>10</font>,<font color=Maroon>190</font>,<font color=Maroon>"4.&nbsp;You&nbsp;score&nbsp;20&nbsp;points&nbsp;every&nbsp;time&nbsp;you&nbsp;shoot&nbsp;the&nbsp;balloon."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>10</font>,<font color=Maroon>230</font>,<font color=Maroon>"5.&nbsp;First&nbsp;level&nbsp;has&nbsp;6&nbsp;arrows&nbsp;and&nbsp;10&nbsp;balloons."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>10</font>,<font color=Maroon>270</font>,<font color=Maroon>"6.&nbsp;You&nbsp;require&nbsp;to&nbsp;score&nbsp;100&nbsp;points&nbsp;to&nbsp;enter&nbsp;the&nbsp;second&nbsp;level."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>10</font>,<font color=Maroon>310</font>,<font color=Maroon>"7.&nbsp;Second&nbsp;level&nbsp;has&nbsp;6&nbsp;arrows&nbsp;and&nbsp;8&nbsp;balloons."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>10</font>,<font color=Maroon>350</font>,<font color=Maroon>"8.&nbsp;You&nbsp;require&nbsp;to&nbsp;score&nbsp;200&nbsp;points&nbsp;to&nbsp;enter&nbsp;the&nbsp;third&nbsp;level."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>10</font>,<font color=Maroon>390</font>,<font color=Maroon>"9.&nbsp;Third&nbsp;level&nbsp;has&nbsp;6&nbsp;arrows&nbsp;and&nbsp;6&nbsp;balloons."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>7</font>,<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>150</font>,<font color=Maroon>430</font>,<font color=Maroon>"PRESS&nbsp;ANY&nbsp;KEY&nbsp;TO&nbsp;CONITINUE"</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setusercharsize(<font color=Maroon>1</font>,<font color=Maroon>1</font>,<font color=Maroon>1</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>0</font>,<font color=Maroon>0</font>,<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setbkcolor(<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;clearviewport(); <BR />}</div>
     ]]>
        </string>
     
     
     
     <string name="CprojectArcheryGame" formatted="false"> 
        <![CDATA[
        <div>ARCHERY&nbsp;GAME <BR /> <BR />#<font color=Blue>include</font>&lt;graphics.h&gt; <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR />#<font color=Blue>include</font>&lt;dos.h&gt; <BR />#<font color=Blue>include</font>&lt;stdlib.h&gt; <BR /> <BR /><font color=Blue>union</font>&nbsp;REGS&nbsp;i,o; <BR /><font color=Blue>int</font>&nbsp;f; <BR /><font color=Blue>struct</font>&nbsp;arccoordstype&nbsp;arcinfo; <BR /><font color=Blue>int</font>&nbsp;t,flag=<font color=Maroon>0</font>; <BR /><font color=Blue>int</font> <BR />gm=<font color=Maroon>0</font>,gd=DETECT,*button,*a,*b,c,bc,j,k,jk,h,x3,y3,alh=<font color=Maroon>0</font>,s,scor=<font color=Maroon>0</font>,sp=<font color=Maroon>0</font>,e,m=<font color=Maroon>2</font> <BR />; <BR />main() <BR />{ <BR /> <BR /><font color=Green>//initgraph(&amp;gm,&amp;gd,"&nbsp;&nbsp;");</font> <BR />front(); <BR />closegraph(); <BR /><font color=Green>//delay(10);</font> <BR /><font color=Green>//sta();</font> <BR />&nbsp;a: <BR />initgraph(&amp;gd,&amp;gm,<font color=Maroon>"&nbsp;"</font>); <BR />flag=<font color=Maroon>0</font>; <BR />setbkcolor(<font color=Maroon>0</font>); <BR />s=-<font color=Maroon>60</font>;e=<font color=Maroon>60</font>; <BR /> <BR />sound(<font color=Maroon>221</font><font color=Maroon>.38</font>); <BR /><font color=Blue>for</font>(f=<font color=Maroon>1</font>;f&lt;=<font color=Maroon>20</font>;f++) <BR />&nbsp;{ <BR />&nbsp;setcolor(BLUE); <BR />&nbsp;line(<font color=Maroon>280</font>,f+<font color=Maroon>360</font>,<font color=Maroon>360</font>,f+<font color=Maroon>360</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(RED); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(SMALL_FONT,HORIZ_DIR,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>305</font>,<font color=Maroon>364</font>,<font color=Maroon>"SHOOT"</font>); <BR />arrows(<font color=Maroon>0</font>); <BR /> <BR />setcolor(GREEN+WHITE); <BR />rectangle(<font color=Maroon>5</font>,<font color=Maroon>5</font>,<font color=Maroon>634</font>,<font color=Maroon>474</font>); <BR />rectangle(<font color=Maroon>6</font>,<font color=Maroon>6</font>,<font color=Maroon>633</font>,<font color=Maroon>473</font>); <BR />setcolor(YELLOW); <BR />rectangle(<font color=Maroon>7</font>,<font color=Maroon>7</font>,<font color=Maroon>632</font>,<font color=Maroon>472</font>); <BR />setcolor(GREEN+WHITE); <BR />rectangle(<font color=Maroon>8</font>,<font color=Maroon>8</font>,<font color=Maroon>631</font>,<font color=Maroon>471</font>); <BR />rectangle(<font color=Maroon>9</font>,<font color=Maroon>9</font>,<font color=Maroon>630</font>,<font color=Maroon>470</font>); <BR />rectangle(<font color=Maroon>10</font>,<font color=Maroon>10</font>,<font color=Maroon>629</font>,<font color=Maroon>469</font>); <BR /> <BR />setcolor(YELLOW); <BR />settextstyle(SANS_SERIF_FONT,HORIZ_DIR,<font color=Maroon>2</font>); <BR />outtextxy(<font color=Maroon>530</font>,<font color=Maroon>20</font>,<font color=Maroon>"SCORE"</font>); <BR />scor=<font color=Maroon>0</font>; <BR />score(<font color=Maroon>200</font>); <BR />m=<font color=Maroon>6</font>; <BR />equip(); <BR />arrow1(<font color=Maroon>0</font>,<font color=Maroon>14</font>); <BR />alh=<font color=Maroon>0</font>; <BR />mousereg(); <BR /><font color=Blue>while</font>(m&gt;<font color=Maroon>1</font>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>/*&nbsp;while&nbsp;start&nbsp;*/</font> <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//button=0;</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=-<font color=Maroon>70</font>;j&lt;=<font color=Maroon>70</font>;j+=<font color=Maroon>2</font>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>/*&nbsp;start&nbsp;for*/</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;c=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tar(j,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>10</font>); <BR /> <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getmouseptr(&amp;button,&amp;a,&amp;b); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(button==<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x3=a;y3=b; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>((x3&gt;<font color=Maroon>280</font>&nbsp;&amp;&amp;&nbsp;x3&lt;<font color=Maroon>360</font>&nbsp;)||&nbsp;(y3&gt;<font color=Maroon>361</font>&nbsp;&amp;&amp;&nbsp;y3&lt;<font color=Maroon>379</font>)) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bc=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(bc==<font color=Maroon>1</font>) <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;<font color=Green>//sound(277.38);</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(10);</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nosound(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arrow1(<font color=Maroon>0</font>,<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(YELLOW); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>40</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>240</font>,<font color=Maroon>80</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>240</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>80</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>240</font>,<font color=Maroon>75</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>235</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>80</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>240</font>,<font color=Maroon>75</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>245</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>40</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>241</font>,<font color=Maroon>80</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>241</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>79</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>240</font>,<font color=Maroon>74</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>236</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>79</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>241</font>,<font color=Maroon>74</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>245</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>46</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>240</font>,<font color=Maroon>41</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>236</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>46</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>241</font>,<font color=Maroon>41</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>245</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>42</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>240</font>,<font color=Maroon>37</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>236</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>42</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>241</font>,<font color=Maroon>37</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>245</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>8</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>40</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>240</font>,<font color=Maroon>80</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>240</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>80</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>240</font>,<font color=Maroon>75</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>235</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>80</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>240</font>,<font color=Maroon>75</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>245</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>40</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>241</font>,<font color=Maroon>80</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>241</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>79</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>240</font>,<font color=Maroon>74</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>236</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>79</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>241</font>,<font color=Maroon>74</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>245</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>46</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>240</font>,<font color=Maroon>41</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>236</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>46</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>241</font>,<font color=Maroon>41</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>245</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>42</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>240</font>,<font color=Maroon>37</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>236</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>42</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>241</font>,<font color=Maroon>37</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>245</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>((<font color=Maroon>42</font>+sp+<font color=Maroon>36</font>)&gt;=<font color=Maroon>116</font>&nbsp;&amp;&amp;&nbsp;(<font color=Maroon>42</font>+sp+<font color=Maroon>36</font>)&lt;=<font color=Maroon>136</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;equip(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sp=sp+<font color=Maroon>3</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>((sp+<font color=Maroon>80</font>+<font color=Maroon>36</font>)&gt;=<font color=Maroon>579</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;arrow1(<font color=Maroon>0</font>,<font color=Maroon>14</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;score(j); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bc=<font color=Maroon>0</font>;&nbsp;sp=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alh++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(YELLOW); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arrows(alh); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m--; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;&nbsp;&nbsp;&nbsp;sp=sp+3;</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tar(j,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>/*&nbsp;for&nbsp;end&nbsp;*/</font> <BR /> <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;}<font color=Green>/*&nbsp;while&nbsp;end&nbsp;*/</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;sleep(<font color=Maroon>1</font><font color=Maroon>.5</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;closegraph(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gaover(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(GREEN); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(SANS_SERIF_FONT,HORIZ_DIR,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>255</font>,<font color=Maroon>117</font>,<font color=Maroon>"SCORE"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>14</font>+BLUE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(SANS_SERIF_FONT,HORIZ_DIR,<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(t=<font color=Maroon>0</font>;t&lt;=<font color=Maroon>360</font>;t++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;setcolor(random(<font color=Maroon>15</font>)); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ellipse(<font color=Maroon>300</font>,<font color=Maroon>200</font>,t,t+<font color=Maroon>2</font>,<font color=Maroon>30</font>,<font color=Maroon>22</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(random(<font color=Maroon>15</font>)); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ellipse(<font color=Maroon>300</font>,<font color=Maroon>200</font>,t,t+<font color=Maroon>2</font>,<font color=Maroon>35</font>,<font color=Maroon>25</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(GREEN); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select(scor,-<font color=Maroon>250</font>,<font color=Maroon>133</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(t=<font color=Maroon>0</font>;t&lt;=<font color=Maroon>50</font>;t++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>14</font>); <BR />&nbsp;&nbsp;&nbsp;line(<font color=Maroon>40</font>+t,<font color=Maroon>230</font>,<font color=Maroon>40</font>+t,<font color=Maroon>250</font>); <BR />&nbsp;&nbsp;&nbsp;line(<font color=Maroon>560</font>+t,<font color=Maroon>230</font>,<font color=Maroon>560</font>+t,<font color=Maroon>250</font>); <BR />&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;settextstyle(SMALL_FONT,HORIZ_DIR,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;setcolor(BLUE); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>45</font>,<font color=Maroon>235</font>,<font color=Maroon>"Continue"</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>575</font>,<font color=Maroon>235</font>,<font color=Maroon>"Quit"</font>); <BR />&nbsp;&nbsp;&nbsp;restrictmouseptr(<font color=Maroon>0</font>,<font color=Maroon>80</font>,<font color=Maroon>640</font>,<font color=Maroon>440</font>); <BR />&nbsp;&nbsp;&nbsp;flag=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(flag==<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;showmouseptr(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getmouseptr(&amp;button,&amp;a,&amp;b); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(button==<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x3=a;y3=b; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>((x3&gt;<font color=Maroon>41</font>&nbsp;&amp;&amp;&nbsp;x3&lt;<font color=Maroon>79</font>&nbsp;)&amp;&amp;&nbsp;(y3&gt;<font color=Maroon>231</font>&nbsp;&amp;&amp;&nbsp;y3&lt;<font color=Maroon>249</font>)) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//break;</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>((x3&gt;=<font color=Maroon>561</font>&nbsp;&amp;&amp;&nbsp;x3&lt;=<font color=Maroon>599</font>&nbsp;)&amp;&amp;&nbsp;(y3&gt;=<font color=Maroon>231</font>&nbsp;&amp;&amp;&nbsp;y3&lt;=<font color=Maroon>249</font>)) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag=<font color=Maroon>2</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//break;</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(flag==<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>goto</font>&nbsp;a; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<font color=Blue>if</font>(flag==<font color=Maroon>2</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{initgraph(&amp;gd,&amp;gm,<font color=Maroon>""</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;finalwindow(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;closegraph(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>goto</font>&nbsp;b;}} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;&nbsp;next();</font> <BR /> <BR /> <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;b:&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;}<font color=Green>//ending&nbsp;of&nbsp;main&nbsp;function</font> <BR /> <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>/*&nbsp;sub&nbsp;function&nbsp;target&nbsp;starting*/</font> <BR /> <BR />&nbsp;arrow1(<font color=Blue>int</font>&nbsp;sp,<font color=Blue>int</font>&nbsp;col) <BR />&nbsp;{&nbsp;setcolor(col);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//sound(277.38);</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>40</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>240</font>,<font color=Maroon>80</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>240</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>80</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>240</font>,<font color=Maroon>75</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>235</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>80</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>240</font>,<font color=Maroon>75</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>245</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>40</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>241</font>,<font color=Maroon>80</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>241</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>79</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>240</font>,<font color=Maroon>74</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>236</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>79</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>241</font>,<font color=Maroon>74</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>245</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>46</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>240</font>,<font color=Maroon>41</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>236</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>46</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>241</font>,<font color=Maroon>41</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>245</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>42</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>240</font>,<font color=Maroon>37</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>236</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>42</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>241</font>,<font color=Maroon>37</font>+sp+<font color=Maroon>36</font>,<font color=Maroon>245</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nosound(); <BR /> <BR />&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;tar(j,c) <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;setcolor(c*<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;ellipse(<font color=Maroon>579</font>,<font color=Maroon>240</font>+j,<font color=Maroon>0</font>,<font color=Maroon>360</font>,<font color=Maroon>40</font>,<font color=Maroon>90</font>); <BR />&nbsp;&nbsp;&nbsp;setcolor(c*<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;ellipse(<font color=Maroon>579</font>,<font color=Maroon>240</font>+j,<font color=Maroon>0</font>,<font color=Maroon>360</font>,<font color=Maroon>33</font>,<font color=Maroon>75</font>); <BR />&nbsp;&nbsp;&nbsp;setcolor(c*<font color=Maroon>5</font>); <BR />&nbsp;&nbsp;&nbsp;ellipse(<font color=Maroon>579</font>,<font color=Maroon>240</font>+j,<font color=Maroon>0</font>,<font color=Maroon>360</font>,<font color=Maroon>26</font>,<font color=Maroon>60</font>); <BR />&nbsp;&nbsp;&nbsp;setcolor(c*<font color=Maroon>9</font>); <BR />&nbsp;&nbsp;&nbsp;ellipse(<font color=Maroon>579</font>,<font color=Maroon>240</font>+j,<font color=Maroon>0</font>,<font color=Maroon>360</font>,<font color=Maroon>19</font>,<font color=Maroon>45</font>); <BR />&nbsp;&nbsp;&nbsp;setcolor(c*<font color=Maroon>8</font>); <BR />&nbsp;&nbsp;&nbsp;ellipse(<font color=Maroon>579</font>,<font color=Maroon>240</font>+j,<font color=Maroon>0</font>,<font color=Maroon>360</font>,<font color=Maroon>12</font>,<font color=Maroon>30</font>); <BR />&nbsp;&nbsp;&nbsp;setcolor(c*<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;ellipse(<font color=Maroon>579</font>,<font color=Maroon>240</font>+j,<font color=Maroon>0</font>,<font color=Maroon>360</font>,<font color=Maroon>5</font>,<font color=Maroon>15</font>); <BR />&nbsp;} <BR />&nbsp;initmouse() <BR />&nbsp;{ <BR />&nbsp;i.x.ax=<font color=Maroon>0</font>; <BR />&nbsp;int86(<font color=Maroon>0x33</font>,&amp;i,&amp;o); <BR />&nbsp;<font color=Blue>return</font>(o.x.ax); <BR />&nbsp;} <BR />&nbsp;showmouseptr() <BR />&nbsp;{ <BR />&nbsp;i.x.ax=<font color=Maroon>1</font>; <BR />&nbsp;int86(<font color=Maroon>0x33</font>,&amp;i,&amp;o); <BR />&nbsp;} <BR />&nbsp;restrictmouseptr(<font color=Blue>int</font>&nbsp;x1,<font color=Blue>int</font>&nbsp;y1,<font color=Blue>int</font>&nbsp;x2,<font color=Blue>int</font>&nbsp;y2) <BR />&nbsp;{ <BR />&nbsp;i.x.ax=<font color=Maroon>7</font>; <BR />&nbsp;i.x.cx=x1; <BR />&nbsp;i.x.dx=x2; <BR />&nbsp;int86(<font color=Maroon>0x33</font>,&amp;i,&amp;o); <BR />&nbsp;i.x.ax=<font color=Maroon>8</font>; <BR />&nbsp;i.x.cx=y1; <BR />&nbsp;i.x.dx=y2; <BR />&nbsp;int86(<font color=Maroon>0x33</font>,&amp;i,&amp;o); <BR />&nbsp;} <BR />&nbsp;getmouseptr(<font color=Blue>int</font>&nbsp;*button,<font color=Blue>int</font>&nbsp;*a,<font color=Blue>int</font>&nbsp;*b) <BR />&nbsp;{ <BR />&nbsp;i.x.ax=<font color=Maroon>3</font>; <BR />&nbsp;int86(<font color=Maroon>0x33</font>,&amp;i,&amp;o); <BR />&nbsp;*button=o.x.bx; <BR />&nbsp;*a=o.x.cx; <BR />&nbsp;*b=o.x.dx; <BR />&nbsp;} <BR /> <BR />&nbsp;mousereg() <BR />&nbsp;{ <BR />&nbsp;<font color=Blue>int</font>&nbsp;x1,x2,y1,y2,ce,k; <BR />&nbsp;initmouse(); <BR />&nbsp;showmouseptr(); <BR />&nbsp;restrictmouseptr(<font color=Maroon>281</font>,<font color=Maroon>361</font>,<font color=Maroon>359</font>,<font color=Maroon>379</font>); <BR />&nbsp;} <BR /> <BR /> <BR />arrows(alh) <BR />{&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;z=<font color=Maroon>0</font>,r; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r=<font color=Maroon>5</font>-alh; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(YELLOW); <BR />&nbsp;settextstyle(SANS_SERIF_FONT,HORIZ_DIR,<font color=Maroon>2</font>); <BR />&nbsp;outtextxy(<font color=Maroon>30</font>,<font color=Maroon>20</font>,<font color=Maroon>"ARROWS&nbsp;REMAINING"</font>); <BR />&nbsp;<font color=Blue>for</font>(f=r,z=<font color=Maroon>0</font>;f&gt;<font color=Maroon>0</font>;f--) <BR />{ <BR />&nbsp;line(<font color=Maroon>40</font>,<font color=Maroon>60</font>+z*<font color=Maroon>10</font>,<font color=Maroon>80</font>,<font color=Maroon>60</font>+z*<font color=Maroon>10</font>); <BR />&nbsp;line(<font color=Maroon>80</font>,<font color=Maroon>60</font>+z*<font color=Maroon>10</font>,<font color=Maroon>75</font>,<font color=Maroon>55</font>+z*<font color=Maroon>10</font>); <BR />&nbsp;line(<font color=Maroon>80</font>,<font color=Maroon>60</font>+z*<font color=Maroon>10</font>,<font color=Maroon>75</font>,<font color=Maroon>65</font>+z*<font color=Maroon>10</font>); <BR />&nbsp;z=z+<font color=Maroon>1</font>; <BR />&nbsp;} <BR />&nbsp;<font color=Blue>for</font>(f=alh,z=<font color=Maroon>0</font>;f&gt;<font color=Maroon>0</font>;f--) <BR />&nbsp;{ <BR />&nbsp;setcolor(<font color=Maroon>0</font>); <BR />&nbsp;line(<font color=Maroon>40</font>,<font color=Maroon>60</font>+z*<font color=Maroon>10</font>,<font color=Maroon>80</font>,<font color=Maroon>60</font>+z*<font color=Maroon>10</font>); <BR />&nbsp;line(<font color=Maroon>80</font>,<font color=Maroon>60</font>+z*<font color=Maroon>10</font>,<font color=Maroon>75</font>,<font color=Maroon>55</font>+z*<font color=Maroon>10</font>); <BR />&nbsp;line(<font color=Maroon>80</font>,<font color=Maroon>60</font>+z*<font color=Maroon>10</font>,<font color=Maroon>75</font>,<font color=Maroon>65</font>+z*<font color=Maroon>10</font>); <BR />&nbsp;z=z+<font color=Maroon>1</font>; <BR />&nbsp;} <BR />&nbsp;} <BR /> <BR />&nbsp;score&nbsp;(<font color=Blue>int</font>&nbsp;j) <BR />&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(&nbsp;(j&gt;=-<font color=Maroon>90</font>&nbsp;&amp;&amp;&nbsp;j&lt;=-<font color=Maroon>74</font>)&nbsp;||&nbsp;(j&gt;=<font color=Maroon>74</font>&nbsp;&amp;&amp;&nbsp;j&lt;=<font color=Maroon>90</font>)) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scor=scor+<font color=Maroon>10</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>((j&gt;=-<font color=Maroon>72</font>&nbsp;&amp;&amp;&nbsp;j&lt;=-<font color=Maroon>60</font>)&nbsp;||&nbsp;(j&gt;=<font color=Maroon>60</font>&nbsp;&amp;&amp;&nbsp;j&lt;=<font color=Maroon>72</font>)) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scor=scor+<font color=Maroon>20</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;&nbsp;<font color=Blue>if</font>((j&gt;=-<font color=Maroon>58</font>&nbsp;&amp;&amp;&nbsp;j&lt;=-<font color=Maroon>42</font>)&nbsp;||&nbsp;(j&gt;=<font color=Maroon>42</font>&nbsp;&amp;&amp;&nbsp;j&lt;=<font color=Maroon>58</font>)) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scor=scor+<font color=Maroon>30</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;&nbsp;<font color=Blue>if</font>((j&gt;=-<font color=Maroon>40</font>&nbsp;&amp;&amp;&nbsp;j&lt;=-<font color=Maroon>32</font>)&nbsp;||&nbsp;(j&gt;=<font color=Maroon>32</font>&nbsp;&amp;&amp;&nbsp;j&lt;=<font color=Maroon>40</font>)) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scor=scor+<font color=Maroon>40</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;&nbsp;<font color=Blue>if</font>((j&gt;=-<font color=Maroon>30</font>&nbsp;&amp;&amp;&nbsp;j&lt;=-<font color=Maroon>18</font>)&nbsp;||&nbsp;(j&gt;=<font color=Maroon>18</font>&nbsp;&amp;&amp;&nbsp;j&lt;=<font color=Maroon>30</font>)) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scor=scor+<font color=Maroon>50</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;&nbsp;<font color=Blue>if</font>((j&gt;=-<font color=Maroon>16</font>&nbsp;&amp;&amp;&nbsp;j&lt;=<font color=Maroon>0</font>)&nbsp;||&nbsp;(j&gt;=<font color=Maroon>0</font>&nbsp;&amp;&amp;&nbsp;j&lt;=<font color=Maroon>16</font>)) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scor=scor+<font color=Maroon>60</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>&nbsp;(j&nbsp;==&nbsp;<font color=Maroon>300</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scor=<font color=Maroon>0</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(jk=<font color=Maroon>50</font>;jk&lt;=<font color=Maroon>120</font>;jk++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{setcolor(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>530</font>,jk,<font color=Maroon>620</font>,jk); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(YELLOW); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(SANS_SERIF_FONT,HORIZ_DIR,<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;select(scor,<font color=Maroon>0</font>,<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR /> <BR /> <BR />&nbsp;front1() <BR />{ <BR /><font color=Blue>int</font>&nbsp;gm=<font color=Maroon>0</font>,gd=DETECT,i,j,k,jk,gh; <BR />initgraph(&amp;gd,&amp;gm,<font color=Maroon>"&nbsp;"</font>); <BR />setcolor(MAGENTA); <BR />rectangle(<font color=Maroon>10</font>,<font color=Maroon>10</font>,<font color=Maroon>639</font>,<font color=Maroon>469</font>); <BR />rectangle(<font color=Maroon>12</font>,<font color=Maroon>12</font>,<font color=Maroon>637</font>,<font color=Maroon>467</font>); <BR /><font color=Blue>for</font>(i=<font color=Maroon>12</font>;i&lt;=<font color=Maroon>627</font>;i+=<font color=Maroon>12</font>) <BR />{ <BR /> <BR />setcolor(YELLOW); <BR />line(i,<font color=Maroon>12</font>,i,<font color=Maroon>467</font>); <BR /><font color=Green>//clearviewport();</font> <BR /> <BR /><font color=Blue>for</font>(j=<font color=Maroon>15</font>;j&lt;=<font color=Maroon>464</font>;j+=<font color=Maroon>5</font>) <BR />ellipse(i+<font color=Maroon>6</font>,j,-<font color=Maroon>180</font>,<font color=Maroon>0</font>,<font color=Maroon>6</font>,<font color=Maroon>4</font>); <BR /> <BR />} <BR /><font color=Blue>for</font>(i=<font color=Maroon>3</font>;i&lt;=<font color=Maroon>452</font>;i+=<font color=Maroon>5</font>) <BR />{&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>15</font>;j&lt;=<font color=Maroon>627</font>;j+=<font color=Maroon>3</font>) <BR />&nbsp;&nbsp;{setcolor(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;ellipse(j,<font color=Maroon>467</font>-i,-<font color=Maroon>180</font>,<font color=Maroon>0</font>,<font color=Maroon>3</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;}delay(<font color=Maroon>40</font>); <BR />&nbsp;&nbsp;&nbsp;setcolor(BLACK); <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(k=<font color=Maroon>1</font>;k&lt;=<font color=Maroon>5</font>;k++) <BR />&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;line(<font color=Maroon>12</font>,<font color=Maroon>467</font>-i+k,<font color=Maroon>637</font>,<font color=Maroon>467</font>-i+k);&nbsp;} <BR />&nbsp;<font color=Green>//setcolor(25);</font> <BR />&nbsp;&nbsp;setcolor(GREEN+MAGENTA+WHITE+BLUE+YELLOW); <BR />rectangle(<font color=Maroon>10</font>,<font color=Maroon>10</font>,<font color=Maroon>639</font>,<font color=Maroon>469</font>); <BR />rectangle(<font color=Maroon>12</font>,<font color=Maroon>12</font>,<font color=Maroon>637</font>,<font color=Maroon>467</font>); <BR /> <BR />} <BR />setcolor(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rectangle(<font color=Maroon>290</font>,<font color=Maroon>370</font>,<font color=Maroon>350</font>,<font color=Maroon>380</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rectangle(<font color=Maroon>292</font>,<font color=Maroon>372</font>,<font color=Maroon>348</font>,<font color=Maroon>378</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gh=<font color=Maroon>292</font>;&nbsp;<font color=Green>//gh&lt;=388;</font> <BR /> <BR /><font color=Blue>for</font>(j=<font color=Maroon>1</font>;j&lt;=<font color=Maroon>56</font>;j+=<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;{&nbsp;<font color=Green>/*&nbsp;for(i=24;i&lt;=627;i+=12) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{setcolor(i); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(i,23,3); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(1); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;*/</font>&nbsp;&nbsp;jk=<font color=Maroon>20</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>24</font>;i&lt;=<font color=Maroon>627</font>;i+=<font color=Maroon>12</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{setcolor(random(<font color=Maroon>15</font>)); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(i,<font color=Maroon>23</font>,<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;sound(<font color=Maroon>440</font>+jk); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nosound(); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(YELLOW); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rectangle(gh,<font color=Maroon>372</font>,gh,<font color=Maroon>378</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//rectangle(282,362,358,388);}</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;jk+=<font color=Maroon>40</font>; <BR />&nbsp;<font color=Blue>if</font>(jk&gt;=<font color=Maroon>880</font>) <BR />&nbsp;{&nbsp;jk=<font color=Maroon>440</font>;} <BR /> <BR />} <BR />gh=gh+<font color=Maroon>1</font>; <BR />nosound(); <BR />} <BR />sleep(<font color=Maroon>.1</font>); <BR />closegraph(); <BR />} <BR /> <BR /> <BR />&nbsp;equip() <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;kl=<font color=Maroon>2</font>; <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;midx,&nbsp;midy,i,j,k,y=<font color=Maroon>90</font>,c; <BR />&nbsp;&nbsp;<font color=Green>//&nbsp;int&nbsp;stangle&nbsp;=&nbsp;45,&nbsp;endangle&nbsp;=&nbsp;270;</font> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c=y/<font color=Maroon>2</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(c=<font color=Maroon>50</font>;c&lt;=<font color=Maroon>52</font>;c+=<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(kl); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>26</font>+c,<font color=Maroon>170</font>,<font color=Maroon>26</font>+c,<font color=Maroon>310</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(c=<font color=Maroon>50</font>;c&lt;=<font color=Maroon>54</font>;c+=<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(kl); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>60</font>+c,<font color=Maroon>222</font>,<font color=Maroon>60</font>+c,<font color=Maroon>255</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(c=<font color=Maroon>180</font>;c&lt;=<font color=Maroon>270</font>;c++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;arc(80,92,c,c+1,20);</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arc(<font color=Maroon>86</font>,<font color=Maroon>166</font>,c,c+<font color=Maroon>1</font>,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getarccoords(&amp;arcinfo); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(kl); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(arcinfo.xend,&nbsp;arcinfo.yend,<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(c=-<font color=Maroon>50</font>;c&lt;=<font color=Maroon>110</font>;c++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;arc(80,92,c,c+1,20);</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arc(<font color=Maroon>96</font>,<font color=Maroon>201</font>,c,c+<font color=Maroon>1</font>,<font color=Maroon>28</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getarccoords(&amp;arcinfo); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(kl); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(arcinfo.xend,&nbsp;arcinfo.yend,<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(c=<font color=Maroon>50</font>,i=<font color=Maroon>4</font>;c&gt;=-<font color=Maroon>110</font>;c--) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;arc(80,92,c,c+1,20);</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>127</font>,<font color=Maroon>170</font>,<font color=Maroon>127</font>,<font color=Maroon>315</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>126</font>,<font color=Maroon>170</font>,<font color=Maroon>126</font>,<font color=Maroon>315</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arc(<font color=Maroon>96</font>,<font color=Maroon>278</font>,c,c+<font color=Maroon>1</font>,<font color=Maroon>28</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getarccoords(&amp;arcinfo); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(kl); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i=i+<font color=Maroon>2</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(i&gt;<font color=Maroon>14</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{i=<font color=Maroon>2</font>;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(arcinfo.xend,arcinfo.yend,<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(c=<font color=Maroon>90</font>;c&lt;=<font color=Maroon>180</font>;c++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;arc(80,92,c,c+1,20);</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arc(<font color=Maroon>86</font>,<font color=Maroon>314</font>,c,c+<font color=Maroon>1</font>,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getarccoords(&amp;arcinfo); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(kl); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(arcinfo.xend,&nbsp;arcinfo.yend,<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//setcolor(2);</font> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />sta() <BR />{ <BR />&nbsp;<font color=Blue>int</font>&nbsp;x,y=<font color=Maroon>200</font>,i,st,kl; <BR />&nbsp;<font color=Green>//initgraph(&amp;gd,&amp;gm,"");</font> <BR />&nbsp;&nbsp;setcolor(<font color=Maroon>5</font>); <BR /> <BR />&nbsp;<font color=Blue>for</font>(st=<font color=Maroon>190</font>,i=<font color=Maroon>2</font>;st&gt;=-<font color=Maroon>20</font>;st-=<font color=Maroon>9</font>,i+=<font color=Maroon>3</font>) <BR />&nbsp;{ <BR />&nbsp;setcolor(GREEN); <BR />&nbsp;arc(<font color=Maroon>320</font>,<font color=Maroon>290</font>,st,st+<font color=Maroon>2</font>,<font color=Maroon>190</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getarccoords(&amp;arcinfo); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>5</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x=arcinfo.xend; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y=arcinfo.yend; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sound(<font color=Maroon>300</font>-st); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;star(x,y); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>24</font>); <BR />&nbsp;} <BR />&nbsp;<font color=Blue>for</font>(st=<font color=Maroon>190</font>,i=<font color=Maroon>2</font>;st&gt;=-<font color=Maroon>17</font>;st-=<font color=Maroon>9</font>,i+=<font color=Maroon>3</font>) <BR />&nbsp;{ <BR />&nbsp;setcolor(YELLOW); <BR />&nbsp;arc(<font color=Maroon>320</font>,<font color=Maroon>285</font>,st,st+<font color=Maroon>2</font>,<font color=Maroon>230</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getarccoords(&amp;arcinfo); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>5</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x=arcinfo.xend; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y=arcinfo.yend; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sound(<font color=Maroon>320</font>-st); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;star(x,y); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>24</font>); <BR />&nbsp;} <BR />&nbsp;nosound(); <BR />&nbsp;settextstyle(TRIPLEX_FONT,HORIZ_DIR,<font color=Maroon>3</font>); <BR /> <BR />&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>140</font>;i&gt;=<font color=Maroon>20</font>;i-=<font color=Maroon>10</font>) <BR />&nbsp;{ <BR /> <BR />&nbsp;setcolor(<font color=Maroon>8</font>); <BR />&nbsp;delay(<font color=Maroon>13</font>); <BR />&nbsp;ya(i); <BR />&nbsp;delay(<font color=Maroon>13</font>); <BR />&nbsp;setcolor(<font color=Maroon>4</font>); <BR />&nbsp;r(i); <BR />&nbsp;delay(<font color=Maroon>13</font>); <BR />&nbsp;setcolor(<font color=Maroon>2</font>); <BR />&nbsp;e1(i); <BR />&nbsp;delay(<font color=Maroon>13</font>); <BR />&nbsp;h1(i); <BR />&nbsp;delay(<font color=Maroon>13</font>); <BR />&nbsp;c1(i); <BR />&nbsp;delay(<font color=Maroon>13</font>); <BR />&nbsp;r1(i); <BR />&nbsp;delay(<font color=Maroon>13</font>); <BR />&nbsp;a1(i); <BR />&nbsp;delay(<font color=Maroon>13</font>); <BR /> <BR /> <BR />&nbsp;<font color=Green>/*line(320,240,325,233);&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;/1 <BR />&nbsp;line(325,233,330,240);&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;1 <BR />&nbsp;line(330,240,337,240);&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;right&nbsp;hori <BR />&nbsp;line(320,240,313,240);&nbsp;//left&nbsp;hori <BR />&nbsp;line(313,240,318,247);&nbsp;&nbsp;//&nbsp;left&nbsp;horiz&nbsp;to&nbsp;right&nbsp; <BR />&nbsp;line(337,240,332,247);&nbsp;//&nbsp;right&nbsp;horiz&nbsp;to&nbsp;left&nbsp;/ <BR />&nbsp;line(332,247,334,253);&nbsp;//&nbsp;left&nbsp;/&nbsp;to&nbsp;right&nbsp; <BR />&nbsp;line(318,247,316,253);&nbsp;//&nbsp;right&nbsp;&nbsp;to&nbsp;left&nbsp;/ <BR />&nbsp;line(316,253,325,247); <BR />&nbsp;line(334,253,325,247);*/</font> <BR /> <BR /> <BR /> <BR /><font color=Green>//&nbsp;getch();</font> <BR />&nbsp;} <BR />&nbsp;} <BR />&nbsp;ya(<font color=Blue>int</font>&nbsp;i) <BR />&nbsp;{ <BR />&nbsp;&nbsp;<font color=Blue>if</font>(i==<font color=Maroon>120</font>) <BR />&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;delay(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;setcolor(<font color=Maroon>4</font>); <BR />&nbsp;<font color=Green>//&nbsp;delay(800);</font> <BR />outtextxy(<font color=Maroon>300</font>+i,<font color=Maroon>230</font>,<font color=Maroon>"Y"</font>); <BR />&nbsp;&nbsp;}setcolor(<font color=Maroon>14</font>); <BR />&nbsp;&nbsp;delay(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;outtextxy(<font color=Maroon>420</font>,<font color=Maroon>230</font>,<font color=Maroon>"Y"</font>);&nbsp;&nbsp;<font color=Green>//440</font> <BR />&nbsp;} <BR /> <BR />&nbsp;r(<font color=Blue>int</font>&nbsp;i) <BR />&nbsp;{ <BR />&nbsp;&nbsp;<font color=Blue>if</font>(i==<font color=Maroon>90</font>) <BR />&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;setcolor(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;delay(<font color=Maroon>1</font>); <BR />&nbsp;outtextxy(<font color=Maroon>300</font>+i,<font color=Maroon>230</font>,<font color=Maroon>"R"</font>); <BR />&nbsp;&nbsp;}setcolor(<font color=Maroon>14</font>); <BR />&nbsp;&nbsp;delay(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;outtextxy(<font color=Maroon>390</font>,<font color=Maroon>230</font>,<font color=Maroon>"R"</font>);&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;420</font> <BR />&nbsp;} <BR />&nbsp;e1(<font color=Blue>int</font>&nbsp;i) <BR />&nbsp;{ <BR />&nbsp;&nbsp;<font color=Blue>if</font>(i==<font color=Maroon>60</font>) <BR />&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;setcolor(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;delay(<font color=Maroon>1</font>); <BR />&nbsp;outtextxy(<font color=Maroon>300</font>+i,<font color=Maroon>230</font>,<font color=Maroon>"E"</font>); <BR />&nbsp;&nbsp;}setcolor(<font color=Maroon>14</font>); <BR />&nbsp;&nbsp;delay(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;outtextxy(<font color=Maroon>360</font>,<font color=Maroon>230</font>,<font color=Maroon>"E"</font>);&nbsp;&nbsp;<font color=Green>//400</font> <BR />&nbsp;} <BR />&nbsp;h1(<font color=Blue>int</font>&nbsp;i) <BR />&nbsp;{ <BR />&nbsp;&nbsp;<font color=Blue>if</font>(i==<font color=Maroon>30</font>) <BR />&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;setcolor(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;delay(<font color=Maroon>1</font>); <BR />&nbsp;outtextxy(<font color=Maroon>300</font>+i,<font color=Maroon>230</font>,<font color=Maroon>"H"</font>); <BR />&nbsp;&nbsp;}setcolor(<font color=Maroon>14</font>); <BR />&nbsp;&nbsp;delay(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;outtextxy(<font color=Maroon>330</font>,<font color=Maroon>230</font>,<font color=Maroon>"H"</font>);&nbsp;<font color=Green>//380</font> <BR />&nbsp;} <BR /> <BR />&nbsp;c1(<font color=Blue>int</font>&nbsp;i) <BR />&nbsp;{ <BR />&nbsp;&nbsp;<font color=Blue>if</font>(i==<font color=Maroon>60</font>) <BR />&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;setcolor(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;delay(<font color=Maroon>1</font>); <BR />&nbsp;outtextxy(<font color=Maroon>300</font>+i-i,<font color=Maroon>230</font>,<font color=Maroon>"C"</font>); <BR />&nbsp;&nbsp;}setcolor(<font color=Maroon>14</font>); <BR />&nbsp;&nbsp;delay(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;outtextxy(<font color=Maroon>300</font>,<font color=Maroon>230</font>,<font color=Maroon>"C"</font>);&nbsp;&nbsp;<font color=Green>//360</font> <BR />&nbsp;} <BR />&nbsp;r1(<font color=Blue>int</font>&nbsp;i) <BR />&nbsp;{ <BR />&nbsp;&nbsp;<font color=Blue>if</font>(i==<font color=Maroon>40</font>) <BR />&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;setcolor(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;delay(<font color=Maroon>1</font>); <BR />&nbsp;outtextxy(<font color=Maroon>300</font>+i-<font color=Maroon>70</font>,<font color=Maroon>230</font>,<font color=Maroon>"R"</font>); <BR />&nbsp;&nbsp;}setcolor(<font color=Maroon>14</font>); <BR />&nbsp;&nbsp;delay(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;outtextxy(<font color=Maroon>270</font>,<font color=Maroon>230</font>,<font color=Maroon>"R"</font>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;340</font> <BR />&nbsp;} <BR /> <BR />&nbsp;a1(<font color=Blue>int</font>&nbsp;i) <BR />&nbsp;{ <BR />&nbsp;&nbsp;<font color=Blue>if</font>(i==<font color=Maroon>20</font>) <BR />&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;setcolor(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;delay(<font color=Maroon>1</font>); <BR />&nbsp;outtextxy(<font color=Maroon>300</font>+i-<font color=Maroon>80</font>,<font color=Maroon>230</font>,<font color=Maroon>"A"</font>); <BR />&nbsp;&nbsp;}setcolor(<font color=Maroon>14</font>); <BR />&nbsp;&nbsp;delay(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;outtextxy(<font color=Maroon>240</font>,<font color=Maroon>230</font>,<font color=Maroon>"A"</font>);&nbsp;&nbsp;&nbsp;<font color=Green>//320</font> <BR />&nbsp;} <BR />&nbsp;star(x,y) <BR />&nbsp;{ <BR />&nbsp;delay(<font color=Maroon>80</font>); <BR />&nbsp;line(x,y,x+<font color=Maroon>5</font>,y-<font color=Maroon>7</font>);&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;/1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x=320,&nbsp;y=240</font> <BR />&nbsp;line(x+<font color=Maroon>5</font>,y-<font color=Maroon>7</font>,x+<font color=Maroon>10</font>,y);&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;1</font> <BR />&nbsp;line(x+<font color=Maroon>10</font>,y,x+<font color=Maroon>17</font>,y);&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;right&nbsp;hori</font> <BR />&nbsp;line(x,y,x-<font color=Maroon>7</font>,y);&nbsp;<font color=Green>//left&nbsp;hori</font> <BR />&nbsp;line(x-<font color=Maroon>7</font>,y,x-<font color=Maroon>2</font>,y+<font color=Maroon>7</font>);&nbsp;&nbsp;<font color=Green>//&nbsp;left&nbsp;horiz&nbsp;to&nbsp;right&nbsp;</font> <BR />&nbsp;line(x+<font color=Maroon>17</font>,y,x+<font color=Maroon>12</font>,y+<font color=Maroon>7</font>);&nbsp;<font color=Green>//&nbsp;right&nbsp;horiz&nbsp;to&nbsp;left&nbsp;/</font> <BR />&nbsp;line(x+<font color=Maroon>12</font>,y+<font color=Maroon>7</font>,x+<font color=Maroon>14</font>,y+<font color=Maroon>13</font>);&nbsp;<font color=Green>//&nbsp;left&nbsp;/&nbsp;to&nbsp;right&nbsp;</font> <BR />&nbsp;line(x-<font color=Maroon>2</font>,y+<font color=Maroon>7</font>,x-<font color=Maroon>4</font>,y+<font color=Maroon>13</font>);&nbsp;<font color=Green>//&nbsp;right&nbsp;&nbsp;to&nbsp;left&nbsp;/</font> <BR />&nbsp;line(x-<font color=Maroon>4</font>,y+<font color=Maroon>13</font>,x+<font color=Maroon>5</font>,y+<font color=Maroon>7</font>); <BR />&nbsp;line(x+<font color=Maroon>14</font>,y+<font color=Maroon>13</font>,x+<font color=Maroon>5</font>,y+<font color=Maroon>7</font>); <BR />&nbsp;} <BR />front() <BR />{ <BR /><font color=Blue>int</font>&nbsp;gm=<font color=Maroon>0</font>,gd=DETECT,i,j,k,jk,gh; <BR />initgraph(&amp;gd,&amp;gm,<font color=Maroon>"&nbsp;"</font>); <BR />setcolor(MAGENTA); <BR />rectangle(<font color=Maroon>10</font>,<font color=Maroon>10</font>,<font color=Maroon>639</font>,<font color=Maroon>469</font>); <BR />rectangle(<font color=Maroon>12</font>,<font color=Maroon>12</font>,<font color=Maroon>637</font>,<font color=Maroon>467</font>); <BR /><font color=Blue>for</font>(i=<font color=Maroon>12</font>;i&lt;=<font color=Maroon>627</font>;i+=<font color=Maroon>12</font>) <BR />{ <BR /> <BR />setcolor(YELLOW); <BR />line(i,<font color=Maroon>12</font>,i,<font color=Maroon>467</font>); <BR /><font color=Green>//clearviewport();</font> <BR /><font color=Blue>for</font>(j=<font color=Maroon>15</font>;j&lt;=<font color=Maroon>464</font>;j+=<font color=Maroon>5</font>) <BR />ellipse(i+<font color=Maroon>6</font>,j,-<font color=Maroon>180</font>,<font color=Maroon>0</font>,<font color=Maroon>6</font>,<font color=Maroon>4</font>); <BR /> <BR />} <BR /><font color=Blue>for</font>(i=<font color=Maroon>3</font>;i&lt;=<font color=Maroon>452</font>;i+=<font color=Maroon>5</font>) <BR />{&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>15</font>;j&lt;=<font color=Maroon>627</font>;j+=<font color=Maroon>3</font>) <BR />&nbsp;&nbsp;{setcolor(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;ellipse(j,<font color=Maroon>467</font>-i,-<font color=Maroon>180</font>,<font color=Maroon>0</font>,<font color=Maroon>3</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;}delay(<font color=Maroon>40</font>); <BR />&nbsp;&nbsp;&nbsp;setcolor(BLACK); <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(k=<font color=Maroon>1</font>;k&lt;=<font color=Maroon>5</font>;k++) <BR />&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;line(<font color=Maroon>12</font>,<font color=Maroon>467</font>-i+k,<font color=Maroon>637</font>,<font color=Maroon>467</font>-i+k);&nbsp;} <BR />&nbsp;<font color=Green>//setcolor(25);</font> <BR />&nbsp;&nbsp;setcolor(GREEN+MAGENTA+WHITE+BLUE+YELLOW); <BR />rectangle(<font color=Maroon>10</font>,<font color=Maroon>10</font>,<font color=Maroon>639</font>,<font color=Maroon>469</font>); <BR />rectangle(<font color=Maroon>12</font>,<font color=Maroon>12</font>,<font color=Maroon>637</font>,<font color=Maroon>467</font>); <BR /> <BR />} <BR />setcolor(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rectangle(<font color=Maroon>290</font>,<font color=Maroon>370</font>,<font color=Maroon>350</font>,<font color=Maroon>380</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rectangle(<font color=Maroon>292</font>,<font color=Maroon>372</font>,<font color=Maroon>348</font>,<font color=Maroon>378</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gh=<font color=Maroon>292</font>;&nbsp;<font color=Green>//gh&lt;=388;</font> <BR /> <BR /><font color=Blue>for</font>(j=<font color=Maroon>1</font>;j&lt;=<font color=Maroon>56</font>;j+=<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;{&nbsp;<font color=Green>/*&nbsp;for(i=24;i&lt;=627;i+=12) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{setcolor(i); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(i,23,3); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(1); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;*/</font>&nbsp;&nbsp;jk=<font color=Maroon>20</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>24</font>;i&lt;=<font color=Maroon>627</font>;i+=<font color=Maroon>12</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{setcolor(random(<font color=Maroon>15</font>)); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(i,<font color=Maroon>23</font>,<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;sound(<font color=Maroon>200</font>-i); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nosound(); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(YELLOW); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rectangle(gh,<font color=Maroon>372</font>,gh,<font color=Maroon>378</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//rectangle(282,362,358,388);}</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;jk+=<font color=Maroon>40</font>; <BR />&nbsp;<font color=Blue>if</font>(jk&gt;=<font color=Maroon>880</font>) <BR />&nbsp;{&nbsp;jk=<font color=Maroon>440</font>;} <BR /> <BR />} <BR />gh=gh+<font color=Maroon>1</font>; <BR />nosound(); <BR />} <BR /><font color=Green>//printf("sdfs");</font> <BR />sta(); <BR />sleep(<font color=Maroon>.1</font>); <BR /><font color=Green>//closegraph();</font> <BR />} <BR />gaover() <BR />{ <BR /><font color=Blue>int</font>&nbsp;gm=<font color=Maroon>0</font>,gd=DETECT,i,j; <BR />initgraph(&amp;gd,&amp;gm,<font color=Maroon>"&nbsp;"</font>); <BR /> <BR /><font color=Blue>for</font>(i=<font color=Maroon>1</font>;i&lt;=<font color=Maroon>51</font>;i+=<font color=Maroon>4</font>) <BR />{ <BR />setcolor(i); <BR />sound(<font color=Maroon>400</font>-i); <BR />outtextxy(<font color=Maroon>260</font>,<font color=Maroon>340</font>,<font color=Maroon>"GAME&nbsp;OVER"</font>); <BR /><font color=Blue>if</font>(i==<font color=Maroon>49</font>) <BR />{ <BR />setcolor(YELLOW); <BR />outtextxy(<font color=Maroon>260</font>,<font color=Maroon>340</font>,<font color=Maroon>"GAME&nbsp;OVER"</font>); <BR />} <BR />nosound(); <BR />go(<font color=Maroon>0</font>,<font color=Maroon>60</font>,<font color=Maroon>20</font>,<font color=Maroon>80</font>,random(<font color=Maroon>15</font>),random(<font color=Maroon>15</font>)); <BR />delay(<font color=Maroon>3</font>); <BR />go(<font color=Maroon>400</font>,<font color=Maroon>460</font>,<font color=Maroon>420</font>,<font color=Maroon>480</font>,random(<font color=Maroon>15</font>),random(<font color=Maroon>15</font>)); <BR />} <BR /> <BR /><font color=Green>//getch();</font> <BR />} <BR /> <BR />go(<font color=Blue>int</font>&nbsp;sy1,<font color=Blue>int</font>&nbsp;ey1,<font color=Blue>int</font>&nbsp;sy2,<font color=Blue>int</font>&nbsp;ey2,<font color=Blue>int</font>&nbsp;k,<font color=Blue>int</font>&nbsp;h) <BR />{ <BR /><font color=Blue>int</font>&nbsp;i,j; <BR /><font color=Blue>for</font>(j=sy1;j&lt;=ey1;j+=<font color=Maroon>40</font>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//120</font> <BR />{ <BR /> <BR /><font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=<font color=Maroon>640</font>;i+=<font color=Maroon>40</font>) <BR />{ <BR /> <BR />setcolor(k); <BR />rectangle(i,<font color=Maroon>1</font>+j,<font color=Maroon>20</font>+i,<font color=Maroon>21</font>+j); <BR />setfillstyle(SOLID_FILL,k); <BR />floodfill(<font color=Maroon>10</font>+i,<font color=Maroon>10</font>+j,k); <BR />setcolor(h); <BR />rectangle(<font color=Maroon>20</font>+i,<font color=Maroon>1</font>+j,<font color=Maroon>40</font>+i,<font color=Maroon>21</font>+j); <BR />setfillstyle(SOLID_FILL,h); <BR />floodfill(<font color=Maroon>25</font>+i,<font color=Maroon>10</font>+j,h); <BR />} <BR />} <BR /><font color=Blue>for</font>(j=sy2;j&lt;=ey2;j+=<font color=Maroon>40</font>) <BR />{ <BR /> <BR /><font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=<font color=Maroon>640</font>;i+=<font color=Maroon>40</font>) <BR />{ <BR /> <BR />setcolor(h); <BR />rectangle(i,<font color=Maroon>1</font>+j,<font color=Maroon>20</font>+i,<font color=Maroon>21</font>+j); <BR />setfillstyle(SOLID_FILL,h); <BR />floodfill(<font color=Maroon>10</font>+i,<font color=Maroon>10</font>+j,h); <BR />setcolor(k); <BR />rectangle(<font color=Maroon>20</font>+i,<font color=Maroon>1</font>+j,<font color=Maroon>40</font>+i,<font color=Maroon>21</font>+j); <BR />setfillstyle(SOLID_FILL,k); <BR />floodfill(<font color=Maroon>25</font>+i,<font color=Maroon>10</font>+j,k); <BR />} <BR />} <BR /><font color=Green>//</font> <BR />} <BR /> <BR />select(<font color=Blue>int</font>&nbsp;scor,<font color=Blue>int</font>&nbsp;p,<font color=Blue>int</font>&nbsp;q) <BR />{ <BR /><font color=Blue>switch</font>(scor) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>0</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"0"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>10</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"10"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>20</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"20"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>30</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"30"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>40</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"40"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>50</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"50"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>60</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"60"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>70</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"70"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>80</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"80"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>90</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"90"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>100</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"100"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>110</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"110"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>120</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"120"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>130</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"130"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>140</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"140"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>150</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"150"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>160</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"160"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>170</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"170"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>180</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"180"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>190</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"190"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>200</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"200"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>210</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"210"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>220</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"220"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>230</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"230"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>240</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"240"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>250</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"250"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>260</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"260"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>270</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"270"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>280</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"280"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>290</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"290"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>300</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"300"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>310</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"310"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>320</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"320"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>330</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"330"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>340</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"340"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>350</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"350"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>360</font>:&nbsp;outtextxy(<font color=Maroon>530</font>+p,<font color=Maroon>50</font>+q,<font color=Maroon>"360"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />flower(<font color=Blue>int</font>&nbsp;i,<font color=Blue>int</font>&nbsp;j) <BR />{ <BR />setcolor(<font color=Maroon>14</font>); <BR />circle(<font color=Maroon>320</font>+i,<font color=Maroon>240</font>+j,<font color=Maroon>10</font>); <BR />setfillstyle(SOLID_FILL,RED); <BR />floodfill(<font color=Maroon>323</font>+i,<font color=Maroon>241</font>+j,<font color=Maroon>14</font>); <BR /><font color=Green>//1</font> <BR />setcolor(<font color=Maroon>14</font>); <BR /><font color=Green>//floodfill(316,223,13);</font> <BR />ellipse(<font color=Maroon>310</font>+i,<font color=Maroon>220</font>+j,<font color=Maroon>90</font>,-<font color=Maroon>90</font>,<font color=Maroon>6</font>,<font color=Maroon>12</font>); <BR />ellipse(<font color=Maroon>330</font>+i,<font color=Maroon>220</font>+j,-<font color=Maroon>90</font>,<font color=Maroon>90</font>,<font color=Maroon>6</font>,<font color=Maroon>12</font>); <BR />ellipse(<font color=Maroon>320</font>+i,<font color=Maroon>207</font>+j,<font color=Maroon>180</font>,<font color=Maroon>0</font>,<font color=Maroon>8</font>,<font color=Maroon>2</font>); <BR /><font color=Green>//2</font> <BR />ellipse(<font color=Maroon>310</font>+i,<font color=Maroon>260</font>+j,<font color=Maroon>90</font>,-<font color=Maroon>90</font>,<font color=Maroon>6</font>,<font color=Maroon>12</font>); <BR />ellipse(<font color=Maroon>330</font>+i,<font color=Maroon>260</font>+j,-<font color=Maroon>90</font>,<font color=Maroon>90</font>,<font color=Maroon>6</font>,<font color=Maroon>12</font>); <BR />ellipse(<font color=Maroon>320</font>+i,<font color=Maroon>273</font>+j,<font color=Maroon>0</font>,<font color=Maroon>180</font>,<font color=Maroon>8</font>,<font color=Maroon>2</font>); <BR /><font color=Green>//3</font> <BR />ellipse(<font color=Maroon>298</font>+i,<font color=Maroon>248</font>+j,<font color=Maroon>180</font>,<font color=Maroon>0</font>,<font color=Maroon>12</font>,<font color=Maroon>6</font>); <BR />ellipse(<font color=Maroon>298</font>+i,<font color=Maroon>233</font>+j,<font color=Maroon>0</font>,<font color=Maroon>180</font>,<font color=Maroon>12</font>,<font color=Maroon>6</font>); <BR />ellipse(<font color=Maroon>286</font>+i,<font color=Maroon>240</font>+j,-<font color=Maroon>90</font>,<font color=Maroon>90</font>,<font color=Maroon>2</font>,<font color=Maroon>8</font>); <BR /><font color=Green>//4</font> <BR />ellipse(<font color=Maroon>342</font>+i,<font color=Maroon>247</font>+j,<font color=Maroon>180</font>,<font color=Maroon>0</font>,<font color=Maroon>12</font>,<font color=Maroon>6</font>); <BR />ellipse(<font color=Maroon>342</font>+i,<font color=Maroon>233</font>+j,<font color=Maroon>0</font>,<font color=Maroon>180</font>,<font color=Maroon>12</font>,<font color=Maroon>6</font>); <BR />ellipse(<font color=Maroon>354</font>+i,<font color=Maroon>240</font>+j,<font color=Maroon>90</font>,-<font color=Maroon>90</font>,<font color=Maroon>2</font>,<font color=Maroon>8</font>); <BR />} <BR /> <BR />finalwindow() <BR />{ <BR /><font color=Blue>for</font>(k=-<font color=Maroon>285</font>;k&lt;=<font color=Maroon>320</font>;k+=<font color=Maroon>70</font>) <BR />{&nbsp;flower(k,-<font color=Maroon>205</font>); <BR />&nbsp;&nbsp;flower(k,+<font color=Maroon>180</font>); <BR />&nbsp;&nbsp;<font color=Green>//clearviewport();</font> <BR />&nbsp;&nbsp;delay(<font color=Maroon>100</font>); <BR />} <BR /><font color=Blue>for</font>(k=-<font color=Maroon>140</font>;k&lt;=<font color=Maroon>180</font>;k+=<font color=Maroon>40</font>) <BR />{&nbsp;flower(-<font color=Maroon>285</font>,k); <BR />&nbsp;&nbsp;flower(<font color=Maroon>276</font>,k); <BR />&nbsp;&nbsp;<font color=Green>//clearviewport();</font> <BR />&nbsp;&nbsp;delay(<font color=Maroon>100</font>); <BR />&nbsp;&nbsp;} <BR /> <BR />setcolor(<font color=Maroon>2</font>); <BR />sleep(<font color=Maroon>4</font>); <BR /> <BR />}</div>
        
         ]]>
        </string>
        <string name="CprojectChessGame" formatted="false"> 
        <![CDATA[
       <div>Chess&nbsp;<font color=Blue>for</font>&nbsp;two&nbsp;humans <BR /> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR />#<font color=Blue>include</font>&lt;graphics.h&gt; <BR /><font color=Blue>void</font>&nbsp;blk(<font color=Blue>int</font>,<font color=Blue>int</font>); <BR /><font color=Blue>void</font>&nbsp;display(); <BR /><font color=Green>//enum&nbsp;bool{TRUE,FALSE};</font> <BR /><font color=Green>/*void&nbsp;main()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//MAIN&nbsp;FUNCTION <BR />{ <BR />display(); <BR />getch(); <BR />}&nbsp;*/</font> <BR /><font color=Blue>void</font>&nbsp;display()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//DISPLAY&nbsp;TO&nbsp;SHOW&nbsp;THE&nbsp;BOARD</font> <BR />{ <BR /><font color=Blue>int</font>&nbsp;gd=DETECT,gm,i,j,l,m,b; <BR /><font color=Blue>char</font>&nbsp;pattern[]={<font color=Maroon>0xFF</font>,<font color=Maroon>0xFF</font>,<font color=Maroon>0xFF</font>,<font color=Maroon>0xFF</font>,<font color=Maroon>0xFF</font>,<font color=Maroon>0xFF</font>,<font color=Maroon>0xFF</font>,<font color=Maroon>0xFF</font>}; <BR /><font color=Blue>int</font>&nbsp;arrodd[<font color=Maroon>32</font>][<font color=Maroon>2</font>]={&nbsp;{<font color=Maroon>0</font>,<font color=Maroon>0</font>},{<font color=Maroon>100</font>,<font color=Maroon>0</font>},{<font color=Maroon>200</font>,<font color=Maroon>0</font>},{<font color=Maroon>300</font>,<font color=Maroon>0</font>},{<font color=Maroon>50</font>,<font color=Maroon>50</font>},{<font color=Maroon>150</font>,<font color=Maroon>50</font>} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,{<font color=Maroon>250</font>,<font color=Maroon>50</font>},{<font color=Maroon>350</font>,<font color=Maroon>50</font>},{<font color=Maroon>0</font>,<font color=Maroon>100</font>},{<font color=Maroon>100</font>,<font color=Maroon>100</font>},{<font color=Maroon>200</font>,<font color=Maroon>100</font>},{<font color=Maroon>300</font>,<font color=Maroon>100</font>} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,{<font color=Maroon>50</font>,<font color=Maroon>150</font>},{<font color=Maroon>150</font>,<font color=Maroon>150</font>},{<font color=Maroon>250</font>,<font color=Maroon>150</font>},{<font color=Maroon>350</font>,<font color=Maroon>150</font>},{<font color=Maroon>0</font>,<font color=Maroon>200</font>},{<font color=Maroon>100</font>,<font color=Maroon>200</font>} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;,{<font color=Maroon>200</font>,<font color=Maroon>200</font>},{<font color=Maroon>300</font>,<font color=Maroon>200</font>},{<font color=Maroon>50</font>,<font color=Maroon>250</font>},{<font color=Maroon>150</font>,<font color=Maroon>250</font>},{<font color=Maroon>250</font>,<font color=Maroon>250</font>},{<font color=Maroon>350</font>,<font color=Maroon>250</font>}, <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<font color=Maroon>0</font>,<font color=Maroon>300</font>},{<font color=Maroon>100</font>,<font color=Maroon>300</font>},{<font color=Maroon>200</font>,<font color=Maroon>300</font>},{<font color=Maroon>300</font>,<font color=Maroon>300</font>},{<font color=Maroon>50</font>,<font color=Maroon>350</font>},{<font color=Maroon>150</font>,<font color=Maroon>350</font>}, <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<font color=Maroon>250</font>,<font color=Maroon>350</font>},{<font color=Maroon>350</font>,<font color=Maroon>350</font>}&nbsp;}; <BR /><font color=Blue>int</font> <BR />arrevn[<font color=Maroon>33</font>][<font color=Maroon>2</font>]={{<font color=Maroon>50</font>,<font color=Maroon>0</font>},{<font color=Maroon>150</font>,<font color=Maroon>0</font>},{<font color=Maroon>250</font>,<font color=Maroon>0</font>},{<font color=Maroon>350</font>,<font color=Maroon>0</font>},{<font color=Maroon>0</font>,<font color=Maroon>50</font>},{<font color=Maroon>100</font>,<font color=Maroon>50</font>},{<font color=Maroon>200</font>,<font color=Maroon>50</font>}, <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<font color=Maroon>300</font>,<font color=Maroon>50</font>},{<font color=Maroon>50</font>,<font color=Maroon>100</font>},{<font color=Maroon>150</font>,<font color=Maroon>100</font>},{<font color=Maroon>250</font>,<font color=Maroon>100</font>},{<font color=Maroon>350</font>,<font color=Maroon>100</font>},{<font color=Maroon>0</font>,<font color=Maroon>150</font>}, <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<font color=Maroon>100</font>,<font color=Maroon>150</font>},{<font color=Maroon>200</font>,<font color=Maroon>150</font>},{<font color=Maroon>300</font>,<font color=Maroon>150</font>},{<font color=Maroon>50</font>,<font color=Maroon>200</font>},{<font color=Maroon>150</font>,<font color=Maroon>200</font>},{<font color=Maroon>250</font>,<font color=Maroon>200</font>}, <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<font color=Maroon>350</font>,<font color=Maroon>200</font>},{<font color=Maroon>0</font>,<font color=Maroon>250</font>},{<font color=Maroon>100</font>,<font color=Maroon>250</font>},{<font color=Maroon>200</font>,<font color=Maroon>250</font>},{<font color=Maroon>300</font>,<font color=Maroon>250</font>},{<font color=Maroon>50</font>,<font color=Maroon>300</font>}, <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<font color=Maroon>150</font>,<font color=Maroon>300</font>},{<font color=Maroon>250</font>,<font color=Maroon>300</font>},{<font color=Maroon>350</font>,<font color=Maroon>300</font>},{<font color=Maroon>0</font>,<font color=Maroon>350</font>},{<font color=Maroon>100</font>,<font color=Maroon>350</font>},{<font color=Maroon>200</font>,<font color=Maroon>350</font>}, <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<font color=Maroon>300</font>,<font color=Maroon>350</font>}}; <BR /> <BR /> <BR />clrscr(); <BR />initgraph(&amp;gd,&amp;gm,<font color=Maroon>""</font>); <BR /><font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=<font color=Maroon>400</font>;i=i+<font color=Maroon>50</font>)&nbsp;&nbsp;<font color=Green>//to&nbsp;draw&nbsp;vertical&nbsp;lines&nbsp;of&nbsp;the&nbsp;chess&nbsp;board.</font> <BR />{ <BR />line(i,<font color=Maroon>0</font>,i,<font color=Maroon>400</font>); <BR />} <BR /><font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;=<font color=Maroon>400</font>;j=j+<font color=Maroon>50</font>)&nbsp;&nbsp;<font color=Green>//to&nbsp;draw&nbsp;the&nbsp;horizontal&nbsp;lines&nbsp;of&nbsp;the&nbsp;chess&nbsp;</font> <BR />board. <BR />{ <BR />line(<font color=Maroon>0</font>,j,<font color=Maroon>400</font>,j); <BR />} <BR />blk(<font color=Maroon>420</font>,<font color=Maroon>0</font>); <BR />blk(<font color=Maroon>420</font>,<font color=Maroon>250</font>); <BR />line(<font color=Maroon>0</font>,<font color=Maroon>430</font>,<font color=Maroon>0</font>,<font color=Maroon>460</font>);&nbsp;&nbsp;&nbsp;<font color=Green>//to&nbsp;draw&nbsp;the&nbsp;display&nbsp;at&nbsp;the&nbsp;bottom</font> <BR />line(<font color=Maroon>0</font>,<font color=Maroon>430</font>,<font color=Maroon>400</font>,<font color=Maroon>430</font>); <BR />line(<font color=Maroon>0</font>,<font color=Maroon>460</font>,<font color=Maroon>400</font>,<font color=Maroon>460</font>); <BR />line(<font color=Maroon>400</font>,<font color=Maroon>430</font>,<font color=Maroon>400</font>,<font color=Maroon>460</font>); <BR />settextstyle(<font color=Maroon>7</font>,HORIZ_DIR,<font color=Maroon>3</font>); <BR />setfillpattern(&amp;pattern,GREEN); <BR /><font color=Blue>for</font>(b=<font color=Maroon>0</font>;b&lt;=<font color=Maroon>31</font>;b++) <BR />{ <BR />bar(arrodd[b][<font color=Maroon>0</font>],arrodd[b][<font color=Maroon>1</font>],arrodd[b][<font color=Maroon>0</font>]+<font color=Maroon>50</font>,arrodd[b][<font color=Maroon>1</font>]+<font color=Maroon>50</font>); <BR />rectangle(arrodd[b][<font color=Maroon>0</font>],arrodd[b][<font color=Maroon>1</font>],arrodd[b][<font color=Maroon>0</font>]+<font color=Maroon>50</font>,arrodd[b][<font color=Maroon>1</font>]+<font color=Maroon>50</font>); <BR />} <BR />setfillpattern(&amp;pattern,DARKGRAY); <BR /><font color=Blue>for</font>(m=<font color=Maroon>0</font>;m&lt;=<font color=Maroon>31</font>;m++) <BR />{ <BR />bar(arrevn[m][<font color=Maroon>0</font>],arrevn[m][<font color=Maroon>1</font>],arrevn[m][<font color=Maroon>0</font>]+<font color=Maroon>50</font>,arrevn[m][<font color=Maroon>1</font>]+<font color=Maroon>50</font>); <BR />rectangle(arrevn[m][<font color=Maroon>0</font>],arrevn[m][<font color=Maroon>1</font>],arrevn[m][<font color=Maroon>0</font>]+<font color=Maroon>50</font>,arrevn[m][<font color=Maroon>1</font>]+<font color=Maroon>50</font>); <BR />} <BR />} <BR />&nbsp;<font color=Blue>void</font>&nbsp;blk(<font color=Blue>int</font>&nbsp;q,<font color=Blue>int</font>&nbsp;r) <BR />{ <BR /><font color=Blue>int</font>&nbsp;y,z; <BR /><font color=Blue>for</font>(y=q;y&lt;=(q+<font color=Maroon>200</font>);y=y+<font color=Maroon>50</font>) <BR />{&nbsp;line(y,r,y,r+<font color=Maroon>200</font>);} <BR /><font color=Blue>for</font>(z=r;z&lt;=(r+<font color=Maroon>200</font>);z=z+<font color=Maroon>50</font>) <BR />{&nbsp;line(q,z,q+<font color=Maroon>200</font>,z);} <BR />} <BR /> <BR /> <BR /> <BR /><font color=Green>//Source&nbsp;file//</font> <BR />#<font color=Blue>include</font>&lt;akhchs.c&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//we&nbsp;used&nbsp;akhchs.c&nbsp;as&nbsp;header&nbsp;file</font> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR />#<font color=Blue>include</font>&lt;dos.h&gt; <BR /><font color=Blue>char</font>&nbsp;pos[<font color=Maroon>8</font>][<font color=Maroon>8</font>],color[<font color=Maroon>8</font>][<font color=Maroon>8</font>]; <BR /><font color=Blue>void</font>&nbsp;assign(<font color=Blue>char</font>*,<font color=Blue>char</font>*); <BR /><font color=Blue>struct</font>&nbsp;block{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//structure&nbsp;for&nbsp;every&nbsp;block</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;curx,cury; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;clr,blkcolor; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}; <BR /><font color=Blue>union</font>&nbsp;REGS&nbsp;i,o;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//for&nbsp;hardware&nbsp;interaction</font> <BR /><font color=Blue>char</font>&nbsp;getblkcolor(<font color=Blue>int</font>,<font color=Blue>int</font>,<font color=Blue>int</font>,<font color=Blue>int</font>,<font color=Blue>char</font>);&nbsp;<font color=Green>//functions&nbsp;prototype</font> <BR /><font color=Blue>char</font>&nbsp;chkpawnmov(<font color=Blue>struct</font>&nbsp;block*&nbsp;selected,<font color=Blue>int</font>&nbsp;x3,<font color=Blue>int</font>&nbsp;y3); <BR /><font color=Blue>char</font>&nbsp;chkrookmov(<font color=Blue>struct</font>&nbsp;block*&nbsp;selected,<font color=Blue>int</font>&nbsp;x3,<font color=Blue>int</font>&nbsp;y3); <BR /><font color=Blue>char</font>&nbsp;chkknightmov(<font color=Blue>struct</font>&nbsp;block*&nbsp;selected,<font color=Blue>int</font>&nbsp;x3,<font color=Blue>int</font>&nbsp;y3); <BR /><font color=Blue>char</font>&nbsp;chkbishopmov(<font color=Blue>struct</font>&nbsp;block*&nbsp;selected,<font color=Blue>int</font>&nbsp;x3,<font color=Blue>int</font>&nbsp;y3); <BR /><font color=Blue>char</font>&nbsp;chkqueenmov(<font color=Blue>struct</font>&nbsp;block*&nbsp;selected,<font color=Blue>int</font>&nbsp;x3,<font color=Blue>int</font>&nbsp;y3); <BR /><font color=Blue>char</font>&nbsp;chkkingmov(<font color=Blue>struct</font>&nbsp;block*&nbsp;selected,<font color=Blue>int</font>&nbsp;x3,<font color=Blue>int</font>&nbsp;y3); <BR /><font color=Blue>void</font>&nbsp;checkpwn(<font color=Blue>int</font>,<font color=Blue>int</font>); <BR /><font color=Blue>void</font>&nbsp;main() <BR />{ <BR /><font color=Blue>int</font>&nbsp;i1,j1,button,x,y,x1,y1,x2,y2,x3,y3,ch,i=<font color=Maroon>0</font>,j=<font color=Maroon>0</font>,z=<font color=Maroon>1</font>,turn=<font color=Maroon>0</font>; <BR /><font color=Blue>struct</font>&nbsp;block <BR />*selected,pw[<font color=Maroon>8</font>],pb[<font color=Maroon>8</font>],rookw[<font color=Maroon>2</font>],rookb[<font color=Maroon>2</font>],bishopw[<font color=Maroon>2</font>],bishopb[<font color=Maroon>2</font>]; <BR /><font color=Blue>struct</font>&nbsp;block&nbsp;kingw,kingb,queenw,queenb,knightw[<font color=Maroon>2</font>],knightb[<font color=Maroon>2</font>]; <BR /><font color=Blue>char</font>&nbsp;id,nwblkclr,move=<font color=Maroon>i</font>; <BR />assign(pos,color); <BR />clrscr(); <BR />display();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//for&nbsp;showing&nbsp;chess&nbsp;board</font> <BR />design(); <BR />setspare();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//for&nbsp;drawing&nbsp;rook&nbsp;etc.</font> <BR />setposw(pw);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//sets&nbsp;position&nbsp;of&nbsp;black&nbsp;and</font> <BR />setposb(pb);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//white&nbsp;pawns&nbsp;with&nbsp;color</font> <BR />setposrw(rookw,bishopw,knightw,&amp;kingw,&amp;queenw);<font color=Green>//sets&nbsp;position&nbsp;of&nbsp;</font> <BR />whites <BR />setposrb(rookb,bishopb,knightb,&amp;kingb,&amp;queenb);<font color=Green>//sete&nbsp;position&nbsp;of&nbsp;</font> <BR />blacks <BR /><font color=Green>//restrictmouseptr(0,0,400,400);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//restricts&nbsp;pointer&nbsp;of&nbsp;mouse&nbsp;in&nbsp;</font> <BR />the <BR />area&nbsp;specified&nbsp;there. <BR />showmouseptr(); <BR /><font color=Blue>while</font>(z) <BR />{ <BR />i=i+<font color=Maroon>1</font>; <BR />setcolor(WHITE); <BR /><font color=Blue>if</font>(turn%<font color=Maroon>2</font>==<font color=Maroon>0</font>)&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//means&nbsp;whites&nbsp;turn</font> <BR />&nbsp;outtextxy(<font color=Maroon>100</font>,<font color=Maroon>430</font>,<font color=Maroon>"whites&nbsp;turn"</font>); <BR /><font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(turn%<font color=Maroon>2</font>!=<font color=Maroon>0</font>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//means&nbsp;blacks&nbsp;turn</font> <BR />&nbsp;outtextxy(<font color=Maroon>100</font>,<font color=Maroon>430</font>,<font color=Maroon>"blacks&nbsp;turn"</font>); <BR /><font color=Blue>while</font>(i) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(kbhit()) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch=getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(ch== <BR />)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//escape&nbsp;at&nbsp;pressing&nbsp;enter.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getmousepos(&amp;button,&amp;x,&amp;y);&nbsp;&nbsp;<font color=Green>//gets&nbsp;click&nbsp;position&nbsp;of&nbsp;mouse</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>((button==&nbsp;<font color=Maroon>001</font>)) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sound(<font color=Maroon>1000</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i=i-<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>50</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nosound(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>500</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x1=relposx(x)/<font color=Maroon>50</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y1=relposy(y)/<font color=Maroon>50</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gotoxy(<font color=Maroon>6</font>,<font color=Maroon>28</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(x1==pw[<font color=Maroon>0</font>].curx&nbsp;&amp;&amp;&nbsp;y1==pw[<font color=Maroon>0</font>].cury&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;pw[<font color=Maroon>0</font>];&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>p</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==pw[<font color=Maroon>1</font>].curx&nbsp;&amp;&amp;&nbsp;y1==pw[<font color=Maroon>1</font>].cury&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;pw[<font color=Maroon>1</font>];&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>p</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==pw[<font color=Maroon>2</font>].curx&nbsp;&amp;&amp;&nbsp;y1==pw[<font color=Maroon>2</font>].cury&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;pw[<font color=Maroon>2</font>];&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>p</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==pw[<font color=Maroon>3</font>].curx&nbsp;&amp;&amp;&nbsp;y1==pw[<font color=Maroon>3</font>].cury&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;pw[<font color=Maroon>3</font>];&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>p</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==pw[<font color=Maroon>4</font>].curx&nbsp;&amp;&amp;&nbsp;y1==pw[<font color=Maroon>4</font>].cury&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;pw[<font color=Maroon>4</font>];&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>p</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==pw[<font color=Maroon>5</font>].curx&nbsp;&amp;&amp;&nbsp;y1==pw[<font color=Maroon>5</font>].cury&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;pw[<font color=Maroon>5</font>];&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>p</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==pw[<font color=Maroon>6</font>].curx&nbsp;&amp;&amp;&nbsp;y1==pw[<font color=Maroon>6</font>].cury&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;pw[<font color=Maroon>6</font>];&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>p</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==pw[<font color=Maroon>7</font>].curx&nbsp;&amp;&amp;&nbsp;y1==pw[<font color=Maroon>7</font>].cury&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;pw[<font color=Maroon>7</font>];&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>p</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==pb[<font color=Maroon>0</font>].curx&nbsp;&amp;&amp;&nbsp;y1==pb[<font color=Maroon>0</font>].cury&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;pb[<font color=Maroon>0</font>];&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>p</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==pb[<font color=Maroon>1</font>].curx&nbsp;&amp;&amp;&nbsp;y1==pb[<font color=Maroon>1</font>].cury&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;pb[<font color=Maroon>1</font>];&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>p</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==pb[<font color=Maroon>2</font>].curx&nbsp;&amp;&amp;&nbsp;y1==pb[<font color=Maroon>2</font>].cury&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;pb[<font color=Maroon>2</font>];&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>p</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==pb[<font color=Maroon>3</font>].curx&nbsp;&amp;&amp;&nbsp;y1==pb[<font color=Maroon>3</font>].cury&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;pb[<font color=Maroon>3</font>];&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>p</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==pb[<font color=Maroon>4</font>].curx&nbsp;&amp;&amp;&nbsp;y1==pb[<font color=Maroon>4</font>].cury&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;pb[<font color=Maroon>4</font>];&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>p</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==pb[<font color=Maroon>5</font>].curx&nbsp;&amp;&amp;&nbsp;y1==pb[<font color=Maroon>5</font>].cury&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;pb[<font color=Maroon>5</font>];&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>p</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==pb[<font color=Maroon>6</font>].curx&nbsp;&amp;&amp;&nbsp;y1==pb[<font color=Maroon>6</font>].cury&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;pb[<font color=Maroon>6</font>];&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>p</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==pb[<font color=Maroon>7</font>].curx&nbsp;&amp;&amp;&nbsp;y1==pb[<font color=Maroon>7</font>].cury&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;pb[<font color=Maroon>7</font>];&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>p</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==rookw[<font color=Maroon>0</font>].curx&nbsp;&amp;&amp;&nbsp;y1==rookw[<font color=Maroon>0</font>].cury) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;rookw[<font color=Maroon>0</font>];&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>r</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==rookw[<font color=Maroon>1</font>].curx&nbsp;&amp;&amp;&nbsp;y1==rookw[<font color=Maroon>1</font>].cury) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;rookw[<font color=Maroon>1</font>];&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>r</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==rookb[<font color=Maroon>0</font>].curx&nbsp;&amp;&amp;&nbsp;y1==rookb[<font color=Maroon>0</font>].cury) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;rookb[<font color=Maroon>0</font>];&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>r</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==rookb[<font color=Maroon>1</font>].curx&nbsp;&amp;&amp;&nbsp;y1==rookb[<font color=Maroon>1</font>].cury) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;rookb[<font color=Maroon>1</font>];&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>r</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==bishopw[<font color=Maroon>0</font>].curx&nbsp;&amp;&amp;&nbsp;y1==bishopw[<font color=Maroon>0</font>].cury) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;bishopw[<font color=Maroon>0</font>];id=<font color=Maroon>b</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==bishopw[<font color=Maroon>1</font>].curx&nbsp;&amp;&amp;&nbsp;y1==bishopw[<font color=Maroon>1</font>].cury) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;bishopw[<font color=Maroon>1</font>];id=<font color=Maroon>b</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==bishopb[<font color=Maroon>0</font>].curx&nbsp;&amp;&amp;&nbsp;y1==bishopb[<font color=Maroon>0</font>].cury) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;bishopb[<font color=Maroon>0</font>];id=<font color=Maroon>b</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==bishopb[<font color=Maroon>1</font>].curx&nbsp;&amp;&amp;&nbsp;y1==bishopb[<font color=Maroon>1</font>].cury) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;bishopb[<font color=Maroon>1</font>];id=<font color=Maroon>b</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==kingw.curx&nbsp;&amp;&amp;&nbsp;y1==kingw.cury) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;kingw;&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>g</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==queenw.curx&nbsp;&amp;&amp;&nbsp;y1==queenw.cury) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;queenw;&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>q</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==kingb.curx&nbsp;&amp;&amp;&nbsp;y1==kingb.cury) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;kingb;&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>g</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==queenb.curx&nbsp;&amp;&amp;&nbsp;y1==queenb.cury) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;queenb;&nbsp;&nbsp;&nbsp;&nbsp;id=<font color=Maroon>q</font>;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==knightw[<font color=Maroon>0</font>].curx&nbsp;&amp;&amp;&nbsp;y1==knightw[<font color=Maroon>0</font>].cury) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;knightw[<font color=Maroon>0</font>];id=<font color=Maroon>k</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==knightw[<font color=Maroon>1</font>].curx&nbsp;&amp;&amp;&nbsp;y1==knightw[<font color=Maroon>1</font>].cury) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;knightw[<font color=Maroon>1</font>];id=<font color=Maroon>k</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==knightb[<font color=Maroon>0</font>].curx&nbsp;&amp;&amp;&nbsp;y1==knightb[<font color=Maroon>0</font>].cury) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;knightb[<font color=Maroon>0</font>];id=<font color=Maroon>k</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x1==knightb[<font color=Maroon>1</font>].curx&nbsp;&amp;&amp;&nbsp;y1==knightb[<font color=Maroon>1</font>].cury) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;selected=&amp;knightb[<font color=Maroon>1</font>];id=<font color=Maroon>k</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>((turn%<font color=Maroon>2</font>==<font color=Maroon>0</font>&nbsp;&amp;&amp;&nbsp;selected-&gt;clr==<font color=Maroon>b</font>)||(turn%<font color=Maroon>2</font>!=<font color=Maroon>0</font>&nbsp;&amp;&amp;&nbsp; <BR />selected-&gt;clr==<font color=Maroon>w</font>)) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;turn=turn+<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;j=j+<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(j) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(kbhit()) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch=getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(ch== <BR />)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//escape&nbsp;at&nbsp;pressing&nbsp;enter.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getmousepos(&amp;button,&amp;x2,&amp;y2);&nbsp;&nbsp;<font color=Green>//gets&nbsp;click&nbsp;position&nbsp;of&nbsp;mouse</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>((button==&nbsp;<font color=Maroon>001</font>)) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sound(<font color=Maroon>500</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j=j-<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>100</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nosound(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>500</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;x3=relposx(x2)/<font color=Maroon>50</font>;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//gives&nbsp;standard&nbsp;x&nbsp;coordinate</font> <BR />&nbsp;&nbsp;&nbsp;y3=relposy(y2)/<font color=Maroon>50</font>;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//gives&nbsp;standard&nbsp;y&nbsp;coordinate</font> <BR />&nbsp;&nbsp;&nbsp;nwblkclr=getblkcolor(x1,y1,x3,y3,selected-&gt;blkcolor);<font color=Green>//get&nbsp;</font> <BR />destination <BR />blocks&nbsp;color; <BR />&nbsp;&nbsp;&nbsp;gotoxy(<font color=Maroon>6</font>,<font color=Maroon>28</font>); <BR />&nbsp;&nbsp;&nbsp;bottom();&nbsp;&nbsp;<font color=Green>//clears&nbsp;bottom&nbsp;display</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id==<font color=Maroon>p</font>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//wheteher&nbsp;pawn?</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move=&nbsp;chkpawnmov(selected,x3,y3); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(move==<font color=Maroon>v</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw(x3,y3,selected,nwblkclr,<font color=Maroon>p</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;checkpwn(x3,y3); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(id==<font color=Maroon>r</font>)&nbsp;&nbsp;<font color=Green>//whether&nbsp;rook?</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move=chkrookmov(selected,x3,y3); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(move==<font color=Maroon>v</font>&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw(x3,y3,selected,nwblkclr,<font color=Maroon>r</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(id==<font color=Maroon>k</font>)&nbsp;<font color=Green>//whether&nbsp;knight?</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move=&nbsp;chkknightmov(selected,x3,y3); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(move==<font color=Maroon>v</font>&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw(x3,y3,selected,nwblkclr,<font color=Maroon>k</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(id==<font color=Maroon>b</font>)&nbsp;&nbsp;<font color=Green>//whether&nbsp;bishop?</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move=chkbishopmov(selected,x3,y3); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(move==<font color=Maroon>v</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw(x3,y3,selected,nwblkclr,<font color=Maroon>b</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(id==<font color=Maroon>q</font>)&nbsp;&nbsp;<font color=Green>//whether&nbsp;queen?</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move=chkqueenmov(selected,x3,y3); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(move==<font color=Maroon>v</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw(x3,y3,selected,nwblkclr,<font color=Maroon>q</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(id==<font color=Maroon>g</font>)&nbsp;&nbsp;<font color=Green>//whether&nbsp;king?</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;move=chkkingmov(selected,x3,y3); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(move==<font color=Maroon>v</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;draw(x3,y3,selected,nwblkclr,<font color=Maroon>g</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(move==<font color=Maroon>i</font>)&nbsp;turn=turn-<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;getch(); <BR />} <BR /> <BR />getmousepos(<font color=Blue>int</font>&nbsp;*button,<font color=Blue>int</font>*&nbsp;x,<font color=Blue>int</font>*&nbsp;y)&nbsp;<font color=Green>//gets&nbsp;mouse&nbsp;position.</font> <BR />{ <BR />&nbsp;i.x.ax=<font color=Maroon>3</font>; <BR />&nbsp;int86(<font color=Maroon>0x33</font>,&amp;i,&amp;o); <BR />&nbsp;*button=o.x.bx; <BR />&nbsp;*x=o.x.cx; <BR />&nbsp;*y=o.x.dx; <BR />&nbsp;<font color=Blue>return</font>; <BR />} <BR /> <BR />showmouseptr()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//shows&nbsp;pointer&nbsp;in&nbsp;graphics&nbsp;mode.</font> <BR />{ <BR />&nbsp;i.x.ax=<font color=Maroon>1</font>; <BR />&nbsp;int86(<font color=Maroon>0x33</font>,&amp;i,&amp;o); <BR />&nbsp;<font color=Blue>return</font>; <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;hidemouseptr()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//hides&nbsp;pointer</font> <BR />{ <BR />i.x.ax=<font color=Maroon>0</font>; <BR />int86(<font color=Maroon>0x33</font>,&amp;i,&amp;o); <BR /><font color=Blue>return</font>; <BR />} <BR />restrictmouseptr(<font color=Blue>int</font>&nbsp;x1,<font color=Blue>int</font>&nbsp;y1,<font color=Blue>int</font>&nbsp;x2,<font color=Blue>int</font>&nbsp;y2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//restrict&nbsp;pointer</font> <BR />&nbsp;{ <BR />&nbsp;i.x.ax=<font color=Maroon>7</font>; <BR />&nbsp;i.x.cx=x1; <BR />&nbsp;i.x.dx=x2; <BR />&nbsp;int86(<font color=Maroon>0x33</font>,&amp;i,&amp;o); <BR />&nbsp;i.x.ax=<font color=Maroon>8</font>; <BR />&nbsp;i.x.cx=y1; <BR />&nbsp;i.x.dx=y2; <BR />&nbsp;int86(<font color=Maroon>0x33</font>,&amp;i,&amp;o); <BR />&nbsp;<font color=Blue>return</font>; <BR />} <BR />setposw(<font color=Blue>struct</font>&nbsp;block*&nbsp;pawnw)&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//sete&nbsp;each&nbsp;white&nbsp;pawn.</font> <BR />{&nbsp;<font color=Blue>int</font>&nbsp;count,togl; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(count=<font color=Maroon>0</font>,togl=<font color=Maroon>0</font>;count&lt;=<font color=Maroon>7</font>;count++,togl++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pawnw-&gt;curx=count; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pawnw-&gt;cury=<font color=Maroon>6</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pawnw-&gt;clr=<font color=Maroon>b</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(togl%<font color=Maroon>2</font>==<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pawnw-&gt;blkcolor=<font color=Maroon>g</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(togl%<font color=Maroon>2</font>==<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pawnw-&gt;blkcolor=<font color=Maroon>m</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pawnw++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;<font color=Blue>return</font>; <BR />} <BR />setposb(<font color=Blue>struct</font>&nbsp;block*&nbsp;pawnb)&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//sets&nbsp;each&nbsp;black&nbsp;pawn.</font> <BR />{ <BR />&nbsp;<font color=Blue>int</font>&nbsp;count,togl; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(count=<font color=Maroon>0</font>,togl=<font color=Maroon>0</font>;count&lt;=<font color=Maroon>7</font>;count++,togl++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;pawnb-&gt;curx=count; <BR />&nbsp;&nbsp;&nbsp;&nbsp;pawnb-&gt;cury=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;pawnb-&gt;clr=<font color=Maroon>w</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(togl%<font color=Maroon>2</font>==<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;pawnb-&gt;blkcolor=<font color=Maroon>m</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(togl%<font color=Maroon>2</font>==<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;pawnb-&gt;blkcolor=<font color=Maroon>g</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;pawnb++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>return</font>; <BR />} <BR /><font color=Blue>char</font>&nbsp;chkpawnmov(<font color=Blue>struct</font>&nbsp;block*&nbsp;selected,<font color=Blue>int</font>&nbsp;x3,<font color=Blue>int</font>&nbsp;y3) <BR />{&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;mov,id,c;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//checks&nbsp;each&nbsp;pawn&nbsp;(black&nbsp;and&nbsp;white)&nbsp;move.</font> <BR />&nbsp;&nbsp;id=pos[x3][y3];&nbsp;&nbsp;&nbsp;<font color=Green>//anybody?</font> <BR />&nbsp;&nbsp;c=color[x3][y3];&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//color?</font> <BR />&nbsp;&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>w</font>)&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//white&nbsp;pawn?</font> <BR />&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(x3==selected-&gt;curx&nbsp;&amp;&amp;&nbsp;y3==selected-&gt;cury+<font color=Maroon>1</font>&nbsp;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//move&nbsp;1</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id==<font color=Maroon>n</font>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//id&nbsp;is&nbsp;none&nbsp;when&nbsp;no&nbsp;body&nbsp;is&nbsp;there</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(&nbsp;(x3==selected-&gt;curx+<font color=Maroon>1</font>&nbsp;||&nbsp;x3==selected-&gt;curx-<font color=Maroon>1</font>)&nbsp;&amp;&amp; <BR />y3==selected-&gt;cury+<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id!=<font color=Maroon>n</font>&nbsp;&amp;&amp;&nbsp;c==<font color=Maroon>b</font>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//black&nbsp;present?</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>b</font>) <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(x3==selected-&gt;curx&nbsp;&nbsp;&amp;&amp;&nbsp;&nbsp;y3==selected-&gt;cury-<font color=Maroon>1</font>)&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//black&nbsp;and&nbsp;white&nbsp;</font> <BR />both <BR /><font color=Blue>not</font>&nbsp;there? <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id==<font color=Maroon>n</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>((x3==selected-&gt;curx-<font color=Maroon>1</font>&nbsp;||&nbsp;x3==selected-&gt;curx+<font color=Maroon>1</font>)&nbsp;&amp;&amp; <BR />y3==selected-&gt;cury-<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id!=<font color=Maroon>n</font>&nbsp;&amp;&amp;&nbsp;c==<font color=Maroon>w</font>&nbsp;)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//white&nbsp;there</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//valid&nbsp;move</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;} <BR />&nbsp;<font color=Blue>else</font> <BR />&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//no&nbsp;action&nbsp;at&nbsp;invalid&nbsp;move.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>i</font>; <BR />&nbsp;} <BR />&nbsp;<font color=Blue>return</font>(mov); <BR />} <BR />setposrw(<font color=Blue>struct</font>&nbsp;block*&nbsp;rookw,<font color=Blue>struct</font>&nbsp;block*&nbsp;bishopw,<font color=Blue>struct</font>&nbsp;block* <BR />knightw,<font color=Blue>struct</font>&nbsp;block*&nbsp;kingw,<font color=Blue>struct</font>&nbsp;block*&nbsp;queenw) <BR />{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//it&nbsp;sets&nbsp;the&nbsp;white&nbsp;rook,knight,bishop&nbsp;etc.</font> <BR />&nbsp;<font color=Blue>int</font>&nbsp;i; <BR />&nbsp;rookw-&gt;curx=rookw-&gt;cury=<font color=Maroon>7</font>; <BR />&nbsp;rookw-&gt;clr=<font color=Maroon>w</font>; <BR />&nbsp;rookw-&gt;blkcolor=<font color=Maroon>m</font>; <BR />&nbsp;rookw++; <BR />&nbsp;rookw-&gt;curx=<font color=Maroon>7</font>;rookw-&gt;cury=<font color=Maroon>7</font>; <BR />&nbsp;rookw-&gt;clr=<font color=Maroon>w</font>; <BR />&nbsp;rookw-&gt;blkcolor=<font color=Maroon>g</font>; <BR />&nbsp;bishopw-&gt;curx=<font color=Maroon>2</font>; <BR />&nbsp;bishopw-&gt;cury=<font color=Maroon>7</font>; <BR />&nbsp;bishopw-&gt;clr=<font color=Maroon>w</font>; <BR />&nbsp;bishopw-&gt;blkcolor=<font color=Maroon>m</font>; <BR />&nbsp;bishopw++; <BR />&nbsp;bishopw-&gt;curx=<font color=Maroon>5</font>; <BR />&nbsp;bishopw-&gt;cury=<font color=Maroon>7</font>; <BR />&nbsp;bishopw-&gt;clr=<font color=Maroon>w</font>; <BR />&nbsp;bishopw-&gt;blkcolor=<font color=Maroon>g</font>; <BR />&nbsp;knightw-&gt;curx=<font color=Maroon>1</font>; <BR />&nbsp;knightw-&gt;cury=<font color=Maroon>7</font>; <BR />&nbsp;knightw-&gt;clr=<font color=Maroon>w</font>; <BR />&nbsp;knightw-&gt;blkcolor=<font color=Maroon>g</font>; <BR />&nbsp;knightw++; <BR />&nbsp;knightw-&gt;curx=<font color=Maroon>6</font>; <BR />&nbsp;knightw-&gt;cury=<font color=Maroon>7</font>; <BR />&nbsp;knightw-&gt;clr=<font color=Maroon>w</font>; <BR />&nbsp;knightw-&gt;blkcolor=<font color=Maroon>m</font>; <BR />&nbsp;kingw-&gt;curx=<font color=Maroon>3</font>;kingw-&gt;cury=<font color=Maroon>7</font>; <BR />&nbsp;kingw-&gt;clr=<font color=Maroon>w</font>;kingw-&gt;blkcolor=<font color=Maroon>m</font>; <BR />&nbsp;queenw-&gt;curx=<font color=Maroon>4</font>;queenw-&gt;cury=<font color=Maroon>7</font>; <BR />&nbsp;queenw-&gt;clr=<font color=Maroon>w</font>;queenw-&gt;blkcolor=<font color=Maroon>g</font>; <BR />&nbsp;<font color=Blue>return</font>; <BR />} <BR />setposrb(<font color=Blue>struct</font>&nbsp;block*&nbsp;rookb,<font color=Blue>struct</font>&nbsp;block*&nbsp;bishopb,<font color=Blue>struct</font>&nbsp;block* <BR />knightb,<font color=Blue>struct</font>&nbsp;block*&nbsp;kingb,<font color=Blue>struct</font>&nbsp;block*&nbsp;queenb) <BR />{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//it&nbsp;sets&nbsp;the&nbsp;current&nbsp;coords&nbsp;of&nbsp;black&nbsp;rook,bishop,knight&nbsp;etc.</font> <BR />&nbsp;<font color=Blue>int</font>&nbsp;i; <BR />&nbsp;rookb-&gt;curx=<font color=Maroon>0</font>;rookb-&gt;cury=<font color=Maroon>0</font>; <BR />&nbsp;rookb-&gt;clr=<font color=Maroon>b</font>; <BR />&nbsp;rookb-&gt;blkcolor=<font color=Maroon>g</font>; <BR />&nbsp;rookb++; <BR />&nbsp;rookb-&gt;curx=<font color=Maroon>7</font>;rookb-&gt;cury=<font color=Maroon>0</font>; <BR />&nbsp;rookb-&gt;clr=<font color=Maroon>b</font>; <BR />&nbsp;rookb-&gt;blkcolor=<font color=Maroon>m</font>; <BR />&nbsp;bishopb-&gt;curx=<font color=Maroon>2</font>; <BR />&nbsp;bishopb-&gt;cury=<font color=Maroon>0</font>; <BR />&nbsp;bishopb-&gt;clr=<font color=Maroon>b</font>; <BR />&nbsp;bishopb-&gt;blkcolor=<font color=Maroon>g</font>; <BR />&nbsp;bishopb++; <BR />&nbsp;bishopb-&gt;curx=<font color=Maroon>5</font>; <BR />&nbsp;bishopb-&gt;cury=<font color=Maroon>0</font>; <BR />&nbsp;bishopb-&gt;clr=<font color=Maroon>b</font>; <BR />&nbsp;bishopb-&gt;blkcolor=<font color=Maroon>m</font>; <BR />&nbsp;knightb-&gt;curx=<font color=Maroon>1</font>; <BR />&nbsp;knightb-&gt;cury=<font color=Maroon>0</font>; <BR />&nbsp;knightb-&gt;clr=<font color=Maroon>b</font>; <BR />&nbsp;knightb-&gt;blkcolor=<font color=Maroon>m</font>; <BR />&nbsp;knightb++; <BR />&nbsp;knightb-&gt;curx=<font color=Maroon>6</font>; <BR />&nbsp;knightb-&gt;cury=<font color=Maroon>0</font>; <BR />&nbsp;knightb-&gt;clr=<font color=Maroon>b</font>; <BR />&nbsp;knightb-&gt;blkcolor=<font color=Maroon>g</font>; <BR />&nbsp;kingb-&gt;curx=<font color=Maroon>3</font>;kingb-&gt;cury=<font color=Maroon>0</font>; <BR />&nbsp;kingb-&gt;clr=<font color=Maroon>b</font>;kingb-&gt;blkcolor=<font color=Maroon>m</font>; <BR />&nbsp;queenb-&gt;curx=<font color=Maroon>4</font>;queenb-&gt;cury=<font color=Maroon>0</font>; <BR />&nbsp;queenb-&gt;clr=<font color=Maroon>b</font>;queenb-&gt;blkcolor=<font color=Maroon>g</font>; <BR />&nbsp;<font color=Blue>return</font>; <BR />} <BR />draw(<font color=Blue>int</font>&nbsp;x3,<font color=Blue>int</font>&nbsp;y3,<font color=Blue>struct</font>&nbsp;block*&nbsp;selected,<font color=Blue>char</font>&nbsp;nwblkclr,<font color=Blue>char</font>&nbsp;id1) <BR />{ <BR />&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;nx3,ny3,ncx,ncy; <BR />&nbsp;&nbsp;nx3=x3*<font color=Maroon>50</font>;&nbsp;ny3=y3*<font color=Maroon>50</font>;&nbsp;ncx=(selected-&gt;curx)*<font color=Maroon>50</font>;&nbsp; <BR />ncy=(selected-&gt;cury)*<font color=Maroon>50</font>; <BR />&nbsp;<font color=Blue>if</font>(nwblkclr==<font color=Maroon>g</font>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//CLEAR&nbsp;NEW&nbsp;POSITION</font> <BR />&nbsp;setfillpattern(pattern,GREEN); <BR />&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(nwblkclr==<font color=Maroon>m</font>) <BR />&nbsp;setfillpattern(pattern,MAGENTA); <BR />&nbsp;hidemouseptr();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//necessary&nbsp;to&nbsp;avoid&nbsp;the&nbsp;effect&nbsp;of&nbsp;mouse&nbsp;pointer.</font> <BR />&nbsp;bar(nx3,ny3,nx3+<font color=Maroon>50</font>,ny3+<font color=Maroon>50</font>); <BR />&nbsp;setcolor(WHITE); <BR />&nbsp;rectangle(nx3,ny3,nx3+<font color=Maroon>50</font>,ny3+<font color=Maroon>50</font>); <BR />&nbsp;<font color=Blue>if</font>(selected-&gt;blkcolor==<font color=Maroon>g</font>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//CLEAR&nbsp;PREVIOUS&nbsp;POSITION</font> <BR />&nbsp;setfillpattern(pattern,GREEN); <BR />&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;blkcolor==<font color=Maroon>m</font>) <BR />&nbsp;setfillpattern(pattern,MAGENTA);&nbsp;&nbsp;&nbsp;<font color=Green>//clear&nbsp;the&nbsp;previous&nbsp;pos.</font> <BR />&nbsp;bar(ncx,ncy,ncx+<font color=Maroon>50</font>,ncy+<font color=Maroon>50</font>); <BR />&nbsp;setcolor(WHITE); <BR />&nbsp;rectangle(ncx,ncy,ncx+<font color=Maroon>50</font>,ncy+<font color=Maroon>50</font>); <BR />&nbsp;<font color=Blue>if</font>(id1==<font color=Maroon>p</font>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//if&nbsp;pawn&nbsp;was&nbsp;selected&nbsp;then&nbsp;draw&nbsp;the&nbsp;pawn&nbsp;at&nbsp;new&nbsp;</font> <BR />position. <BR />&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>w</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pawndraw(nx3,ny3,<font color=Maroon>0</font>);&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;0&nbsp;for&nbsp;white.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>b</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pawndraw(nx3,ny3,<font color=Maroon>1</font>); <BR /> <BR />&nbsp;} <BR /><font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(id1==<font color=Maroon>r</font>)&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//if&nbsp;rook&nbsp;was&nbsp;selected</font> <BR />&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>w</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rookdraw(nx3,ny3,<font color=Maroon>0</font>);&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;0&nbsp;for&nbsp;white.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>b</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;rookdraw(nx3,ny3,<font color=Maroon>1</font>); <BR />&nbsp;} <BR />&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(id1==<font color=Maroon>k</font>)&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//if&nbsp;knight&nbsp;was&nbsp;selected</font> <BR />&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>w</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;drawknite(nx3,ny3,<font color=Maroon>0</font>);&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;0&nbsp;for&nbsp;white.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>b</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;drawknite(nx3,ny3,<font color=Maroon>1</font>); <BR />&nbsp;} <BR />&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(id1==<font color=Maroon>b</font>)&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//if&nbsp;bishop&nbsp;was&nbsp;selected</font> <BR />&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>w</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;drawbishop(nx3,ny3,<font color=Maroon>0</font>);&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;0&nbsp;for&nbsp;white.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>b</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;drawbishop(nx3,ny3,<font color=Maroon>1</font>); <BR />&nbsp;} <BR />&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(id1==<font color=Maroon>g</font>) <BR />&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>w</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;drawking(nx3,ny3,<font color=Maroon>0</font>);&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;0&nbsp;for&nbsp;white.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>b</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;drawking(nx3,ny3,<font color=Maroon>1</font>); <BR />&nbsp;} <BR />&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(id1==<font color=Maroon>q</font>) <BR />&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>w</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;drawqueen(nx3,ny3,<font color=Maroon>0</font>);&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;0&nbsp;for&nbsp;white.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>b</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;drawqueen(nx3,ny3,<font color=Maroon>1</font>); <BR />&nbsp;} <BR />showmouseptr(); <BR />pos[selected-&gt;curx][selected-&gt;cury]=<font color=Maroon>n</font>; <BR />color[selected-&gt;curx][selected-&gt;cury]=<font color=Maroon>n</font>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//welcome&nbsp;back&nbsp;&nbsp;mr.&nbsp;</font> <BR />pointer. <BR />selected-&gt;curx=x3; <BR />selected-&gt;cury=y3; <BR />selected-&gt;blkcolor=nwblkclr; <BR />pos[x3][y3]=id1; <BR />color[x3][y3]=selected-&gt;clr; <BR /><font color=Blue>return</font>; <BR />} <BR /><font color=Blue>char</font>&nbsp;chkrookmov(<font color=Blue>struct</font>&nbsp;block*&nbsp;selected,<font color=Blue>int</font>&nbsp;x3,<font color=Blue>int</font>&nbsp;y3) <BR />{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//checks&nbsp;rook&nbsp;move&nbsp;for&nbsp;black&nbsp;and&nbsp;white&nbsp;as&nbsp;both&nbsp;have&nbsp;</font> <BR />same <BR />moves. <BR />&nbsp;<font color=Blue>int</font>&nbsp;i; <BR />&nbsp;<font color=Blue>char</font>&nbsp;id,c,mov=<font color=Maroon>v</font>; <BR />&nbsp;<font color=Blue>if</font>(&nbsp;(x3==selected-&gt;curx)&nbsp;||&nbsp;(y3==selected-&gt;cury)&nbsp;) <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(x3&gt;selected-&gt;curx&nbsp;&amp;&amp;&nbsp;y3==selected-&gt;cury) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=selected-&gt;curx+<font color=Maroon>1</font>;i&lt;x3;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=pos[i][y3]; <BR /><font color=Green>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c=color[i][y3];</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id!=<font color=Maroon>n</font>)&nbsp;<font color=Green>//if&nbsp;black&nbsp;or&nbsp;white&nbsp;present&nbsp;move&nbsp;is&nbsp;invalid</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>i</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x3&lt;selected-&gt;curx&nbsp;&amp;&amp;&nbsp;y3==selected-&gt;cury) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=selected-&gt;curx-<font color=Maroon>1</font>;i&gt;x3;i--) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=pos[i][y3]; <BR /><font color=Green>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c=color[i][y3];</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id!=<font color=Maroon>n</font>)&nbsp;<font color=Green>//if&nbsp;black&nbsp;or&nbsp;white</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>i</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x3==selected-&gt;curx&nbsp;&amp;&amp;&nbsp;y3&gt;selected-&gt;cury) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=selected-&gt;cury+<font color=Maroon>1</font>;i&lt;y3;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=pos[x3][i]; <BR />&nbsp;&nbsp;<font color=Green>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c=color[x3][i];</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id!=<font color=Maroon>n</font>)&nbsp;<font color=Green>//if&nbsp;black&nbsp;or&nbsp;white</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>i</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x3==selected-&gt;curx&nbsp;&amp;&amp;&nbsp;y3&lt;selected-&gt;cury) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=selected-&gt;cury-<font color=Maroon>1</font>;i&gt;y3;i--) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=pos[x3][i]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c=color[x3][i];</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id!=<font color=Maroon>n</font>)&nbsp;<font color=Green>//if&nbsp;black&nbsp;or&nbsp;white</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>i</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(mov==<font color=Maroon>v</font>) <BR />&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;id=pos[x3][y3]; <BR />&nbsp;&nbsp;&nbsp;c=color[x3][y3]; <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id!=<font color=Maroon>n</font>&nbsp;&amp;&amp;&nbsp;c==<font color=Maroon>b</font>&nbsp;&amp;&amp;&nbsp;selected-&gt;clr==<font color=Maroon>w</font>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//means&nbsp;black&nbsp;</font> <BR />at <BR />x3,y3 <BR />&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(id!=<font color=Maroon>n</font>&nbsp;&amp;&amp;&nbsp;c==<font color=Maroon>w</font>&nbsp;&amp;&amp;&nbsp;selected-&gt;clr==<font color=Maroon>b</font>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//means&nbsp;white</font> <BR />there <BR />&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(id==<font color=Maroon>n</font>)<font color=Green>//none&nbsp;of&nbsp;the&nbsp;white&nbsp;or&nbsp;black&nbsp;even&nbsp;at&nbsp;x3&nbsp;&amp;&nbsp;y3?</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>i</font>; <BR />&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;mov=<font color=Maroon>i</font>; <BR /> <BR /><font color=Blue>return</font>(mov); <BR />} <BR /><font color=Blue>char</font>&nbsp;chkknightmov(<font color=Blue>struct</font>&nbsp;block*&nbsp;selected,<font color=Blue>int</font>&nbsp;x3,<font color=Blue>int</font>&nbsp;y3) <BR />{ <BR />&nbsp;<font color=Green>//knights&nbsp;moves&nbsp;are&nbsp;not&nbsp;affected&nbsp;if&nbsp;some&nbsp;entity&nbsp;lies&nbsp;in&nbsp;the&nbsp;way.</font> <BR />&nbsp;<font color=Green>//it&nbsp;just&nbsp;jumps&nbsp;over&nbsp;them.Atmost&nbsp;only&nbsp;eight&nbsp;moves&nbsp;are&nbsp;possible.</font> <BR />&nbsp;<font color=Blue>int</font>&nbsp;i,posk[<font color=Maroon>8</font>][<font color=Maroon>2</font>]; <BR />&nbsp;<font color=Blue>char</font>&nbsp;id,c,mov=<font color=Maroon>i</font>; <BR />&nbsp;posk[<font color=Maroon>0</font>][<font color=Maroon>0</font>]=selected-&gt;curx+<font color=Maroon>1</font>; <BR />&nbsp;posk[<font color=Maroon>0</font>][<font color=Maroon>1</font>]=selected-&gt;cury-<font color=Maroon>2</font>; <BR />&nbsp;posk[<font color=Maroon>1</font>][<font color=Maroon>0</font>]=selected-&gt;curx-<font color=Maroon>1</font>; <BR />&nbsp;posk[<font color=Maroon>1</font>][<font color=Maroon>1</font>]=selected-&gt;cury-<font color=Maroon>2</font>; <BR />&nbsp;posk[<font color=Maroon>2</font>][<font color=Maroon>0</font>]=selected-&gt;curx+<font color=Maroon>1</font>; <BR />&nbsp;posk[<font color=Maroon>2</font>][<font color=Maroon>1</font>]=selected-&gt;cury+<font color=Maroon>2</font>; <BR />&nbsp;posk[<font color=Maroon>3</font>][<font color=Maroon>0</font>]=selected-&gt;curx-<font color=Maroon>1</font>; <BR />&nbsp;posk[<font color=Maroon>3</font>][<font color=Maroon>1</font>]=selected-&gt;cury+<font color=Maroon>2</font>; <BR />&nbsp;posk[<font color=Maroon>4</font>][<font color=Maroon>0</font>]=selected-&gt;curx+<font color=Maroon>2</font>; <BR />&nbsp;posk[<font color=Maroon>4</font>][<font color=Maroon>1</font>]=selected-&gt;cury-<font color=Maroon>1</font>; <BR />&nbsp;posk[<font color=Maroon>5</font>][<font color=Maroon>0</font>]=selected-&gt;curx+<font color=Maroon>2</font>; <BR />&nbsp;posk[<font color=Maroon>5</font>][<font color=Maroon>1</font>]=selected-&gt;cury+<font color=Maroon>1</font>; <BR />&nbsp;posk[<font color=Maroon>6</font>][<font color=Maroon>0</font>]=selected-&gt;curx-<font color=Maroon>2</font>; <BR />&nbsp;posk[<font color=Maroon>6</font>][<font color=Maroon>1</font>]=selected-&gt;cury+<font color=Maroon>1</font>; <BR />&nbsp;posk[<font color=Maroon>7</font>][<font color=Maroon>0</font>]=selected-&gt;curx-<font color=Maroon>2</font>; <BR />&nbsp;posk[<font color=Maroon>7</font>][<font color=Maroon>1</font>]=selected-&gt;cury-<font color=Maroon>1</font>; <BR />&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=<font color=Maroon>7</font>;i++) <BR />&nbsp;{ <BR />&nbsp;&nbsp;<font color=Blue>if</font>(x3==posk[i][<font color=Maroon>0</font>]&nbsp;&amp;&amp;&nbsp;y3==posk[i][<font color=Maroon>1</font>]) <BR />&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;id=pos[x3][y3]; <BR />&nbsp;&nbsp;&nbsp;c=color[x3][y3]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id!=<font color=Maroon>n</font>&amp;&amp;&nbsp;c==<font color=Maroon>b</font>&nbsp;&amp;&amp;&nbsp;selected-&gt;clr==<font color=Maroon>w</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//means&nbsp;black&nbsp;is&nbsp;there.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(id!=<font color=Maroon>n</font>&amp;&amp;c==<font color=Maroon>w</font>&nbsp;&amp;&amp;&nbsp;selected-&gt;clr==<font color=Maroon>b</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//means&nbsp;white&nbsp;is&nbsp;there.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(id==<font color=Maroon>n</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//means&nbsp;it&nbsp;is&nbsp;blank.</font> <BR />&nbsp;&nbsp;} <BR />&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>return</font>(mov); <BR />} <BR /><font color=Blue>char</font>&nbsp;chkbishopmov(<font color=Blue>struct</font>&nbsp;block*&nbsp;selected,<font color=Blue>int</font>&nbsp;x3,<font color=Blue>int</font>&nbsp;y3) <BR />{ <BR />&nbsp;<font color=Blue>int</font>&nbsp;m,n,m1,n1,i,j; <BR />&nbsp;<font color=Blue>char</font>&nbsp;mov,id,c; <BR />&nbsp;m=x3-selected-&gt;curx; <BR />&nbsp;n=y3-selected-&gt;cury; <BR />&nbsp;<font color=Blue>if</font>(abs(m)==abs(n)) <BR />&nbsp;{&nbsp;&nbsp;<font color=Blue>if</font>(m&gt;<font color=Maroon>0</font>&nbsp;&amp;&amp;&nbsp;n&lt;<font color=Maroon>0</font>)<font color=Green>//move&nbsp;1</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=selected-&gt;curx+<font color=Maroon>1</font>,j=selected-&gt;cury-<font color=Maroon>1</font>;(i&lt;x3&nbsp;&amp;&amp;&nbsp;j&gt;y3);i=i++,j--) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=pos[i][j]; <BR /><font color=Green>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c=color[i][j];</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id!=<font color=Maroon>n</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>i</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(m&gt;<font color=Maroon>0</font>&nbsp;&amp;&amp;&nbsp;n&gt;<font color=Maroon>0</font>)<font color=Green>//move&nbsp;2</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=selected-&gt;curx+<font color=Maroon>1</font>,j=selected-&gt;cury+<font color=Maroon>1</font>;(i&lt;x3&nbsp;&amp;&amp;&nbsp;j&lt;y3);i++,j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=pos[i][j]; <BR /><font color=Green>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c=color[i][j];</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id!=<font color=Maroon>n</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>i</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(m&lt;<font color=Maroon>0</font>&nbsp;&amp;&amp;&nbsp;n&lt;<font color=Maroon>0</font>)<font color=Green>//move&nbsp;3</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=selected-&gt;curx-<font color=Maroon>1</font>,j=selected-&gt;cury-<font color=Maroon>1</font>;(i!=x3&nbsp;&amp;&amp;&nbsp;j!=y3);i--,j--) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=pos[i][j]; <BR /><font color=Green>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c=color[i][j];</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id!=<font color=Maroon>n</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>i</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(m&lt;<font color=Maroon>0</font>&nbsp;&amp;&amp;&nbsp;n&gt;<font color=Maroon>0</font>)<font color=Green>//move&nbsp;4</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=selected-&gt;curx-<font color=Maroon>1</font>,j=selected-&gt;cury+<font color=Maroon>1</font>;(i&gt;x3&nbsp;&amp;&amp;&nbsp;j&lt;y3);i--,j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id=pos[i][j]; <BR /><font color=Green>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c=color[i][j];</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id!=<font color=Maroon>n</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>i</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(mov!=<font color=Maroon>i</font>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//..that&nbsp;no&nbsp;body&nbsp;is&nbsp;in&nbsp;the&nbsp;way,now&nbsp;at&nbsp;x3&nbsp;y3?</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;id=pos[x3][y3]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;c=color[x3][y3]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id!=<font color=Maroon>n</font>&amp;&amp;&nbsp;c==<font color=Maroon>b</font>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//means&nbsp;black&nbsp;at&nbsp;x3,y3</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>w</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>i</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(id!=<font color=Maroon>n</font>&amp;&amp;&nbsp;c==<font color=Maroon>w</font>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//means&nbsp;white&nbsp;there</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>b</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;mov=<font color=Maroon>i</font>;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(id==<font color=Maroon>n</font>)<font color=Green>//none&nbsp;of&nbsp;the&nbsp;white&nbsp;or&nbsp;black&nbsp;even&nbsp;at&nbsp;x3&nbsp;&amp;&nbsp;y3?</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//means&nbsp;not&nbsp;at&nbsp;the&nbsp;x&nbsp;cross.</font> <BR />&nbsp;<font color=Blue>else</font> <BR />&nbsp;{ <BR />&nbsp;&nbsp;mov=<font color=Maroon>i</font>; <BR />&nbsp;} <BR />&nbsp;<font color=Blue>return</font>(mov); <BR />} <BR /><font color=Blue>char</font>&nbsp;chkqueenmov(<font color=Blue>struct</font>&nbsp;block*&nbsp;selected,<font color=Blue>int</font>&nbsp;x3,<font color=Blue>int</font>&nbsp;y3) <BR />{ <BR />&nbsp;<font color=Blue>char</font>&nbsp;mov1,mov2,mov3=<font color=Maroon>i</font>,id,c; <BR />&nbsp;mov1=chkrookmov(selected,x3,y3); <BR />&nbsp;mov2=chkbishopmov(selected,x3,y3); <BR />&nbsp;<font color=Blue>if</font>(mov1==<font color=Maroon>v</font>&nbsp;||&nbsp;mov2==<font color=Maroon>v</font>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//move&nbsp;is&nbsp;valid&nbsp;and&nbsp;color&nbsp;is</font> <BR />checked&nbsp;already. <BR />&nbsp;{ <BR />&nbsp;mov3=<font color=Maroon>v</font>; <BR />&nbsp;} <BR />&nbsp;<font color=Blue>return</font>(mov3); <BR />} <BR /><font color=Blue>char</font>&nbsp;chkkingmov(<font color=Blue>struct</font>&nbsp;block*&nbsp;selected,<font color=Blue>int</font>&nbsp;x3,<font color=Blue>int</font>&nbsp;y3) <BR />{ <BR />&nbsp;<font color=Blue>char</font>&nbsp;id,c,mov=<font color=Maroon>i</font>; <BR />&nbsp;id=pos[x3][y3]; <BR />&nbsp;c=pos[x3][y3]; <BR />&nbsp;<font color=Blue>if</font>(x3==selected-&gt;curx+<font color=Maroon>1</font>&nbsp;&amp;&amp;&nbsp;y3==selected-&gt;cury-<font color=Maroon>1</font>)&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//move&nbsp;1</font> <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id==<font color=Maroon>n</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>w</font>&nbsp;&amp;&amp;&nbsp;id!=<font color=Maroon>n</font>&nbsp;&amp;&amp;&nbsp;c==<font color=Maroon>b</font>)<font color=Green>//means&nbsp;black&nbsp;there.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>b</font>&nbsp;&amp;&amp;&nbsp;id!=<font color=Maroon>n</font>&nbsp;&amp;&amp;&nbsp;c==<font color=Maroon>w</font>)<font color=Green>//means&nbsp;white&nbsp;there.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;} <BR />&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x3==selected-&gt;curx-<font color=Maroon>1</font>&nbsp;&amp;&amp;&nbsp;y3==selected-&gt;cury-<font color=Maroon>1</font>)&nbsp;&nbsp;<font color=Green>//move&nbsp;2</font> <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id==<font color=Maroon>n</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>w</font>&nbsp;&amp;&amp;&nbsp;id!=<font color=Maroon>n</font>&nbsp;&amp;&amp;&nbsp;c==<font color=Maroon>b</font>)<font color=Green>//means&nbsp;black&nbsp;there.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>b</font>&nbsp;&amp;&amp;&nbsp;id!=<font color=Maroon>n</font>&nbsp;&amp;&amp;&nbsp;c==<font color=Maroon>w</font>)<font color=Green>//means&nbsp;white&nbsp;there.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;} <BR />&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x3==selected-&gt;curx-<font color=Maroon>1</font>&nbsp;&amp;&amp;&nbsp;y3==selected-&gt;cury+<font color=Maroon>1</font>)&nbsp;&nbsp;<font color=Green>//move&nbsp;3</font> <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id==<font color=Maroon>n</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>w</font>&nbsp;&amp;&amp;&nbsp;id!=<font color=Maroon>n</font>&nbsp;&amp;&amp;&nbsp;c==<font color=Maroon>b</font>)<font color=Green>//means&nbsp;black&nbsp;there.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>b</font>&nbsp;&amp;&amp;&nbsp;id!=<font color=Maroon>n</font>&nbsp;&amp;&amp;&nbsp;c==<font color=Maroon>w</font>)&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//means&nbsp;white&nbsp;there.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;} <BR />&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x3==selected-&gt;curx+<font color=Maroon>1</font>&nbsp;&amp;&amp;&nbsp;y3==selected-&gt;cury+<font color=Maroon>1</font>)&nbsp;&nbsp;<font color=Green>//move&nbsp;4</font> <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id==<font color=Maroon>n</font>&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>w</font>&nbsp;&amp;&amp;&nbsp;id!=<font color=Maroon>n</font>&nbsp;&amp;&amp;&nbsp;c==<font color=Maroon>b</font>)<font color=Green>//means&nbsp;black&nbsp;there.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>b</font>&nbsp;&amp;&amp;&nbsp;id!=<font color=Maroon>n</font>&nbsp;&amp;&amp;&nbsp;c==<font color=Maroon>w</font>)<font color=Green>//means&nbsp;white&nbsp;there.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;} <BR />&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x3==selected-&gt;curx+<font color=Maroon>1</font>&nbsp;&amp;&amp;&nbsp;y3==selected-&gt;cury)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//move&nbsp;5</font> <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id==<font color=Maroon>n</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>w</font>&nbsp;&amp;&amp;&nbsp;id!=<font color=Maroon>n</font>&nbsp;&amp;&amp;&nbsp;c==<font color=Maroon>b</font>)<font color=Green>//means&nbsp;black&nbsp;there.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>b</font>&nbsp;&amp;&amp;&nbsp;id!=<font color=Maroon>n</font>&nbsp;&amp;&amp;&nbsp;c==<font color=Maroon>w</font>)&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//means&nbsp;white&nbsp;there.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;} <BR />&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x3==selected-&gt;curx&nbsp;&amp;&amp;&nbsp;y3==selected-&gt;cury-<font color=Maroon>1</font>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//move&nbsp;6</font> <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id==<font color=Maroon>n</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>w</font>&nbsp;&amp;&amp;&nbsp;id!=<font color=Maroon>n</font>&nbsp;&amp;&amp;&nbsp;c==<font color=Maroon>b</font>)<font color=Green>//means&nbsp;black&nbsp;there.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>b</font>&nbsp;&amp;&amp;&nbsp;id!=<font color=Maroon>n</font>&nbsp;&amp;&amp;&nbsp;c==<font color=Maroon>w</font>)<font color=Green>//means&nbsp;white&nbsp;there.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;} <BR />&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x3==selected-&gt;curx-<font color=Maroon>1</font>&nbsp;&amp;&amp;&nbsp;y3==selected-&gt;cury)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//move&nbsp;7</font> <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id==<font color=Maroon>n</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>w</font>&nbsp;&amp;&amp;&nbsp;id!=<font color=Maroon>n</font>&nbsp;&amp;&amp;&nbsp;c==<font color=Maroon>b</font>)<font color=Green>//means&nbsp;black&nbsp;there.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>b</font>&nbsp;&amp;&amp;&nbsp;id!=<font color=Maroon>n</font>&nbsp;&amp;&amp;&nbsp;c==<font color=Maroon>w</font>)<font color=Green>//means&nbsp;white&nbsp;there.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;} <BR />&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(x3==selected-&gt;curx&nbsp;&amp;&amp;&nbsp;y3==selected-&gt;cury+<font color=Maroon>1</font>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//move&nbsp;8</font> <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(id==<font color=Maroon>n</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>w</font>&nbsp;&amp;&amp;&nbsp;id!=<font color=Maroon>n</font>&nbsp;&amp;&amp;&nbsp;c==<font color=Maroon>b</font>)<font color=Green>//means&nbsp;black&nbsp;there.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(selected-&gt;clr==<font color=Maroon>b</font>&nbsp;&amp;&amp;&nbsp;id!=<font color=Maroon>n</font>&nbsp;&amp;&amp;&nbsp;c==<font color=Maroon>w</font>)<font color=Green>//means&nbsp;white&nbsp;there.</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;mov=<font color=Maroon>v</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;send(id,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;} <BR />&nbsp;<font color=Blue>else</font>&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//means&nbsp;move&nbsp;is&nbsp;not&nbsp;valid</font> <BR />&nbsp;{&nbsp;mov=<font color=Maroon>i</font>;} <BR />&nbsp;<font color=Blue>return</font>(mov); <BR />} <BR /><font color=Blue>void</font>&nbsp;assign(<font color=Blue>char</font>*&nbsp;post,<font color=Blue>char</font>*&nbsp;col) <BR />{&nbsp;<font color=Blue>int</font>&nbsp;i; <BR />&nbsp;&nbsp;<font color=Blue>char</font> <BR />val1[<font color=Maroon>64</font>]={<font color=Maroon>"rpnnnnprkpnnnnpkbpnnnnpbgpnnnnpqqpnnnnpgbpnnnnpbkpnnnnpkrpnnnnpr"</font>}; <BR />&nbsp;&nbsp;<font color=Blue>char</font> <BR />val2[<font color=Maroon>64</font>]={<font color=Maroon>"wwnnnnbbwwnnnnbbwwnnnnbbwwnnnnbbwwnnnnbbwwnnnnbbwwnnnnbbwwnnnnbb"</font>}; <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=<font color=Maroon>63</font>;i++,post++,col++) <BR />&nbsp;&nbsp;{&nbsp;&nbsp;*post=val1[i];&nbsp;*col=val2[i];&nbsp;} <BR />} <BR /><font color=Blue>void</font>&nbsp;checkpwn(<font color=Blue>int</font>&nbsp;x3,<font color=Blue>int</font>&nbsp;y3) <BR />{ <BR />&nbsp;<font color=Blue>char</font>&nbsp;a; <BR />&nbsp;a=color[x3][y3];<font color=Green>//whether&nbsp;pawn&nbsp;is&nbsp;white&nbsp;or&nbsp;black?</font> <BR />&nbsp;bottom(); <BR />&nbsp;setcolor(WHITE); <BR />&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>w</font>&nbsp;&amp;&amp;&nbsp;(x3&gt;=<font color=Maroon>0</font>&nbsp;&amp;&amp;&nbsp;x3&lt;=<font color=Maroon>7</font>)&nbsp;&amp;&amp;&nbsp;y3==<font color=Maroon>7</font>) <BR />&nbsp;{ <BR />&nbsp;&nbsp;outtextxy(<font color=Maroon>100</font>,<font color=Maroon>430</font>,<font color=Maroon>"well&nbsp;done&nbsp;white..press&nbsp;w"</font>); <BR />&nbsp;&nbsp;getch();&nbsp;&nbsp;&nbsp;&nbsp;bottom(); <BR />&nbsp;} <BR />&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>b</font>&nbsp;&amp;&amp;&nbsp;(x3&gt;=<font color=Maroon>0</font>&nbsp;&amp;&amp;&nbsp;x3&lt;=<font color=Maroon>7</font>)&nbsp;&amp;&amp;&nbsp;y3==<font color=Maroon>0</font>) <BR />&nbsp;{ <BR />&nbsp;outtextxy(<font color=Maroon>100</font>,<font color=Maroon>430</font>,<font color=Maroon>"well&nbsp;done&nbsp;black..press&nbsp;b"</font>); <BR />&nbsp;getch();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bottom(); <BR />&nbsp;} <BR />&nbsp;<font color=Blue>return</font>; <BR />} <BR /></div> 
        
        ]]>
        </string>
        
        <string name="CprojectSnakeGame" formatted="false"> 
        <![CDATA[
        <div>#<font color=Blue>include</font>&nbsp;&lt;graphics.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;stdlib.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;dos.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;conio.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;time.h&gt; <BR /> <BR />check(); <BR />end(); <BR />win(); <BR /><font color=Blue>int</font>&nbsp;m[<font color=Maroon>500</font>],n[<font color=Maroon>500</font>],con=<font color=Maroon>20</font>; <BR />clock_t&nbsp;start,stop; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>void</font>&nbsp;main(<font color=Blue>void</font>) <BR />{ <BR /> <BR /><font color=Blue>int</font>&nbsp;gd=DETECT,gm,ch,maxx,maxy,x=<font color=Maroon>13</font>,y=<font color=Maroon>14</font>,p,q,spd=<font color=Maroon>100</font>; <BR /> <BR />initgraph(&amp;gd,&amp;gm,<font color=Maroon>"..\bgi"</font>); <BR /> <BR />setcolor(WHITE); <BR />settextstyle(<font color=Maroon>3</font>,<font color=Maroon>0</font>,<font color=Maroon>6</font>); <BR />outtextxy(<font color=Maroon>200</font>,<font color=Maroon>2</font>,<font color=Maroon>"&nbsp;SNAKE&nbsp;2&nbsp;"</font>); <BR />settextstyle(<font color=Maroon>6</font>,<font color=Maroon>0</font>,<font color=Maroon>2</font>); <BR />outtextxy(<font color=Maroon>20</font>,<font color=Maroon>80</font>,<font color=Maroon>"&nbsp;Use&nbsp;Arrow&nbsp;Keys&nbsp;To&nbsp;Direct&nbsp;The&nbsp;Snake&nbsp;"</font>); <BR />outtextxy(<font color=Maroon>20</font>,<font color=Maroon>140</font>,"&nbsp;Avoid&nbsp;The&nbsp;Head&nbsp;Of&nbsp;Snake&nbsp;Not&nbsp;To&nbsp;Hit&nbsp;Any&nbsp;Part&nbsp;Of&nbsp;Snake <BR />"); <BR />outtextxy(<font color=Maroon>20</font>,<font color=Maroon>160</font>,<font color=Maroon>"&nbsp;Pick&nbsp;The&nbsp;Beats&nbsp;Untill&nbsp;You&nbsp;Win&nbsp;The&nbsp;Game&nbsp;"</font>); <BR />outtextxy(<font color=Maroon>20</font>,<font color=Maroon>200</font>,<font color=Maroon>"&nbsp;Press&nbsp;Esc&nbsp;Anytime&nbsp;To&nbsp;Exit&nbsp;"</font>); <BR />outtextxy(<font color=Maroon>20</font>,<font color=Maroon>220</font>,<font color=Maroon>"&nbsp;Press&nbsp;Any&nbsp;Key&nbsp;To&nbsp;Continue&nbsp;"</font>); <BR />ch=getch(); <BR /><font color=Blue>if</font>(ch==<font color=Maroon>27</font>)&nbsp;exit(<font color=Maroon>0</font>); <BR />cleardevice(); <BR />maxx=getmaxx(); <BR />maxy=getmaxy(); <BR /> <BR />randomize(); <BR /> <BR />p=random(maxx); <BR /><font color=Blue>int</font>&nbsp;temp=p%<font color=Maroon>13</font>; <BR />p=p-temp; <BR />q=random(maxy); <BR />temp=q%<font color=Maroon>14</font>; <BR />q=q-temp; <BR /> <BR /> <BR /> <BR />&nbsp;start=clock(); <BR /><font color=Blue>int</font>&nbsp;a=<font color=Maroon>0</font>,i=<font color=Maroon>0</font>,j,t; <BR /><font color=Blue>while</font>(<font color=Maroon>1</font>) <BR />{ <BR /> <BR />&nbsp;setcolor(WHITE); <BR />&nbsp;setfillstyle(SOLID_FILL,con+<font color=Maroon>5</font>); <BR />&nbsp;circle(p,q,<font color=Maroon>5</font>); <BR />&nbsp;floodfill(p,q,WHITE); <BR /> <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(&nbsp;kbhit()&nbsp;) <BR />&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch=getch();&nbsp;<font color=Blue>if</font>(ch==<font color=Maroon>0</font>)&nbsp;ch=getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(ch==<font color=Maroon>72</font>&amp;&amp;&nbsp;a!=<font color=Maroon>2</font>)&nbsp;a=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(ch==<font color=Maroon>80</font>&amp;&amp;&nbsp;a!=<font color=Maroon>1</font>)&nbsp;a=<font color=Maroon>2</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(ch==<font color=Maroon>75</font>&amp;&amp;&nbsp;a!=<font color=Maroon>4</font>)&nbsp;a=<font color=Maroon>3</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(ch==<font color=Maroon>77</font>&amp;&amp;&nbsp;a!=<font color=Maroon>3</font>)&nbsp;a=<font color=Maroon>4</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(ch==<font color=Maroon>27</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;)&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(i&lt;<font color=Maroon>20</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m[i]=x; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n[i]=y; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(i&gt;=<font color=Maroon>20</font>) <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=con;j&gt;=<font color=Maroon>0</font>;j--){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m[<font color=Maroon>1</font>+j]=m[j]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n[<font color=Maroon>1</font>+j]=n[j]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;m[<font color=Maroon>0</font>]=x; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;n[<font color=Maroon>0</font>]=y; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(WHITE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,con); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(m[<font color=Maroon>0</font>],n[<font color=Maroon>0</font>],<font color=Maroon>8</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floodfill(m[<font color=Maroon>0</font>],n[<font color=Maroon>0</font>],WHITE); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(WHITE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>1</font>;j&lt;con;j++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,con+j%<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(m[j],n[j],<font color=Maroon>5</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floodfill(m[j],n[j],WHITE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(spd); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(BLACK); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,BLACK); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(m[<font color=Maroon>0</font>],n[<font color=Maroon>0</font>],<font color=Maroon>8</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floodfill(m[<font color=Maroon>0</font>],n[<font color=Maroon>0</font>],BLACK); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(BLACK); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,BLACK); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(m[j],n[j],<font color=Maroon>5</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floodfill(m[j],n[j],BLACK); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;stop=clock(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t=(stop-start)/CLK_TCK; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"&nbsp;TIME&nbsp;%d&nbsp;sec&nbsp;&nbsp;&nbsp;"</font>,t); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf("SCORE&nbsp;%d <BR />",con-<font color=Maroon>5</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;check(); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(x==p&amp;&amp;y==q)&nbsp;{&nbsp;con=con+<font color=Maroon>5</font>;&nbsp;<font color=Blue>if</font>(spd&gt;=<font color=Maroon>5</font>)&nbsp;spd=spd-<font color=Maroon>5</font>;&nbsp;<font color=Blue>else</font>&nbsp;spd=<font color=Maroon>5</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(con&gt;<font color=Maroon>490</font>)&nbsp;win(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p=random(maxx);&nbsp;temp=p%<font color=Maroon>13</font>;&nbsp;&nbsp;p=p-temp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;q=random(maxy);&nbsp;temp=q%<font color=Maroon>14</font>;&nbsp;&nbsp;&nbsp;q=q-temp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>1</font>)&nbsp;&nbsp;y&nbsp;=&nbsp;&nbsp;y-<font color=Maroon>14</font>;&nbsp;<font color=Blue>if</font>(y&lt;<font color=Maroon>0</font>)&nbsp;{&nbsp;temp=maxy%<font color=Maroon>14</font>;y=maxy-temp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>2</font>)&nbsp;&nbsp;y&nbsp;=&nbsp;&nbsp;y+<font color=Maroon>14</font>;&nbsp;<font color=Blue>if</font>(y&gt;maxy)&nbsp;y=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>3</font>)&nbsp;&nbsp;x&nbsp;=&nbsp;&nbsp;x-<font color=Maroon>13</font>;&nbsp;<font color=Blue>if</font>(x&lt;<font color=Maroon>0</font>)&nbsp;{&nbsp;temp=maxx%<font color=Maroon>13</font>;x=maxx-temp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>4</font>)&nbsp;&nbsp;x&nbsp;=&nbsp;&nbsp;x+<font color=Maroon>13</font>;&nbsp;<font color=Blue>if</font>(x&gt;maxx)&nbsp;x=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>){&nbsp;&nbsp;y&nbsp;=&nbsp;y+<font color=Maroon>14</font>&nbsp;;&nbsp;&nbsp;x=x+<font color=Maroon>13</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;} <BR /> <BR /> <BR />check(){ <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;a; <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(a=<font color=Maroon>1</font>;a&lt;con;a++) <BR /> <BR /><font color=Blue>if</font>(m[<font color=Maroon>0</font>]==m[a]&nbsp;&amp;&amp;&nbsp;n[<font color=Maroon>0</font>]==n[a])&nbsp;end(); <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>continue</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;} <BR />end() <BR /> <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;j,i; <BR />&nbsp;&nbsp;&nbsp;setcolor(WHITE); <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>5</font>;i++){ <BR />&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>500</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;cleardevice(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>500</font>); <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;=con;j++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,RED); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(m[j],n[j],<font color=Maroon>5</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floodfill(m[j],n[j],WHITE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>3</font>,<font color=Maroon>0</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>150</font>,<font color=Maroon>150</font>,<font color=Maroon>"&nbsp;&nbsp;&nbsp;&nbsp;GAME&nbsp;OVER&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;exit(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />win() <BR />{ <BR /><font color=Blue>int</font>&nbsp;j,i; <BR />setcolor(WHITE); <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>5</font>;i++){ <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;=con;j++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,con); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(m[j],n[j],<font color=Maroon>5</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floodfill(m[j],n[j],WHITE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>500</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;cleardevice(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>500</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;settextstyle(<font color=Maroon>3</font>,<font color=Maroon>0</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;outtextxy(<font color=Maroon>210</font>,<font color=Maroon>320</font>,<font color=Maroon>"&nbsp;YOU&nbsp;WIN&nbsp;"</font>); <BR />&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;exit(<font color=Maroon>0</font>); <BR />} <BR /></div>
        
          ]]>
        </string>
        
        
        
           
          <string name="CProjectTetrisGame" formatted="false"> 
        <![CDATA[  
           
           <div>Tetris&nbsp;Game&nbsp;in&nbsp;C <BR /> <BR />#<font color=Blue>include</font>&nbsp;&lt;graphics.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;stdlib.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;dos.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;conio.h&gt; <BR /> <BR /><font color=Blue>void</font>&nbsp;swap(<font color=Blue>int</font>&nbsp;a,<font color=Blue>int</font>&nbsp;b);<font color=Blue>void</font>&nbsp;bar1();<font color=Blue>void</font>&nbsp;bar2(); <BR /><font color=Blue>void</font>&nbsp;bar3();&nbsp;&nbsp;<font color=Blue>void</font>&nbsp;bar4();&nbsp;&nbsp;check0();&nbsp;check1(); <BR />check2();&nbsp;<font color=Blue>void</font>&nbsp;del();&nbsp;<font color=Blue>void</font>&nbsp;rod1();&nbsp;<font color=Blue>void</font>&nbsp;rod2(); <BR /><font color=Blue>void</font>&nbsp;box1();<font color=Blue>void</font>&nbsp;box2();<font color=Blue>void</font>&nbsp;tee1();voidtee2(); <BR /><font color=Blue>void</font>&nbsp;tee3();<font color=Blue>void</font>&nbsp;tee4();check3();<font color=Blue>void</font>&nbsp;insert(); <BR /><font color=Blue>void</font>&nbsp;again();<font color=Blue>void</font>&nbsp;print();<font color=Blue>void</font>&nbsp;remove();<font color=Blue>void</font>&nbsp;frame(); <BR /><font color=Blue>int</font>&nbsp;score=<font color=Maroon>0</font>,spd,q,t,a=<font color=Maroon>0</font>,i,j,l[<font color=Maroon>6</font>]={<font color=Maroon>300</font>,<font color=Maroon>90</font>,<font color=Maroon>315</font>,<font color=Maroon>105</font>,<font color=Maroon>301</font>,<font color=Maroon>91</font>},p,turn,m,n; <BR /><font color=Blue>char</font>&nbsp;play=<font color=Maroon>y</font>; <BR /><font color=Blue>static</font>&nbsp;<font color=Blue>int</font>&nbsp;arr[<font color=Maroon>26</font>][<font color=Maroon>13</font>]; <BR /><font color=Blue>void</font>&nbsp;main(<font color=Blue>void</font>) <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;ch,y; <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;gd=&nbsp;DETECT,gm,area,maxx,maxy,move,lmove,rmove; <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>void</font>&nbsp;*buff; <BR />&nbsp;&nbsp;&nbsp;initgraph(&amp;gd,&amp;gm,<font color=Maroon>"d:\tc\bgi"</font>); <BR /><font color=Blue>do</font>{ <BR /> <BR />&nbsp;&nbsp;&nbsp;turn=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;score=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>do</font>{ <BR />&nbsp;&nbsp;&nbsp;clrscr(); <BR />&nbsp;&nbsp;&nbsp;cleardevice(); <BR />&nbsp;&nbsp;&nbsp;printf(" <BR />&nbsp;Enter&nbsp;Your&nbsp;Choice <BR /> <BR />"); <BR />&nbsp;&nbsp;&nbsp;printf("&nbsp;Basic&nbsp;Level..........&nbsp;<font color=Maroon>1</font> <BR />"); <BR />&nbsp;&nbsp;&nbsp;printf("&nbsp;Middle&nbsp;Level.........&nbsp;<font color=Maroon>2</font> <BR />"); <BR />&nbsp;&nbsp;&nbsp;printf("&nbsp;Advanced&nbsp;Level.......&nbsp;<font color=Maroon>3</font> <BR />"); <BR />&nbsp;&nbsp;&nbsp;printf("&nbsp;Experts&nbsp;Level........&nbsp;<font color=Maroon>4</font> <BR />"); <BR />&nbsp;&nbsp;&nbsp;printf("&nbsp;Professional&nbsp;Level...&nbsp;<font color=Maroon>5</font> <BR />"); <BR />&nbsp;&nbsp;&nbsp;y=getch(); <BR />&nbsp;&nbsp;&nbsp;clrscr(); <BR />&nbsp;&nbsp;&nbsp;cleardevice(); <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(y==<font color=Maroon>1</font>)&nbsp;{spd=<font color=Maroon>200</font>;&nbsp;settextstyle(<font color=Maroon>2</font>,<font color=Maroon>0</font>,<font color=Maroon>6</font>);outtextxy(<font color=Maroon>2</font>,<font color=Maroon>150</font>,"&nbsp;&nbsp;&nbsp;Basic <BR />Level&nbsp;");<font color=Blue>break</font>;} <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(y==<font color=Maroon>2</font>)&nbsp;{spd=<font color=Maroon>150</font>;&nbsp;settextstyle(<font color=Maroon>2</font>,<font color=Maroon>0</font>,<font color=Maroon>6</font>);outtextxy(<font color=Maroon>2</font>,<font color=Maroon>150</font>,"&nbsp;&nbsp;&nbsp;Middle <BR />Level&nbsp;");<font color=Blue>break</font>;} <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(y==<font color=Maroon>3</font>)&nbsp;{spd=<font color=Maroon>100</font>;&nbsp;settextstyle(<font color=Maroon>2</font>,<font color=Maroon>0</font>,<font color=Maroon>6</font>);outtextxy(<font color=Maroon>2</font>,<font color=Maroon>150</font>,"&nbsp;&nbsp;Advanced <BR />Level&nbsp;");<font color=Blue>break</font>;} <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(y==<font color=Maroon>4</font>)&nbsp;{spd=<font color=Maroon>75</font>;&nbsp;settextstyle(<font color=Maroon>2</font>,<font color=Maroon>0</font>,<font color=Maroon>6</font>);outtextxy(<font color=Maroon>2</font>,<font color=Maroon>150</font>,"&nbsp;&nbsp;Experts <BR />Level&nbsp;");<font color=Blue>break</font>;} <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(y==<font color=Maroon>5</font>)&nbsp;{spd=<font color=Maroon>50</font>;&nbsp;&nbsp;settextstyle(<font color=Maroon>2</font>,<font color=Maroon>0</font>,<font color=Maroon>6</font>);outtextxy(<font color=Maroon>2</font>,<font color=Maroon>150</font>,"Professional <BR />Level&nbsp;");<font color=Blue>break</font>;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<font color=Blue>while</font>(<font color=Maroon>1</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;frame(); <BR />&nbsp;&nbsp;&nbsp;getch(); <BR /><font color=Blue>int</font>&nbsp;k,ar[<font color=Maroon>2</font>],pr[<font color=Maroon>2</font>],t[<font color=Maroon>6</font>]; <BR /> <BR />randomize(); <BR />ar[<font color=Maroon>0</font>]=random(<font color=Maroon>2</font>); <BR />pr[<font color=Maroon>0</font>]=random(<font color=Maroon>6</font>); <BR />ar[<font color=Maroon>1</font>]=random(<font color=Maroon>2</font>); <BR />pr[<font color=Maroon>1</font>]=random(<font color=Maroon>6</font>); <BR /><font color=Blue>while</font>(<font color=Maroon>1</font>) <BR />{ <BR />printf("&nbsp;score=&nbsp;%d <BR />",score); <BR />a=ar[<font color=Maroon>0</font>]; <BR />p=pr[<font color=Maroon>0</font>]; <BR />l[<font color=Maroon>0</font>]=<font color=Maroon>450</font>;l[<font color=Maroon>1</font>]=<font color=Maroon>250</font>;l[<font color=Maroon>2</font>]=<font color=Maroon>465</font>;l[<font color=Maroon>3</font>]=<font color=Maroon>265</font>;l[<font color=Maroon>4</font>]=<font color=Maroon>451</font>;l[<font color=Maroon>5</font>]=<font color=Maroon>251</font>; <BR /> <BR /><font color=Blue>if</font>(y==<font color=Maroon>1</font>)&nbsp;spd=<font color=Maroon>100</font>; <BR /><font color=Blue>if</font>(y==<font color=Maroon>2</font>)&nbsp;spd=<font color=Maroon>75</font>; <BR /><font color=Blue>if</font>(y==<font color=Maroon>3</font>)&nbsp;spd=<font color=Maroon>50</font>; <BR /><font color=Blue>if</font>(y==<font color=Maroon>4</font>)&nbsp;spd=<font color=Maroon>30</font>; <BR /><font color=Blue>if</font>(y==<font color=Maroon>5</font>)&nbsp;spd=<font color=Maroon>20</font>; <BR />print(); <BR /> <BR />delay(<font color=Maroon>500</font>); <BR />a=ar[<font color=Maroon>1</font>]; <BR />p=pr[<font color=Maroon>1</font>]; <BR /> <BR />t[<font color=Maroon>0</font>]=l[<font color=Maroon>0</font>];&nbsp;&nbsp;t[<font color=Maroon>1</font>]=l[<font color=Maroon>1</font>];&nbsp;t[<font color=Maroon>2</font>]=l[<font color=Maroon>2</font>]; <BR />t[<font color=Maroon>3</font>]=l[<font color=Maroon>3</font>];&nbsp;&nbsp;t[<font color=Maroon>4</font>]=l[<font color=Maroon>4</font>];&nbsp;t[<font color=Maroon>5</font>]=l[<font color=Maroon>5</font>]; <BR /> <BR />a=ar[<font color=Maroon>1</font>]; <BR />p=pr[<font color=Maroon>1</font>]; <BR /> <BR />l[<font color=Maroon>0</font>]=<font color=Maroon>270</font>;l[<font color=Maroon>1</font>]=<font color=Maroon>90</font>;l[<font color=Maroon>2</font>]=<font color=Maroon>285</font>;l[<font color=Maroon>3</font>]=<font color=Maroon>105</font>;l[<font color=Maroon>4</font>]=<font color=Maroon>271</font>;l[<font color=Maroon>5</font>]=<font color=Maroon>91</font>; <BR /> <BR /><font color=Blue>do</font>{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;k=<font color=Maroon>0</font>; <BR /><font color=Blue>if</font>(kbhit()){&nbsp;ch=getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(ch==<font color=Maroon>0</font>)&nbsp;ch=getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(ch==<font color=Maroon>77</font>)&nbsp;{move=check1();&nbsp;<font color=Blue>if</font>(move==<font color=Maroon>0</font>)&nbsp;{l[<font color=Maroon>0</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]+=<font color=Maroon>15</font>; <BR />k=<font color=Maroon>1</font>;}} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(ch==<font color=Maroon>75</font>)&nbsp;{move=check2();&nbsp;<font color=Blue>if</font>(move==<font color=Maroon>0</font>)&nbsp;{l[<font color=Maroon>0</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]-=<font color=Maroon>15</font>; <BR />k=<font color=Maroon>1</font>;}} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(ch==<font color=Maroon>80</font>)&nbsp;spd=<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(ch==<font color=Maroon>27</font>)&nbsp;exit(<font color=Maroon>0</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(ch==<font color=Maroon>32</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(p==<font color=Maroon>4</font>||p==<font color=Maroon>5</font>)&nbsp;&nbsp;<font color=Blue>switch</font>(p) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>4</font>:&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>)&nbsp;a++;&nbsp;<font color=Blue>else</font>&nbsp;p++;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>5</font>:&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>1</font>)&nbsp;a--;&nbsp;<font color=Blue>else</font>&nbsp;p--; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(p==<font color=Maroon>1</font>||p==<font color=Maroon>2</font>)&nbsp;<font color=Blue>switch</font>(p) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1</font>:&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>)&nbsp;a++;&nbsp;<font color=Blue>else</font>&nbsp;p++; <BR />l[<font color=Maroon>0</font>]=<font color=Maroon>270</font>;l[<font color=Maroon>2</font>]=<font color=Maroon>285</font>;l[<font color=Maroon>4</font>]=<font color=Maroon>271</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>2</font>:&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>1</font>)&nbsp;a--;&nbsp;<font color=Blue>else</font>&nbsp;p--;&nbsp;l[<font color=Maroon>0</font>]=<font color=Maroon>270</font>;l[<font color=Maroon>2</font>]=<font color=Maroon>285</font>;l[<font color=Maroon>4</font>]=<font color=Maroon>271</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(p==<font color=Maroon>3</font>)&nbsp;&nbsp;{&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>)&nbsp;a++;&nbsp;<font color=Blue>else</font>&nbsp;a=<font color=Maroon>0</font>; <BR />&nbsp;l[<font color=Maroon>0</font>]=<font color=Maroon>270</font>;l[<font color=Maroon>2</font>]=<font color=Maroon>285</font>;l[<font color=Maroon>4</font>]=<font color=Maroon>271</font>;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>1</font>)&nbsp;&nbsp;&nbsp;&nbsp;{swap(l[<font color=Maroon>0</font>],l[<font color=Maroon>1</font>]);swap(l[<font color=Maroon>2</font>],l[<font color=Maroon>3</font>]);swap(l[<font color=Maroon>4</font>],l[<font color=Maroon>5</font>]);} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR /> <BR /> <BR />move=check0(); <BR /><font color=Blue>if</font>(move==<font color=Maroon>1</font>)&nbsp;<font color=Blue>break</font>; <BR /> <BR />print(); <BR /> <BR /><font color=Blue>if</font>(k==<font color=Maroon>1</font>)&nbsp;delay(<font color=Maroon>0</font>);&nbsp;<font color=Blue>else</font>&nbsp;delay(spd); <BR /> <BR />remove(); <BR /> <BR /><font color=Blue>if</font>(k==<font color=Maroon>0</font>)&nbsp;{l[<font color=Maroon>1</font>]+=<font color=Maroon>15</font>;&nbsp;l[<font color=Maroon>3</font>]+=<font color=Maroon>15</font>;&nbsp;l[<font color=Maroon>5</font>]+=<font color=Maroon>15</font>;} <BR /> <BR /> <BR />}<font color=Blue>while</font>(<font color=Maroon>1</font>); <BR />print(); <BR />fflush(stdin); <BR /> <BR /> <BR />insert(); <BR /> <BR />check3(); <BR /> <BR />a=ar[<font color=Maroon>0</font>]; <BR />p=pr[<font color=Maroon>0</font>]; <BR /> <BR /> <BR />l[<font color=Maroon>0</font>]=t[<font color=Maroon>0</font>];l[<font color=Maroon>1</font>]=t[<font color=Maroon>1</font>];l[<font color=Maroon>2</font>]=t[<font color=Maroon>2</font>];l[<font color=Maroon>3</font>]=t[<font color=Maroon>3</font>]; <BR />l[<font color=Maroon>4</font>]=t[<font color=Maroon>4</font>];l[<font color=Maroon>5</font>]=t[<font color=Maroon>5</font>]; <BR /> <BR /> <BR />remove(); <BR /> <BR /> <BR />ar[<font color=Maroon>1</font>]=ar[<font color=Maroon>0</font>]; <BR />pr[<font color=Maroon>1</font>]=pr[<font color=Maroon>0</font>]; <BR /> <BR /> <BR />ar[<font color=Maroon>0</font>]=random(<font color=Maroon>2</font>); <BR />pr[<font color=Maroon>0</font>]=random(<font color=Maroon>6</font>); <BR /> <BR /><font color=Blue>if</font>(pr[<font color=Maroon>0</font>]==<font color=Maroon>2</font>)&nbsp;pr[<font color=Maroon>0</font>]=<font color=Maroon>3</font>; <BR /><font color=Blue>if</font>(turn==<font color=Maroon>0</font>)&nbsp;<font color=Blue>break</font>; <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;} <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;}<font color=Blue>while</font>(play==<font color=Maroon>y</font>); <BR /> <BR />} <BR /> <BR /> <BR /><font color=Blue>void</font>&nbsp;swap(<font color=Blue>int</font>&nbsp;a,<font color=Blue>int</font>&nbsp;b) <BR />{ <BR />a=a+b; <BR />b=a-b; <BR />a=a-b; <BR />} <BR /> <BR /> <BR /><font color=Blue>void</font>&nbsp;bar1() <BR />{&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>&amp;&amp;i&lt;<font color=Maroon>1</font>)&nbsp;{l[<font color=Maroon>0</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>&amp;&amp;i&gt;=<font color=Maroon>1</font>){l[<font color=Maroon>1</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR /> <BR /><font color=Green>//&nbsp;&nbsp;if(a==1&amp;&amp;i==1)</font> <BR />{l[<font color=Maroon>0</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>1</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>1</font>&amp;&amp;i==<font color=Maroon>0</font>)&nbsp;{l[<font color=Maroon>1</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>1</font>&amp;&amp;i&gt;<font color=Maroon>0</font>)&nbsp;{l[<font color=Maroon>0</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR /> <BR />&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>2</font>&amp;&amp;i&gt;=<font color=Maroon>2</font>)&nbsp;{l[<font color=Maroon>0</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>2</font>&amp;&amp;i&lt;<font color=Maroon>2</font>)&nbsp;{l[<font color=Maroon>1</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;} <BR /> <BR /> <BR /> <BR /> <BR /><font color=Blue>void</font>&nbsp;bar2() <BR />{&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>&amp;&amp;i&gt;=<font color=Maroon>3</font>){l[<font color=Maroon>0</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>&amp;&amp;i&lt;<font color=Maroon>3</font>)&nbsp;{l[<font color=Maroon>1</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR /> <BR />&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>1</font>&amp;&amp;i&lt;<font color=Maroon>3</font>)&nbsp;{l[<font color=Maroon>0</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>1</font>&amp;&amp;i==<font color=Maroon>3</font>){l[<font color=Maroon>1</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR /> <BR />&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>2</font>&amp;&amp;i&lt;<font color=Maroon>2</font>)&nbsp;{l[<font color=Maroon>0</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]+=<font color=Maroon>15</font>;} <BR />&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>2</font>&amp;&amp;i&gt;=<font color=Maroon>2</font>){l[<font color=Maroon>1</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;} <BR /><font color=Blue>void</font>&nbsp;bar3() <BR />{<font color=Blue>if</font>(a==<font color=Maroon>0</font>&amp;&amp;i&gt;=<font color=Maroon>3</font>){l[<font color=Maroon>0</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>&amp;&amp;i&lt;<font color=Maroon>3</font>){l[<font color=Maroon>1</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>2</font>&amp;&amp;i&lt;<font color=Maroon>2</font>)&nbsp;{l[<font color=Maroon>0</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>2</font>&amp;&amp;i&gt;=<font color=Maroon>2</font>)&nbsp;{l[<font color=Maroon>1</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>1</font>&amp;&amp;i&gt;=<font color=Maroon>1</font>)&nbsp;{l[<font color=Maroon>0</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>1</font>&amp;&amp;i&lt;<font color=Maroon>1</font>)&nbsp;{l[<font color=Maroon>1</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;} <BR /><font color=Blue>void</font>&nbsp;bar4() <BR />{<font color=Blue>if</font>(a==<font color=Maroon>0</font>&amp;&amp;i&lt;<font color=Maroon>1</font>){l[<font color=Maroon>0</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>&amp;&amp;i&gt;=<font color=Maroon>1</font>)&nbsp;{l[<font color=Maroon>1</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>2</font>&amp;&amp;i&gt;=<font color=Maroon>2</font>)&nbsp;{l[<font color=Maroon>0</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>2</font>&amp;&amp;i&lt;<font color=Maroon>2</font>){l[<font color=Maroon>1</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>1</font>&amp;&amp;i&lt;<font color=Maroon>3</font>)&nbsp;{l[<font color=Maroon>0</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>1</font>&amp;&amp;i==<font color=Maroon>3</font>)&nbsp;{l[<font color=Maroon>1</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />} <BR /><font color=Blue>void</font>&nbsp;rod1() <BR /> <BR />{ <BR /> <BR />&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>)&nbsp;{l[<font color=Maroon>0</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;&nbsp;&nbsp;&nbsp;{l[<font color=Maroon>1</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;} <BR /><font color=Blue>void</font>&nbsp;rod2() <BR />{ <BR /> <BR />&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>)&nbsp;{l[<font color=Maroon>0</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;&nbsp;{l[<font color=Maroon>1</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR /> <BR />&nbsp;} <BR /><font color=Blue>void</font>&nbsp;box1() <BR />{<font color=Blue>if</font>(i&lt;<font color=Maroon>1</font>)&nbsp;{l[<font color=Maroon>0</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;<font color=Blue>if</font>(i==<font color=Maroon>1</font>)&nbsp;{l[<font color=Maroon>1</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;<font color=Blue>if</font>(i==<font color=Maroon>2</font>)&nbsp;{l[<font color=Maroon>0</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;} <BR /><font color=Blue>void</font>&nbsp;box2() <BR />{<font color=Blue>if</font>(i&lt;<font color=Maroon>1</font>)&nbsp;{l[<font color=Maroon>0</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;<font color=Blue>if</font>(i==<font color=Maroon>1</font>)&nbsp;{l[<font color=Maroon>1</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;<font color=Blue>if</font>(i==<font color=Maroon>2</font>)&nbsp;{l[<font color=Maroon>0</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;} <BR />&nbsp;<font color=Blue>void</font>&nbsp;tee1() <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>&amp;&amp;i==<font color=Maroon>1</font>)&nbsp;{l[<font color=Maroon>0</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>&amp;&amp;i&lt;<font color=Maroon>1</font>)&nbsp;{l[<font color=Maroon>1</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>&amp;&amp;(i==<font color=Maroon>2</font>||i==<font color=Maroon>3</font>))&nbsp;{l[<font color=Maroon>0</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a&gt;<font color=Maroon>0</font>&amp;&amp;i==<font color=Maroon>2</font>) <BR />{l[<font color=Maroon>0</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>1</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a&gt;<font color=Maroon>0</font>&amp;&amp;i==<font color=Maroon>0</font>)&nbsp;{l[<font color=Maroon>1</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a&gt;<font color=Maroon>0</font>&amp;&amp;(i==<font color=Maroon>1</font>))&nbsp;{l[<font color=Maroon>0</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;<font color=Blue>void</font>&nbsp;tee2() <BR />&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>&amp;&amp;i==<font color=Maroon>0</font>)&nbsp;{l[<font color=Maroon>0</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>&amp;&amp;i==<font color=Maroon>1</font>)&nbsp;{l[<font color=Maroon>0</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>&amp;&amp;i==<font color=Maroon>2</font>) <BR />{l[<font color=Maroon>0</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>1</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a&gt;<font color=Maroon>0</font>&amp;&amp;i==<font color=Maroon>2</font>) <BR />{l[<font color=Maroon>0</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>1</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a&gt;<font color=Maroon>0</font>&amp;&amp;i==<font color=Maroon>1</font>)&nbsp;{l[<font color=Maroon>0</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a&gt;<font color=Maroon>0</font>&amp;&amp;i==<font color=Maroon>0</font>)&nbsp;{l[<font color=Maroon>1</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>void</font>&nbsp;tee3() <BR />&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>&amp;&amp;i==<font color=Maroon>0</font>)&nbsp;{l[<font color=Maroon>0</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>&amp;&amp;i==<font color=Maroon>2</font>) <BR />{l[<font color=Maroon>0</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>1</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>&amp;&amp;i==<font color=Maroon>1</font>)&nbsp;{l[<font color=Maroon>1</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]+=<font color=Maroon>15</font>;} <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a&gt;<font color=Maroon>0</font>&amp;&amp;i==<font color=Maroon>2</font>) <BR />{l[<font color=Maroon>0</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>1</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a&gt;<font color=Maroon>0</font>&amp;&amp;i==<font color=Maroon>0</font>)&nbsp;{l[<font color=Maroon>1</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a&gt;<font color=Maroon>0</font>&amp;&amp;(i==<font color=Maroon>1</font>))&nbsp;{l[<font color=Maroon>0</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>void</font>&nbsp;tee4() <BR />&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>&amp;&amp;i==<font color=Maroon>1</font>)&nbsp;{l[<font color=Maroon>1</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>&amp;&amp;i==<font color=Maroon>0</font>)&nbsp;{l[<font color=Maroon>0</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>&amp;&amp;i==<font color=Maroon>2</font>) <BR />{l[<font color=Maroon>1</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>0</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]+=<font color=Maroon>15</font>;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a&gt;<font color=Maroon>0</font>&amp;&amp;i==<font color=Maroon>2</font>) <BR />{l[<font color=Maroon>0</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]+=<font color=Maroon>15</font>;l[<font color=Maroon>1</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a&gt;<font color=Maroon>0</font>&amp;&amp;i==<font color=Maroon>0</font>)&nbsp;{l[<font color=Maroon>1</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>3</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>5</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a&gt;<font color=Maroon>0</font>&amp;&amp;i==<font color=Maroon>1</font>)&nbsp;{l[<font color=Maroon>0</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>2</font>]-=<font color=Maroon>15</font>;l[<font color=Maroon>4</font>]-=<font color=Maroon>15</font>;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;check0() <BR />{&nbsp;<font color=Blue>int</font>&nbsp;x,y,s,d=<font color=Maroon>5</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;x=(l[<font color=Maroon>0</font>]-<font color=Maroon>180</font>)/<font color=Maroon>15</font>; <BR />&nbsp;&nbsp;&nbsp;y=(l[<font color=Maroon>1</font>]-<font color=Maroon>90</font>)/<font color=Maroon>15</font>; <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>switch</font>&nbsp;(p) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>0</font>:&nbsp;y+=<font color=Maroon>2</font>;d=<font color=Maroon>2</font>;&nbsp;<font color=Blue>if</font>(arr[y][x-<font color=Maroon>1</font>]==<font color=Maroon>1</font>)&nbsp;<font color=Blue>return</font>(<font color=Maroon>1</font>);&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1</font>:&nbsp;y+=<font color=Maroon>4</font>;x++;d=<font color=Maroon>1</font>;<font color=Blue>if</font>(arr[y-<font color=Maroon>3</font>][x-<font color=Maroon>1</font>]==<font color=Maroon>1</font>)&nbsp;<font color=Blue>return</font>(<font color=Maroon>1</font>);&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>2</font>:&nbsp;y=y+<font color=Maroon>4</font>;d=<font color=Maroon>2</font>;x+=<font color=Maroon>1</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>3</font>:&nbsp;y=y+<font color=Maroon>1</font>;d=<font color=Maroon>5</font>;x+=<font color=Maroon>4</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>4</font>:&nbsp;y+=<font color=Maroon>2</font>;d=<font color=Maroon>3</font>;x++;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>5</font>:&nbsp;y+=<font color=Maroon>1</font>;d=<font color=Maroon>3</font>;<font color=Blue>if</font>(arr[y+<font color=Maroon>1</font>][x-<font color=Maroon>1</font>]==<font color=Maroon>1</font>)&nbsp;<font color=Blue>return</font>(<font color=Maroon>1</font>);&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(s=<font color=Maroon>1</font>;s&lt;d;s++,x--) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(arr[y][x]==<font color=Maroon>1</font>)&nbsp;<font color=Blue>return</font>(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>((arr[y][x])==<font color=Maroon>0</font>)&nbsp;<font color=Blue>return</font>(<font color=Maroon>0</font>);&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>return</font>(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>1</font>){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>switch</font>&nbsp;(p) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>0</font>:&nbsp;y+=<font color=Maroon>2</font>;d=<font color=Maroon>2</font>;&nbsp;<font color=Blue>if</font>(arr[y][x-<font color=Maroon>1</font>]==<font color=Maroon>1</font>)&nbsp;<font color=Blue>return</font>(<font color=Maroon>1</font>);&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1</font>:&nbsp;y=y+<font color=Maroon>2</font>;d=<font color=Maroon>4</font>;<font color=Blue>if</font>(arr[y][x]==<font color=Maroon>1</font>)&nbsp;<font color=Blue>return</font>(<font color=Maroon>1</font>);&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>2</font>:&nbsp;y=y+<font color=Maroon>2</font>;d=<font color=Maroon>4</font>;x+=<font color=Maroon>3</font>;<font color=Blue>if</font>(arr[y][x-<font color=Maroon>3</font>]==<font color=Maroon>1</font>)&nbsp;<font color=Blue>return</font>(<font color=Maroon>1</font>);&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>3</font>:&nbsp;y=y+<font color=Maroon>5</font>;d=<font color=Maroon>0</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>4</font>:&nbsp;y+=<font color=Maroon>3</font>;d=<font color=Maroon>0</font>;<font color=Blue>if</font>(arr[y-<font color=Maroon>1</font>][x+<font color=Maroon>1</font>]==<font color=Maroon>1</font>)&nbsp;<font color=Blue>return</font>(<font color=Maroon>1</font>);&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>5</font>:&nbsp;y+=<font color=Maroon>3</font>;d=<font color=Maroon>0</font>;<font color=Blue>if</font>(arr[y-<font color=Maroon>1</font>][x-<font color=Maroon>1</font>]==<font color=Maroon>1</font>)&nbsp;<font color=Blue>return</font>(<font color=Maroon>1</font>);&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(s=<font color=Maroon>1</font>;s&lt;d;s++,x--) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(arr[y][x]==<font color=Maroon>1</font>)&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>((arr[y][x])==<font color=Maroon>0</font>)&nbsp;<font color=Blue>return</font>(<font color=Maroon>0</font>);&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>return</font>(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR /> <BR />&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>0</font>); <BR />} <BR /> <BR /> <BR />check1() <BR />{&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;x,y,s,d=<font color=Maroon>5</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;x=(l[<font color=Maroon>0</font>]-<font color=Maroon>150</font>)/<font color=Maroon>15</font>; <BR />&nbsp;&nbsp;&nbsp;y=(l[<font color=Maroon>1</font>]-<font color=Maroon>90</font>)/<font color=Maroon>15</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>){ <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>switch</font>&nbsp;(p) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>0</font>:&nbsp;x=x-<font color=Maroon>1</font>;y++;d=<font color=Maroon>2</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1</font>:&nbsp;x=x;d=<font color=Maroon>3</font>;&nbsp;y=y+<font color=Maroon>3</font>;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>2</font>:&nbsp;x=x;d=<font color=Maroon>4</font>;y+=<font color=Maroon>3</font>;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>3</font>:&nbsp;x=x+<font color=Maroon>3</font>;d=<font color=Maroon>0</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>4</font>:&nbsp;x=x;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>5</font>:&nbsp;x=x-<font color=Maroon>1</font>;d=<font color=Maroon>0</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(s=<font color=Maroon>0</font>;s&lt;d;s++,y--) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(arr[y][x]==<font color=Maroon>1</font>)&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>((arr[y][x])==<font color=Maroon>0</font>)&nbsp;<font color=Blue>return</font>(<font color=Maroon>0</font>);&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>return</font>(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;<font color=Blue>switch</font>(p) <BR />&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>0</font>:&nbsp;x=x;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1</font>:&nbsp;x=x;d=<font color=Maroon>1</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>2</font>:&nbsp;x=x+<font color=Maroon>3</font>;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>3</font>:&nbsp;x=x;y+=<font color=Maroon>5</font>;d=<font color=Maroon>4</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>4</font>:&nbsp;x=x+<font color=Maroon>1</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>5</font>:&nbsp;x=x;y+=<font color=Maroon>2</font>;d=<font color=Maroon>2</font>; <BR />&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(s=<font color=Maroon>0</font>;s&lt;d;s++,y--) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(arr[y][x-<font color=Maroon>1</font>]==<font color=Maroon>1</font>)&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>((arr[y][x-<font color=Maroon>1</font>])==<font color=Maroon>0</font>)&nbsp;<font color=Blue>return</font>(<font color=Maroon>0</font>);&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>return</font>(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>0</font>); <BR />} <BR /> <BR /> <BR />check2() <BR />{ <BR />&nbsp;<font color=Blue>int</font>&nbsp;x,y,s,d=<font color=Maroon>5</font>; <BR />&nbsp;&nbsp;&nbsp;x=(l[<font color=Maroon>0</font>]-<font color=Maroon>150</font>)/<font color=Maroon>15</font>; <BR />&nbsp;&nbsp;&nbsp;y=(l[<font color=Maroon>1</font>]-<font color=Maroon>90</font>)/<font color=Maroon>15</font>; <BR />&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>0</font>){ <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>switch</font>&nbsp;(p) <BR />&nbsp;&nbsp;&nbsp;{&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>0</font>:&nbsp;x=x-<font color=Maroon>1</font>;d=<font color=Maroon>1</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1</font>:&nbsp;x=x;d=<font color=Maroon>3</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>2</font>:&nbsp;x=x;d=<font color=Maroon>3</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>3</font>:&nbsp;x=x;d=<font color=Maroon>0</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>4</font>:&nbsp;x=x-<font color=Maroon>1</font>;d=<font color=Maroon>1</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>5</font>:&nbsp;x=x-<font color=Maroon>2</font>;d=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(s=<font color=Maroon>0</font>;s&lt;d;s++,y++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(arr[y][x-<font color=Maroon>3</font>]==<font color=Maroon>1</font>)&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>((arr[y][x-<font color=Maroon>3</font>])==<font color=Maroon>0</font>)&nbsp;<font color=Blue>return</font>(<font color=Maroon>0</font>);&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>return</font>(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(a==<font color=Maroon>1</font>){ <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>switch</font>&nbsp;(p) <BR />&nbsp;&nbsp;&nbsp;{&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>0</font>:&nbsp;x=x-<font color=Maroon>4</font>;d=<font color=Maroon>2</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1</font>:&nbsp;x=x-<font color=Maroon>6</font>;d=<font color=Maroon>0</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>2</font>:&nbsp;x=x-<font color=Maroon>3</font>;d=<font color=Maroon>2</font>;y-=<font color=Maroon>1</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>3</font>:&nbsp;x=x-<font color=Maroon>3</font>;d=<font color=Maroon>5</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>4</font>:&nbsp;x-=<font color=Maroon>3</font>;&nbsp;d=<font color=Maroon>3</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>5</font>:&nbsp;x-=<font color=Maroon>4</font>;&nbsp;d=<font color=Maroon>4</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(s=<font color=Maroon>1</font>;s&lt;d;s++,y++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(arr[y][x]==<font color=Maroon>1</font>)&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>((arr[y][x])==<font color=Maroon>0</font>)&nbsp;<font color=Blue>return</font>(<font color=Maroon>0</font>);&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>return</font>(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>0</font>); <BR />} <BR /> <BR />&nbsp;check3() <BR />{ <BR /> <BR />&nbsp;<font color=Blue>for</font>(t=<font color=Maroon>1</font>;t&lt;<font color=Maroon>25</font>;t++) <BR /> <BR />&nbsp;<font color=Blue>for</font>(q=<font color=Maroon>1</font>;q&lt;<font color=Maroon>12</font>;) <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(arr[t][q]==<font color=Maroon>1</font>)&nbsp;{&nbsp;q++;&nbsp;<font color=Blue>if</font>(q==<font color=Maroon>12</font>)&nbsp;{score+=<font color=Maroon>100</font>;del();}}&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>break</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>0</font>); <BR />} <BR /> <BR /> <BR /><font color=Blue>void</font>&nbsp;insert() <BR />{&nbsp;<font color=Blue>int</font>&nbsp;x,y; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>5</font>;i++){ <BR />&nbsp;&nbsp;&nbsp;&nbsp;x=(l[<font color=Maroon>0</font>]-<font color=Maroon>180</font>)/<font color=Maroon>15</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;y=(l[<font color=Maroon>1</font>]-<font color=Maroon>90</font>)/<font color=Maroon>15</font>; <BR />&nbsp;&nbsp;&nbsp;arr[y][x]=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>switch</font>(p) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>0</font>:&nbsp;box2();<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1</font>:&nbsp;bar2();<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>2</font>:&nbsp;bar4();<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>3</font>:&nbsp;rod2();<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>4</font>:&nbsp;tee2();<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>5</font>:&nbsp;tee4(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(arr[<font color=Maroon>0</font>][<font color=Maroon>5</font>]==<font color=Maroon>1</font>||arr[<font color=Maroon>0</font>][<font color=Maroon>6</font>]==<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>3</font>,<font color=Maroon>0</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>180</font>,<font color=Maroon>100</font>,<font color=Maroon>"&nbsp;GAME&nbsp;OVER&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;fflush(stdin); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;turn=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;again(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;print() <BR />{ <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>5</font>;i++){ <BR />setcolor(WHITE); <BR />setfillstyle(SOLID_FILL,<font color=Maroon>6</font>); <BR />rectangle(l[<font color=Maroon>0</font>]+<font color=Maroon>1</font>,l[<font color=Maroon>1</font>]+<font color=Maroon>1</font>,l[<font color=Maroon>2</font>]-<font color=Maroon>1</font>,l[<font color=Maroon>3</font>]-<font color=Maroon>1</font>); <BR />floodfill(l[<font color=Maroon>4</font>]+<font color=Maroon>1</font>,l[<font color=Maroon>5</font>]+<font color=Maroon>1</font>,WHITE); <BR /><font color=Blue>if</font>(i&lt;<font color=Maroon>4</font>)&nbsp;&nbsp;<font color=Blue>switch</font>&nbsp;(p) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>0</font>&nbsp;:&nbsp;box1();<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1</font>&nbsp;:&nbsp;bar1();<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>2</font>&nbsp;:&nbsp;bar3();<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>3</font>&nbsp;:&nbsp;rod1();<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>4</font>&nbsp;:&nbsp;tee1();<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>5</font>&nbsp;:&nbsp;tee3(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;remove() <BR />{ <BR /><font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>5</font>;i++){ <BR />setcolor(BLACK); <BR />setfillstyle(SOLID_FILL,BLACK); <BR />rectangle(l[<font color=Maroon>0</font>]+<font color=Maroon>1</font>,l[<font color=Maroon>1</font>]+<font color=Maroon>1</font>,l[<font color=Maroon>2</font>]-<font color=Maroon>1</font>,l[<font color=Maroon>3</font>]-<font color=Maroon>1</font>); <BR />floodfill(l[<font color=Maroon>4</font>]+<font color=Maroon>1</font>,l[<font color=Maroon>5</font>]+<font color=Maroon>1</font>,BLACK); <BR />&nbsp;<font color=Blue>if</font>(i&lt;<font color=Maroon>4</font>)&nbsp;<font color=Blue>switch</font>&nbsp;(p) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>0</font>&nbsp;:&nbsp;box2();<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1</font>&nbsp;:&nbsp;bar2();<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>2</font>&nbsp;:&nbsp;bar4();<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>3</font>&nbsp;:&nbsp;rod2();<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>4</font>&nbsp;:&nbsp;tee2();<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>5</font>&nbsp;:&nbsp;tee4(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;del() <BR />{&nbsp;<font color=Blue>int</font>&nbsp;m,n; <BR />&nbsp;<font color=Blue>for</font>(;t&gt;<font color=Maroon>0</font>;t--) <BR />&nbsp;<font color=Blue>for</font>(q=<font color=Maroon>1</font>;q&lt;<font color=Maroon>12</font>;q++) <BR />&nbsp;arr[t][q]=arr[t-<font color=Maroon>1</font>][q]; <BR /> <BR /> <BR />&nbsp;<font color=Blue>for</font>(n=<font color=Maroon>0</font>;n&lt;<font color=Maroon>25</font>;n++) <BR />&nbsp;<font color=Green>//delay(50);</font> <BR />&nbsp;<font color=Blue>for</font>(m=<font color=Maroon>1</font>;m&lt;<font color=Maroon>12</font>;m++){ <BR /> <BR />&nbsp;<font color=Blue>if</font>(arr[n][m]==<font color=Maroon>1</font>)&nbsp;&nbsp;{&nbsp;setcolor(WHITE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,<font color=Maroon>6</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rectangle((m*<font color=Maroon>15</font>)+<font color=Maroon>181</font>,(n*<font color=Maroon>15</font>)+<font color=Maroon>91</font>,(m*<font color=Maroon>15</font>)+<font color=Maroon>194</font>,(n*<font color=Maroon>15</font>)+<font color=Maroon>104</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floodfill((m*<font color=Maroon>15</font>)+<font color=Maroon>182</font>,(n*<font color=Maroon>15</font>)+<font color=Maroon>92</font>,WHITE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR /> <BR />&nbsp;<font color=Blue>else</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;setcolor(BLACK); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,BLACK); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rectangle((m*<font color=Maroon>15</font>)+<font color=Maroon>181</font>,(n*<font color=Maroon>15</font>)+<font color=Maroon>91</font>,(m*<font color=Maroon>15</font>)+<font color=Maroon>194</font>,(n*<font color=Maroon>15</font>)+<font color=Maroon>104</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;floodfill((m*<font color=Maroon>15</font>)+<font color=Maroon>182</font>,(n*<font color=Maroon>15</font>)+<font color=Maroon>92</font>,BLACK); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />} <BR /> <BR /> <BR /> <BR /><font color=Blue>void</font>&nbsp;frame() <BR />{&nbsp;&nbsp;setcolor(WHITE); <BR />&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,<font color=Maroon>8</font>); <BR /> <BR />settextstyle(<font color=Maroon>7</font>,<font color=Maroon>0</font>,<font color=Maroon>6</font>); <BR />outtextxy(<font color=Maroon>140</font>,<font color=Maroon>3</font>,<font color=Maroon>"&nbsp;TETTRIS&nbsp;"</font>); <BR />setcolor(WHITE); <BR />settextstyle(<font color=Maroon>2</font>,<font color=Maroon>0</font>,<font color=Maroon>7</font>); <BR />outtextxy(<font color=Maroon>400</font>,<font color=Maroon>440</font>,<font color=Maroon>"Press&nbsp;Esc&nbsp;To&nbsp;Exit"</font>); <BR />settextstyle(<font color=Maroon>2</font>,<font color=Maroon>0</font>,<font color=Maroon>5</font>); <BR />outtextxy(<font color=Maroon>5</font>,<font color=Maroon>285</font>,<font color=Maroon>"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PRESS&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"</font>); <BR />outtextxy(<font color=Maroon>5</font>,<font color=Maroon>300</font>,<font color=Maroon>"Space&nbsp;To&nbsp;Change&nbsp;Shape"</font>); <BR />outtextxy(<font color=Maroon>5</font>,<font color=Maroon>315</font>,<font color=Maroon>"Use&nbsp;Arrow&nbsp;Keys&nbsp;To&nbsp;Move"</font>); <BR /> <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;rectangle(<font color=Maroon>180</font>,<font color=Maroon>465</font>,<font color=Maroon>375</font>,<font color=Maroon>480</font>); <BR />&nbsp;&nbsp;&nbsp;floodfill(<font color=Maroon>181</font>,<font color=Maroon>466</font>,WHITE); <BR /> <BR />&nbsp;&nbsp;&nbsp;rectangle(<font color=Maroon>180</font>,<font color=Maroon>90</font>,<font color=Maroon>194</font>,<font color=Maroon>480</font>); <BR />&nbsp;&nbsp;&nbsp;floodfill(<font color=Maroon>181</font>,<font color=Maroon>95</font>,WHITE); <BR /> <BR />&nbsp;&nbsp;&nbsp;rectangle(<font color=Maroon>361</font>,<font color=Maroon>90</font>,<font color=Maroon>375</font>,<font color=Maroon>480</font>); <BR />&nbsp;&nbsp;&nbsp;floodfill(<font color=Maroon>362</font>,<font color=Maroon>95</font>,WHITE); <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;setcolor(WHITE); <BR />&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>7</font>,<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>400</font>,<font color=Maroon>200</font>,<font color=Maroon>"&nbsp;Next&nbsp;To&nbsp;Come&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;rectangle(<font color=Maroon>400</font>,<font color=Maroon>230</font>,<font color=Maroon>530</font>,<font color=Maroon>335</font>); <BR />&nbsp;&nbsp;&nbsp;floodfill(<font color=Maroon>401</font>,<font color=Maroon>231</font>,WHITE); <BR /> <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(m=<font color=Maroon>0</font>;m&lt;<font color=Maroon>26</font>;m++) <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(n=<font color=Maroon>0</font>;n&lt;<font color=Maroon>13</font>;n++) <BR />&nbsp;&nbsp;&nbsp;arr[m][n]=<font color=Maroon>0</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(m=<font color=Maroon>0</font>,n=<font color=Maroon>0</font>;n&lt;<font color=Maroon>26</font>;n++) <BR />&nbsp;&nbsp;&nbsp;arr[n][m]=<font color=Maroon>1</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(n=<font color=Maroon>12</font>,m=<font color=Maroon>0</font>;m&lt;<font color=Maroon>26</font>;m++) <BR />&nbsp;&nbsp;&nbsp;arr[m][n]=<font color=Maroon>1</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(m=<font color=Maroon>25</font>,n=<font color=Maroon>0</font>;n&lt;<font color=Maroon>13</font>;n++) <BR />&nbsp;&nbsp;&nbsp;arr[m][n]=<font color=Maroon>1</font>; <BR /> <BR />} <BR /><font color=Blue>void</font>&nbsp;again() <BR />{ <BR />&nbsp;&nbsp;&nbsp;cleardevice(); <BR />&nbsp;&nbsp;&nbsp;setcolor(WHITE); <BR />&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,BLACK); <BR />&nbsp;&nbsp;&nbsp;rectangle(<font color=Maroon>150</font>,<font color=Maroon>175</font>,<font color=Maroon>530</font>,<font color=Maroon>335</font>); <BR />&nbsp;&nbsp;&nbsp;floodfill(<font color=Maroon>159</font>,<font color=Maroon>179</font>,BLACK); <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;setcolor(WHITE); <BR />&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>7</font>,<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>175</font>,<font color=Maroon>200</font>,<font color=Maroon>"&nbsp;&nbsp;&nbsp;Enter&nbsp;Your&nbsp;Choice&nbsp;&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>175</font>,<font color=Maroon>220</font>,<font color=Maroon>"&nbsp;Press&nbsp;Y&nbsp;To&nbsp;Play&nbsp;Again&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>175</font>,<font color=Maroon>240</font>,<font color=Maroon>"&nbsp;Press&nbsp;Any&nbsp;Key&nbsp;To&nbsp;Exit&nbsp;"</font>); <BR /> <BR />&nbsp;play=getch(); <BR />&nbsp;<font color=Blue>if</font>(play==<font color=Maroon>y</font>)&nbsp;cleardevice(); <BR />&nbsp;<font color=Blue>else</font>&nbsp;exit(<font color=Maroon>0</font>); <BR /> <BR />&nbsp;} <BR /></div>
           ]]>
        </string>
          <string name="CProjectMindReaderGame" formatted="false"> 
        <![CDATA[  
           
           <div>The&nbsp;Mind&nbsp;Reader <BR /> <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;stdlib.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;time.h&gt; <BR /> <BR /><font color=Blue>void</font>&nbsp;fun(<font color=Blue>int</font>&nbsp;x,<font color=Blue>int</font>&nbsp;y,<font color=Blue>int</font>&nbsp;n,<font color=Blue>int</font>&nbsp;a) <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;textcolor(<font color=Maroon>13</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gotoxy(x,y); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cprintf(<font color=Maroon>"%d-&gt;%c"</font>,n,a); <BR />} <BR /><font color=Blue>void</font>&nbsp;box(<font color=Blue>int</font>&nbsp;c,<font color=Blue>int</font>&nbsp;r,<font color=Blue>int</font>&nbsp;s,<font color=Blue>int</font>&nbsp;y) <BR />{ <BR /><font color=Blue>int</font>&nbsp;i&nbsp;; <BR />textcolor(<font color=Maroon>3</font>); <BR />gotoxy(s,y); <BR />cprintf(<font color=Maroon>"%c"</font>,<font color=Maroon>218</font>); <BR /> <BR /><font color=Blue>for</font>(i=s+<font color=Maroon>1</font>;i&lt;c+<font color=Maroon>1</font>;i++) <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;gotoxy(i,y); <BR />&nbsp;&nbsp;&nbsp;cprintf(<font color=Maroon>"%c"</font>,<font color=Maroon>196</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;<font color=Blue>for</font>(i=s+<font color=Maroon>1</font>;i&lt;c+<font color=Maroon>1</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gotoxy(i,r); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cprintf(<font color=Maroon>"%c"</font>,<font color=Maroon>196</font>); <BR />&nbsp;&nbsp;&nbsp;} <BR />&nbsp;gotoxy(c,y); <BR />cprintf(<font color=Maroon>"%c"</font>,<font color=Maroon>191</font>); <BR /> <BR /><font color=Blue>for</font>(i=y+<font color=Maroon>1</font>;i&lt;r;i++) <BR />{ <BR />&nbsp;&nbsp;gotoxy(s,i); <BR />&nbsp;&nbsp;cprintf(<font color=Maroon>"%c"</font>,<font color=Maroon>179</font>); <BR /> <BR />} <BR /><font color=Blue>for</font>(i=y+<font color=Maroon>1</font>;i&lt;r;i++) <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;gotoxy(c,i); <BR />&nbsp;&nbsp;cprintf(<font color=Maroon>"%c"</font>,<font color=Maroon>179</font>); <BR />} <BR />gotoxy(s,i); <BR />cprintf(<font color=Maroon>"%c"</font>,<font color=Maroon>192</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gotoxy(c,i); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cprintf(<font color=Maroon>"%c"</font>,<font color=Maroon>217</font>); <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;help() <BR />{ <BR />box(<font color=Maroon>78</font>,<font color=Maroon>24</font>,<font color=Maroon>2</font>,<font color=Maroon>1</font>); <BR />box(<font color=Maroon>70</font>,<font color=Maroon>9</font>,<font color=Maroon>52</font>,<font color=Maroon>5</font>); <BR />box(<font color=Maroon>77</font>,<font color=Maroon>23</font>,<font color=Maroon>30</font>,<font color=Maroon>15</font>); <BR /> <BR />gotoxy(<font color=Maroon>50</font>,<font color=Maroon>15</font>); <BR />printf(<font color=Maroon>"Play&nbsp;Like&nbsp;This"</font>); <BR />gotoxy(<font color=Maroon>31</font>,<font color=Maroon>16</font>); <BR />printf(<font color=Maroon>"1.Choose&nbsp;a&nbsp;two&nbsp;digit&nbsp;number&nbsp;and&nbsp;add&nbsp;the&nbsp;digits"</font>); <BR />gotoxy(<font color=Maroon>31</font>,<font color=Maroon>17</font>); <BR />printf(<font color=Maroon>"2.Subtract&nbsp;the&nbsp;sum&nbsp;from&nbsp;original&nbsp;number"</font>); <BR />gotoxy(<font color=Maroon>31</font>,<font color=Maroon>18</font>); <BR />printf(<font color=Maroon>"3.See&nbsp;the&nbsp;symbol&nbsp;opposit&nbsp;to&nbsp;the&nbsp;number&nbsp;you&nbsp;got"</font>); <BR />gotoxy(<font color=Maroon>31</font>,<font color=Maroon>19</font>); <BR />printf(<font color=Maroon>"4.Press&nbsp;any&nbsp;key&nbsp;The&nbsp;MIND&nbsp;READER&nbsp;will&nbsp;"</font>); <BR />gotoxy(<font color=Maroon>31</font>,<font color=Maroon>20</font>); <BR />printf(<font color=Maroon>"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;display&nbsp;the&nbsp;symbol&nbsp;you&nbsp;got"</font>); <BR />gotoxy(<font color=Maroon>31</font>,<font color=Maroon>21</font>); <BR />printf(<font color=Maroon>"5.For&nbsp;Best&nbsp;Results&nbsp;Please&nbsp;dont&nbsp;Turn&nbsp;your&nbsp;"</font>); <BR />gotoxy(<font color=Maroon>31</font>,<font color=Maroon>22</font>); <BR />printf(<font color=Maroon>"&nbsp;&nbsp;&nbsp;&nbsp;Eyes&nbsp;from&nbsp;the&nbsp;screen"</font>); <BR /> <BR />} <BR /><font color=Blue>void</font>&nbsp;ran() <BR />{ <BR />&nbsp;time_t&nbsp;t; <BR /><font color=Blue>int</font>&nbsp;r,i; <BR /><font color=Blue>int</font>&nbsp;a[]={<font color=Maroon>1</font>,<font color=Maroon>2</font>,<font color=Maroon>3</font>,<font color=Maroon>4</font>,<font color=Maroon>5</font>,<font color=Maroon>6</font>,<font color=Maroon>14</font>,<font color=Maroon>15</font>,<font color=Maroon>16</font>,<font color=Maroon>17</font>,<font color=Maroon>18</font>,<font color=Maroon>19</font>,<font color=Maroon>20</font>,<font color=Maroon>21</font>,<font color=Maroon>22</font>,<font color=Maroon>23</font>,<font color=Maroon>24</font>,<font color=Maroon>25</font>,<font color=Maroon>27</font>,<font color=Maroon>29</font>, <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Maroon>30</font>,<font color=Maroon>33</font>,<font color=Maroon>34</font>,<font color=Maroon>35</font>,<font color=Maroon>36</font>,<font color=Maroon>37</font>,<font color=Maroon>38</font>,<font color=Maroon>40</font>,<font color=Maroon>41</font>,<font color=Maroon>42</font>,<font color=Maroon>43</font>,<font color=Maroon>60</font>,<font color=Maroon>62</font>,<font color=Maroon>61</font>,<font color=Maroon>63</font>,<font color=Maroon>64</font>,<font color=Maroon>123</font>,<font color=Maroon>124</font>, <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Maroon>125</font>,<font color=Maroon>126</font>,<font color=Maroon>127</font>,<font color=Maroon>128</font>,<font color=Maroon>154</font>,<font color=Maroon>155</font>,<font color=Maroon>156</font>,<font color=Maroon>171</font>,<font color=Maroon>172</font>,<font color=Maroon>174</font>,<font color=Maroon>175</font>,<font color=Maroon>229</font>,<font color=Maroon>234</font>,<font color=Maroon>235</font>, <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Maroon>236</font>,<font color=Maroon>237</font>,<font color=Maroon>238</font>,<font color=Maroon>239</font>,&nbsp;<font color=Maroon>240</font>,<font color=Maroon>242</font>,<font color=Maroon>243</font>,<font color=Maroon>244</font>,<font color=Maroon>245</font>,<font color=Maroon>246</font>,<font color=Maroon>247</font>,<font color=Maroon>251</font>,<font color=Maroon>254</font>}; <BR /> <BR />srand((<font color=Blue>unsigned</font>)&nbsp;time(&amp;t)); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r=rand()&nbsp;%&nbsp;<font color=Maroon>65</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;help(); <BR />textcolor(<font color=Maroon>10</font>); <BR />gotoxy(<font color=Maroon>50</font>,<font color=Maroon>2</font>); <BR />cprintf(<font color=Maroon>"MAIND&nbsp;READER"</font>); <BR /> <BR />&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>1</font>;i&lt;<font color=Maroon>23</font>;i++) <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;textcolor(<font color=Maroon>13</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gotoxy(<font color=Maroon>3</font>,i+<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cprintf(<font color=Maroon>"%d-&gt;%c&nbsp;"</font>,i,a[rand()%<font color=Maroon>65</font>]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gotoxy(<font color=Maroon>10</font>,i+<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cprintf(<font color=Maroon>"%d-&gt;%c&nbsp;"</font>,i+<font color=Maroon>22</font>,a[rand()%<font color=Maroon>65</font>]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gotoxy(<font color=Maroon>17</font>,i+<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cprintf(<font color=Maroon>"%d-&gt;%c&nbsp;"</font>,i+<font color=Maroon>44</font>,a[rand()%<font color=Maroon>65</font>]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gotoxy(<font color=Maroon>24</font>,i+<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cprintf(<font color=Maroon>"%d-&gt;%c&nbsp;"</font>,i+<font color=Maroon>66</font>,a[rand()%<font color=Maroon>65</font>]); <BR />&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fun(<font color=Maroon>3</font>,<font color=Maroon>10</font>,<font color=Maroon>9</font>,r); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fun(<font color=Maroon>3</font>,<font color=Maroon>19</font>,<font color=Maroon>18</font>,r); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fun(<font color=Maroon>10</font>,<font color=Maroon>6</font>,<font color=Maroon>27</font>,r); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fun(<font color=Maroon>10</font>,<font color=Maroon>15</font>,<font color=Maroon>36</font>,r); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fun(<font color=Maroon>17</font>,<font color=Maroon>2</font>,<font color=Maroon>45</font>,r); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fun(<font color=Maroon>17</font>,<font color=Maroon>11</font>,<font color=Maroon>54</font>,r); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fun(<font color=Maroon>17</font>,<font color=Maroon>20</font>,<font color=Maroon>63</font>,r); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fun(<font color=Maroon>24</font>,<font color=Maroon>7</font>,<font color=Maroon>72</font>,r); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fun(<font color=Maroon>24</font>,<font color=Maroon>16</font>,<font color=Maroon>81</font>,r); <BR /> <BR />&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>1</font>;i&lt;<font color=Maroon>12</font>;i++) <BR />&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gotoxy(<font color=Maroon>31</font>,i+<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cprintf(<font color=Maroon>"%d-&gt;%c&nbsp;"</font>,i+<font color=Maroon>88</font>,a[rand()%<font color=Maroon>65</font>]); <BR />&nbsp;} <BR />&nbsp;gotoxy(<font color=Maroon>55</font>,<font color=Maroon>7</font>); <BR />textcolor(<font color=Maroon>15</font>+BLINK); <BR />cprintf(<font color=Maroon>"Press&nbsp;Any&nbsp;Key"</font>); <BR />getch(); <BR />&nbsp;gotoxy(<font color=Maroon>55</font>,<font color=Maroon>7</font>); <BR />textcolor(BLACK); <BR />cprintf(<font color=Maroon>"Press&nbsp;Any&nbsp;Key"</font>); <BR />&nbsp;gotoxy(<font color=Maroon>61</font>,<font color=Maroon>7</font>); <BR />textcolor(<font color=Maroon>15</font>+BLINK); <BR />cprintf(<font color=Maroon>"%c"</font>,r); <BR />&nbsp;} <BR /> <BR /><font color=Blue>void</font>&nbsp;main() <BR />{ <BR /><font color=Blue>int</font>&nbsp;i; <BR />clrscr(); <BR />ran(); <BR />getch(); <BR />} <BR /></div>
           ]]>
        </string>
        
          <string name="CProjectTicTacToeGame" formatted="false"> 
        <![CDATA[  
           <div>Tic&nbsp;Tac&nbsp;Toe&nbsp;Game <BR /> <BR />#<font color=Blue>include</font>&lt;graphics.h&gt; <BR />#<font color=Blue>include</font>&lt;<font color=Blue>iostream</font>.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;conio.h&gt; <BR /><font color=Blue>void</font>&nbsp;main() <BR />{ <BR />start:&nbsp;<font color=Blue>int</font>&nbsp;a[<font color=Maroon>3</font>][<font color=Maroon>3</font>]={<font color=Maroon>5</font>,<font color=Maroon>6</font>,<font color=Maroon>7</font>,<font color=Maroon>8</font>,<font color=Maroon>9</font>,<font color=Maroon>10</font>,<font color=Maroon>11</font>,<font color=Maroon>12</font>,<font color=Maroon>13</font>},i,j,k,x,y,t,cn=<font color=Maroon>0</font>,co=<font color=Maroon>0</font>; <BR /><font color=Blue>char</font>&nbsp;c; <BR /><font color=Blue>static</font>&nbsp;<font color=Blue>int</font>&nbsp;nod=<font color=Maroon>0</font>,nn=<font color=Maroon>0</font>,sc[<font color=Maroon>2</font>]={<font color=Maroon>0</font>,<font color=Maroon>0</font>}; <BR />nod++; <BR />clrscr(); <BR /> <BR /><font color=Blue>int</font>&nbsp;driver=DETECT,mode; <BR />initgraph(&amp;driver,&amp;mode,<font color=Maroon>"c:\tc\bgi"</font>); <BR />setbkcolor(RED); <BR /> <BR />line(<font color=Maroon>100</font>,<font color=Maroon>200</font>,<font color=Maroon>400</font>,<font color=Maroon>200</font>); <BR />line(<font color=Maroon>100</font>,<font color=Maroon>300</font>,<font color=Maroon>400</font>,<font color=Maroon>300</font>); <BR />line(<font color=Maroon>200</font>,<font color=Maroon>100</font>,<font color=Maroon>200</font>,<font color=Maroon>400</font>); <BR />line(<font color=Maroon>300</font>,<font color=Maroon>100</font>,<font color=Maroon>300</font>,<font color=Maroon>400</font>); <BR /> <BR />gotoxy(<font color=Maroon>20</font>,<font color=Maroon>2</font>); <BR /><font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"TIC&nbsp;TAC&nbsp;TOE"</font>; <BR /> <BR />gotoxy(<font color=Maroon>20</font>,<font color=Maroon>3</font>); <BR /><font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"Unregistered&nbsp;Vesion&nbsp;1.0"</font>; <BR /> <BR />gotoxy(<font color=Maroon>10</font>,<font color=Maroon>5</font>);<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"&nbsp;BOX&nbsp;NO&nbsp;"</font>; <BR />gotoxy(<font color=Maroon>15</font>,<font color=Maroon>7</font>);<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"0"</font>; <BR />gotoxy(<font color=Maroon>30</font>,<font color=Maroon>7</font>);<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"1"</font>; <BR />gotoxy(<font color=Maroon>45</font>,<font color=Maroon>7</font>);<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"2"</font>; <BR />gotoxy(<font color=Maroon>15</font>,<font color=Maroon>14</font>);<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"3"</font>; <BR />gotoxy(<font color=Maroon>30</font>,<font color=Maroon>14</font>);<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"4"</font>; <BR />gotoxy(<font color=Maroon>45</font>,<font color=Maroon>14</font>);<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"5"</font>; <BR />gotoxy(<font color=Maroon>15</font>,<font color=Maroon>21</font>);<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"6"</font>; <BR />gotoxy(<font color=Maroon>30</font>,<font color=Maroon>21</font>);<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"7"</font>; <BR />gotoxy(<font color=Maroon>45</font>,<font color=Maroon>21</font>);<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"8"</font>; <BR /> <BR />gotoxy(<font color=Maroon>55</font>,<font color=Maroon>22</font>);<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"RESULT"</font>; <BR /> <BR />gotoxy(<font color=Maroon>55</font>,<font color=Maroon>23</font>);<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"*************************"</font>; <BR />gotoxy(<font color=Maroon>55</font>,<font color=Maroon>15</font>);<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"P1-"</font>&lt;&lt;sc[<font color=Maroon>0</font>]; <BR />gotoxy(<font color=Maroon>55</font>,<font color=Maroon>16</font>);<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"P2-"</font>&lt;&lt;sc[<font color=Maroon>1</font>]; <BR /> <BR /><font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=<font color=Maroon>2</font>;i++) <BR />{ <BR /><font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;=<font color=Maroon>2</font>;j++) <BR />{&nbsp;re:gotoxy(<font color=Maroon>65</font>,<font color=Maroon>4</font>); <BR />k=((i+j)%<font color=Maroon>2</font>+<font color=Maroon>1</font>); <BR /><font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"Enter&nbsp;player"</font>&lt;&lt;k; <BR />gotoxy(<font color=Maroon>60</font>,<font color=Maroon>5</font>); <BR /> <BR /><font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"&nbsp;Box&nbsp;no&nbsp;from&nbsp;0&nbsp;to&nbsp;8&nbsp;&nbsp;&nbsp;"</font>; <BR />gotoxy(<font color=Maroon>58</font>,<font color=Maroon>6</font>);<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"[&nbsp;&nbsp;&nbsp;]"</font>; <BR />gotoxy(<font color=Maroon>60</font>,<font color=Maroon>6</font>); <BR /> <BR />t=getch(); <BR /> <BR />t=t-<font color=Maroon>48</font>; <BR /><font color=Blue>if</font>(t==<font color=Maroon>0</font>){x=<font color=Maroon>0</font>;y=<font color=Maroon>0</font>;<font color=Blue>goto</font>&nbsp;play;} <BR /> <BR /><font color=Blue>if</font>(t==<font color=Maroon>1</font>){x=<font color=Maroon>1</font>;y=<font color=Maroon>0</font>;<font color=Blue>goto</font>&nbsp;play;} <BR /> <BR /><font color=Blue>if</font>(t==<font color=Maroon>2</font>){x=<font color=Maroon>2</font>;y=<font color=Maroon>0</font>;<font color=Blue>goto</font>&nbsp;play;} <BR /> <BR /><font color=Blue>if</font>(t==<font color=Maroon>3</font>){x=<font color=Maroon>0</font>;y=<font color=Maroon>1</font>;<font color=Blue>goto</font>&nbsp;play;} <BR /> <BR /><font color=Blue>if</font>(t==<font color=Maroon>4</font>){x=<font color=Maroon>1</font>;y=<font color=Maroon>1</font>;<font color=Blue>goto</font>&nbsp;play;} <BR /> <BR /><font color=Blue>if</font>(t==<font color=Maroon>5</font>){x=<font color=Maroon>2</font>;y=<font color=Maroon>1</font>;<font color=Blue>goto</font>&nbsp;play;} <BR /> <BR /><font color=Blue>if</font>(t==<font color=Maroon>6</font>){x=<font color=Maroon>0</font>;y=<font color=Maroon>2</font>;<font color=Blue>goto</font>&nbsp;play;} <BR /> <BR /><font color=Blue>if</font>(t==<font color=Maroon>7</font>){x=<font color=Maroon>1</font>;y=<font color=Maroon>2</font>;<font color=Blue>goto</font>&nbsp;play;} <BR /> <BR /><font color=Blue>if</font>(t==<font color=Maroon>8</font>){x=<font color=Maroon>2</font>;y=<font color=Maroon>2</font>;<font color=Blue>goto</font>&nbsp;play;} <BR /> <BR /><font color=Blue>else</font> <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>goto</font>&nbsp;re&nbsp;; <BR />} <BR /> <BR />play: <BR /><font color=Blue>if</font>((a[x][y]==<font color=Maroon>1</font>)||(a[x][y]==<font color=Maroon>2</font>)) <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>goto</font>&nbsp;re; <BR />} <BR /> <BR /><font color=Blue>if</font>((a[x][y]!=<font color=Maroon>1</font>)&amp;&amp;(a[x][y]!=<font color=Maroon>2</font>)) <BR />{&nbsp; <BR /><font color=Blue>if</font>(k==<font color=Maroon>1</font>) <BR />{ <BR />circle(<font color=Maroon>100</font>*x+<font color=Maroon>100</font>+<font color=Maroon>50</font>,<font color=Maroon>100</font>*y+<font color=Maroon>100</font>+<font color=Maroon>50</font>,<font color=Maroon>50</font>); <BR />a[x][y]=k;co++;}&nbsp;<font color=Blue>if</font>(k==<font color=Maroon>2</font>) <BR />{ <BR />line(x*<font color=Maroon>100</font>+<font color=Maroon>100</font>,y*<font color=Maroon>100</font>+<font color=Maroon>100</font>,x*<font color=Maroon>100</font>+<font color=Maroon>200</font>,y*<font color=Maroon>100</font>+<font color=Maroon>200</font>); <BR />line(x*<font color=Maroon>100</font>+<font color=Maroon>100</font>,y*<font color=Maroon>100</font>+<font color=Maroon>200</font>,x*<font color=Maroon>100</font>+<font color=Maroon>200</font>,y*<font color=Maroon>100</font>+<font color=Maroon>100</font>); <BR />a[x][y]=k;co++;} <BR />} <BR /> <BR /> <BR />gotoxy(<font color=Maroon>60</font>,<font color=Maroon>23</font>); <BR /> <BR /><font color=Blue>if</font>((a[<font color=Maroon>0</font>][<font color=Maroon>0</font>]==a[<font color=Maroon>1</font>][<font color=Maroon>0</font>])&amp;&amp;(a[<font color=Maroon>1</font>][<font color=Maroon>0</font>]==a[<font color=Maroon>2</font>][<font color=Maroon>0</font>])) <BR />{<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"Player&nbsp;"</font>&lt;&lt;k&lt;&lt;<font color=Maroon>"&nbsp;wins"</font>;cn=<font color=Maroon>1</font>;sc[k-<font color=Maroon>1</font>]++;} <BR /> <BR /><font color=Blue>if</font>((a[<font color=Maroon>0</font>][<font color=Maroon>0</font>]==a[<font color=Maroon>0</font>][<font color=Maroon>1</font>])&amp;&amp;(a[<font color=Maroon>0</font>][<font color=Maroon>1</font>]==a[<font color=Maroon>0</font>][<font color=Maroon>2</font>])) <BR />{<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"Player&nbsp;"</font>&lt;&lt;k&lt;&lt;<font color=Maroon>"&nbsp;wins"</font>;cn=<font color=Maroon>1</font>;sc[k-<font color=Maroon>1</font>]++;} <BR /> <BR /><font color=Blue>if</font>((a[<font color=Maroon>0</font>][<font color=Maroon>0</font>]==a[<font color=Maroon>1</font>][<font color=Maroon>1</font>])&amp;&amp;(a[<font color=Maroon>1</font>][<font color=Maroon>1</font>]==a[<font color=Maroon>2</font>][<font color=Maroon>2</font>])) <BR />{<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"Player&nbsp;"</font>&lt;&lt;k&lt;&lt;<font color=Maroon>"&nbsp;wins"</font>;cn=<font color=Maroon>1</font>;sc[k-<font color=Maroon>1</font>]++;} <BR /> <BR /><font color=Blue>if</font>((a[<font color=Maroon>1</font>][<font color=Maroon>0</font>]==a[<font color=Maroon>1</font>][<font color=Maroon>1</font>])&amp;&amp;(a[<font color=Maroon>1</font>][<font color=Maroon>1</font>]==a[<font color=Maroon>1</font>][<font color=Maroon>2</font>])) <BR />{<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"Player&nbsp;"</font>&lt;&lt;k&lt;&lt;<font color=Maroon>"&nbsp;wins"</font>;cn=<font color=Maroon>1</font>;sc[k-<font color=Maroon>1</font>]++;} <BR /> <BR /><font color=Blue>if</font>((a[<font color=Maroon>2</font>][<font color=Maroon>0</font>]==a[<font color=Maroon>2</font>][<font color=Maroon>1</font>])&amp;&amp;(a[<font color=Maroon>2</font>][<font color=Maroon>1</font>]==a[<font color=Maroon>2</font>][<font color=Maroon>2</font>])) <BR />{<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"Player&nbsp;"</font>&lt;&lt;k&lt;&lt;<font color=Maroon>"&nbsp;wins"</font>;cn=<font color=Maroon>1</font>;sc[k-<font color=Maroon>1</font>]++;} <BR /> <BR /><font color=Blue>if</font>((a[<font color=Maroon>2</font>][<font color=Maroon>0</font>]==a[<font color=Maroon>1</font>][<font color=Maroon>1</font>])&amp;&amp;(a[<font color=Maroon>1</font>][<font color=Maroon>1</font>]==a[<font color=Maroon>0</font>][<font color=Maroon>2</font>])) <BR />{<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"Player&nbsp;"</font>&lt;&lt;k&lt;&lt;<font color=Maroon>"&nbsp;wins"</font>;cn=<font color=Maroon>1</font>;sc[k-<font color=Maroon>1</font>]++;} <BR /> <BR /><font color=Blue>if</font>((a[<font color=Maroon>0</font>][<font color=Maroon>2</font>]==a[<font color=Maroon>1</font>][<font color=Maroon>2</font>])&amp;&amp;(a[<font color=Maroon>1</font>][<font color=Maroon>2</font>]==a[<font color=Maroon>2</font>][<font color=Maroon>2</font>])) <BR />{<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"Player&nbsp;"</font>&lt;&lt;k&lt;&lt;<font color=Maroon>"&nbsp;wins"</font>;cn=<font color=Maroon>1</font>;sc[k-<font color=Maroon>1</font>]++;} <BR /> <BR /><font color=Blue>if</font>((a[<font color=Maroon>0</font>][<font color=Maroon>1</font>]==a[<font color=Maroon>1</font>][<font color=Maroon>1</font>])&amp;&amp;(a[<font color=Maroon>1</font>][<font color=Maroon>1</font>]==a[<font color=Maroon>2</font>][<font color=Maroon>1</font>])) <BR />{<font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"Player&nbsp;"</font>&lt;&lt;k&lt;&lt;<font color=Maroon>"&nbsp;wins"</font>;cn=<font color=Maroon>1</font>;sc[k-<font color=Maroon>1</font>]++;} <BR /> <BR /><font color=Blue>if</font>(cn==<font color=Maroon>1</font>) <BR />{<font color=Blue>goto</font>&nbsp;que;} <BR /> <BR /><font color=Blue>if</font>(co==<font color=Maroon>9</font>) <BR />{gotoxy(<font color=Maroon>62</font>,<font color=Maroon>23</font>); <BR /><font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"DRAW"</font>; <BR />nn++; <BR /><font color=Blue>goto</font>&nbsp;que;} <BR /> <BR />} <BR />} <BR /> <BR /> <BR />que: <BR />gotoxy(<font color=Maroon>60</font>,<font color=Maroon>24</font>); <BR /><font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"Play&nbsp;again&nbsp;y/n"</font>; <BR /> <BR />c=getch(); <BR /> <BR /><font color=Blue>if</font>((c==<font color=Maroon>y</font>)||(c==<font color=Maroon>Y</font>)) <BR />{&nbsp;<font color=Blue>goto</font>&nbsp;start;} <BR /> <BR /><font color=Blue>else</font>&nbsp;<font color=Blue>if</font>((c==<font color=Maroon>n</font>)||(c==<font color=Maroon>N</font>)) <BR />{<font color=Blue>goto</font>&nbsp;end;} <BR /> <BR /><font color=Blue>else</font>&nbsp;<font color=Blue>goto</font>&nbsp;que; <BR /> <BR />end: <BR />closegraph(); <BR /> <BR /><font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"Final&nbsp;score&nbsp;is&nbsp;"</font>&lt;&lt;sc[k-<font color=Maroon>1</font>]&lt;&lt;<font color=Maroon>"-"</font>&lt;&lt;nod-nn-sc[k-<font color=Maroon>1</font>]; <BR /> <BR />gotoxy(<font color=Maroon>20</font>,<font color=Maroon>10</font>); <BR /> <BR /><font color=Blue>cout</font>&lt;&lt;<font color=Maroon>"Thanks&nbsp;for&nbsp;playing&nbsp;this&nbsp;game"</font>; <BR /> <BR />getch(); <BR />} <BR /></div>
           
           ]]>
        </string>
           
          <string name="CProjectMagicNumberGame" formatted="false"> 
        <![CDATA[   
           
       <div>Magic&nbsp;Number&nbsp;Game&nbsp;-&nbsp;A&nbsp;Program&nbsp;in&nbsp;C <BR /> <BR />#<font color=Blue>include</font>&nbsp;&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;graphics.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;dos.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;<font color=Blue>string</font>.h&gt; <BR /> <BR /><font color=Blue>void</font>&nbsp;InitGraphicMode(); <BR /><font color=Blue>void</font>&nbsp;Welcome(); <BR /><font color=Blue>void</font>&nbsp;StartGame(); <BR /><font color=Blue>void</font>&nbsp;DisplayName(<font color=Blue>int</font>&nbsp;); <BR /><font color=Blue>void</font>&nbsp;Clear(); <BR /> <BR /><font color=Blue>void</font>&nbsp;main() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;InitGraphicMode(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Welcome(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;StartGame(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;closegraph(); <BR />} <BR /><font color=Blue>void</font>&nbsp;InitGraphicMode() <BR />{ <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;gdriver&nbsp;=&nbsp;DETECT,&nbsp;gmode,&nbsp;errorcode; <BR />&nbsp;&nbsp;&nbsp;<font color=Green>//In&nbsp;next&nbsp;line&nbsp;the&nbsp;path&nbsp;of&nbsp;bgi&nbsp;files&nbsp;&nbsp;is&nbsp;taken</font> <BR />&nbsp;&nbsp;&nbsp;initgraph(&amp;gdriver,&nbsp;&amp;gmode,&nbsp;<font color=Maroon>"c:\tc\bgi"</font>); <BR />&nbsp;&nbsp;&nbsp;errorcode&nbsp;=&nbsp;graphresult(); <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>&nbsp;(errorcode&nbsp;!=&nbsp;grOk)&nbsp;&nbsp;<font color=Green>/*&nbsp;an&nbsp;error&nbsp;occurred&nbsp;*/</font> <BR />&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf("Graphics&nbsp;error:&nbsp;%s <BR />",&nbsp;grapherrormsg(errorcode)); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Press&nbsp;any&nbsp;key&nbsp;to&nbsp;halt:"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(<font color=Maroon>1</font>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>/*&nbsp;return&nbsp;with&nbsp;error&nbsp;code&nbsp;*/</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />} <BR /><font color=Green>//to&nbsp;print&nbsp;the&nbsp;welcome&nbsp;screen</font> <BR /><font color=Blue>void</font>&nbsp;Welcome() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;pattern[<font color=Maroon>8</font>]&nbsp;=&nbsp;{<font color=Maroon>0x00</font>,&nbsp;<font color=Maroon>0x70</font>,&nbsp;<font color=Maroon>0x20</font>,&nbsp;<font color=Maroon>0x27</font>,&nbsp;<font color=Maroon>0x00</font>,&nbsp;<font color=Maroon>0x27</font>,&nbsp;<font color=Maroon>0x20</font>,&nbsp;<font color=Maroon>0x70</font>}; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillpattern(pattern,&nbsp;BLUE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=<font color=Maroon>320</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>320</font>-i,<font color=Maroon>240</font>-i*<font color=Maroon>0</font><font color=Maroon>.75</font>,<font color=Maroon>320</font>+i,<font color=Maroon>240</font>+i*<font color=Maroon>0</font><font color=Maroon>.75</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay&nbsp;(&nbsp;<font color=Maroon>1</font>&nbsp;)&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextjustify(<font color=Maroon>1</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DisplayName(<font color=Maroon>100</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>5</font>,<font color=Maroon>0</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;music(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>3</font>); <BR />} <BR /><font color=Green>//to&nbsp;Start&nbsp;the&nbsp;game</font> <BR /><font color=Blue>void</font>&nbsp;StartGame() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>void</font>&nbsp;FirstScreen(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font> <BR />ShowList1(),ShowList2(),ShowList3(),ShowList4(),ShowList5(),ShowList6(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;FindNumber(<font color=Blue>long</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>long</font>&nbsp;check(<font color=Blue>char</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;number,i; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>long</font>&nbsp;num=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;val; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;ch; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;numstr[<font color=Maroon>10</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clear(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;music(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;FirstScreen(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clear(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;music(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val=ShowList1(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num=check(val); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clear(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;music(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val=ShowList2(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num=num*<font color=Maroon>10</font>+check(val); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clear(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;music(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val=ShowList3(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num=num*<font color=Maroon>10</font>+check(val); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clear(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;music(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val=ShowList4(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num=num*<font color=Maroon>10</font>+check(val); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clear(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;music(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val=ShowList5(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num=num*<font color=Maroon>10</font>+check(val); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clear(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;music(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val=ShowList6(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num=num*<font color=Maroon>10</font>+check(val); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;number=FindNumber(num); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itoa(number,numstr,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clear(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;music(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>5</font>,<font color=Maroon>0</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextjustify(<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>&nbsp;(number) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>100</font>,<font color=Maroon>150</font>,<font color=Maroon>"So&nbsp;the&nbsp;number&nbsp;you&nbsp;thought&nbsp;was..."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>14</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>4</font>,<font color=Maroon>0</font>,<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextjustify(<font color=Maroon>1</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>320</font>,<font color=Maroon>250</font>,numstr); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>6</font>,<font color=Maroon>0</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>320</font>,<font color=Maroon>350</font>,<font color=Maroon>"Cant&nbsp;believe&nbsp;it&nbsp;........."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>14</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>100</font>,<font color=Maroon>180</font>,<font color=Maroon>"Your&nbsp;number&nbsp;is&nbsp;out&nbsp;of&nbsp;range&nbsp;..."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>200</font>,<font color=Maroon>260</font>,<font color=Maroon>"OR...."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>100</font>,<font color=Maroon>340</font>,<font color=Maroon>"You&nbsp;did&nbsp;not&nbsp;answer&nbsp;properly&nbsp;!!!&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextjustify(<font color=Maroon>1</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>6</font>,<font color=Maroon>0</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(CYAN); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>320</font>,<font color=Maroon>400</font>,<font color=Maroon>"Wish&nbsp;to&nbsp;Try&nbsp;again&nbsp;(y/n)&nbsp;!!!!"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch=getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>&nbsp;(ch==<font color=Maroon>y</font>||ch==<font color=Maroon>Y</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>510</font>,<font color=Maroon>400</font>,<font color=Maroon>"Y"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;music(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>510</font>,<font color=Maroon>400</font>,<font color=Maroon>"N"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;music(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;DisplayName(<font color=Blue>int</font>&nbsp;ycor) <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;*name[]&nbsp;=&nbsp;{<font color=Maroon>"M"</font>,<font color=Maroon>"A"</font>,<font color=Maroon>"G"</font>,<font color=Maroon>"I"</font>,<font color=Maroon>"C"</font>,<font color=Maroon>"&nbsp;"</font>,<font color=Maroon>"N"</font>,<font color=Maroon>"U"</font>,<font color=Maroon>"M"</font>,<font color=Maroon>"B"</font>,<font color=Maroon>"E"</font>,<font color=Maroon>"R"</font>}; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextjustify(<font color=Maroon>1</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>4</font>,<font color=Maroon>0</font>,<font color=Maroon>7</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>12</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(i+<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>40</font>+i*<font color=Maroon>45</font>,ycor,&nbsp;name[i]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />} <BR /><font color=Blue>void</font>&nbsp;Clear() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>8</font>,BLUE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>0</font>,<font color=Maroon>0</font>,<font color=Maroon>640</font>,<font color=Maroon>480</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;DisplayName(<font color=Maroon>30</font>); <BR />} <BR /><font color=Green>//Displaying&nbsp;the&nbsp;first&nbsp;Game&nbsp;Screen</font> <BR /><font color=Blue>void</font>&nbsp;FirstScreen() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextjustify(<font color=Maroon>1</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>1</font>,<font color=Maroon>0</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>320</font>,<font color=Maroon>150</font>,<font color=Maroon>"&nbsp;Think&nbsp;of&nbsp;any&nbsp;number&nbsp;in&nbsp;the&nbsp;range&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>14</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>4</font>,<font color=Maroon>0</font>,<font color=Maroon>8</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>320</font>,<font color=Maroon>250</font>,<font color=Maroon>"1&nbsp;-&nbsp;55"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>5</font>,<font color=Maroon>0</font>,<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(CYAN); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>320</font>,<font color=Maroon>350</font>,<font color=Maroon>"Press&nbsp;any&nbsp;key&nbsp;to&nbsp;continue&nbsp;......"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>3</font>,<font color=Maroon>0</font>,<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>320</font>,<font color=Maroon>430</font>,<font color=Maroon>"And&nbsp;Please...&nbsp;Be&nbsp;Honest&nbsp;!!!!!"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />} <BR /><font color=Green>//Displaying&nbsp;the&nbsp;six&nbsp;lists</font> <BR /><font color=Blue>char</font>&nbsp;ShowList1() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;ch; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>14</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>3</font>,<font color=Maroon>0</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextjustify(<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>120</font>,<font color=Maroon>"1,&nbsp;&nbsp;3,&nbsp;4,&nbsp;7,&nbsp;8,&nbsp;11,&nbsp;12"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>180</font>,<font color=Maroon>"14,&nbsp;16,&nbsp;17,&nbsp;18,&nbsp;19,&nbsp;20"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>240</font>,<font color=Maroon>"24,&nbsp;25,&nbsp;28,&nbsp;30,&nbsp;31,&nbsp;33"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>300</font>,<font color=Maroon>"35,&nbsp;37,&nbsp;40,&nbsp;42,&nbsp;44,&nbsp;46"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>360</font>,<font color=Maroon>"47,&nbsp;48,&nbsp;50,&nbsp;52,&nbsp;54,&nbsp;55"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>5</font>,<font color=Maroon>0</font>,<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>30</font>,<font color=Maroon>420</font>,<font color=Maroon>"Does&nbsp;Your&nbsp;number&nbsp;appear&nbsp;here&nbsp;?&nbsp;(y/n)..."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch=getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fflush(stdin); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>&nbsp;(ch==<font color=Maroon>y</font>||ch==<font color=Maroon>Y</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>500</font>,<font color=Maroon>420</font>,<font color=Maroon>"Y"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>500</font>,<font color=Maroon>420</font>,<font color=Maroon>"N"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>(ch); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /><font color=Blue>char</font>&nbsp;ShowList2() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;ch; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>14</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>3</font>,<font color=Maroon>0</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextjustify(<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>120</font>,<font color=Maroon>"1,&nbsp;3,&nbsp;6,&nbsp;8,&nbsp;10,&nbsp;11,&nbsp;12"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>180</font>,<font color=Maroon>"15,&nbsp;17,&nbsp;18,&nbsp;19,&nbsp;22,&nbsp;23"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>240</font>,<font color=Maroon>"26,&nbsp;29,&nbsp;31,&nbsp;32,&nbsp;33,&nbsp;34"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>300</font>,<font color=Maroon>"36,&nbsp;37,&nbsp;38,&nbsp;41,&nbsp;44,&nbsp;45"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>360</font>,<font color=Maroon>"47,&nbsp;50,&nbsp;51,&nbsp;53,&nbsp;54,&nbsp;55"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>5</font>,<font color=Maroon>0</font>,<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>30</font>,<font color=Maroon>420</font>,<font color=Maroon>"How&nbsp;about&nbsp;here&nbsp;?&nbsp;(y/n)..."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch=getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fflush(stdin); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>&nbsp;(ch==<font color=Maroon>y</font>||ch==<font color=Maroon>Y</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>500</font>,<font color=Maroon>420</font>,<font color=Maroon>"Y"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>500</font>,<font color=Maroon>420</font>,<font color=Maroon>"N"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>(ch); <BR />} <BR /> <BR /><font color=Blue>char</font>&nbsp;ShowList3() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;ch; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>14</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>3</font>,<font color=Maroon>0</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextjustify(<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>120</font>,<font color=Maroon>"1,&nbsp;&nbsp;2,&nbsp;&nbsp;5,&nbsp;&nbsp;6,&nbsp;&nbsp;7,&nbsp;&nbsp;10"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>180</font>,<font color=Maroon>"11,&nbsp;13,&nbsp;15,&nbsp;16,&nbsp;17,&nbsp;19"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>240</font>,<font color=Maroon>"21,&nbsp;22,&nbsp;24,&nbsp;26,&nbsp;27,&nbsp;28"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>300</font>,<font color=Maroon>"32,&nbsp;35,&nbsp;38,&nbsp;40,&nbsp;44,&nbsp;46"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>360</font>,<font color=Maroon>"47,&nbsp;48,&nbsp;49,&nbsp;53,&nbsp;54,&nbsp;55"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>5</font>,<font color=Maroon>0</font>,<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>30</font>,<font color=Maroon>420</font>,<font color=Maroon>"Now&nbsp;here&nbsp;?&nbsp;(y/n)..."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch=getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>&nbsp;(ch==<font color=Maroon>y</font>||ch==<font color=Maroon>Y</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>500</font>,<font color=Maroon>420</font>,<font color=Maroon>"Y"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>500</font>,<font color=Maroon>420</font>,<font color=Maroon>"N"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fflush(stdin); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>(ch); <BR />} <BR /><font color=Blue>char</font>&nbsp;ShowList4() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;ch; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>14</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>3</font>,<font color=Maroon>0</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextjustify(<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>120</font>,<font color=Maroon>"1,&nbsp;2,&nbsp;5,&nbsp;9,&nbsp;13,&nbsp;17,&nbsp;18"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>180</font>,<font color=Maroon>"20,&nbsp;22,&nbsp;25,&nbsp;26,&nbsp;28,&nbsp;30"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>240</font>,<font color=Maroon>"31,&nbsp;32,&nbsp;33,&nbsp;35,&nbsp;36,&nbsp;37"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>300</font>,<font color=Maroon>"38,&nbsp;39,&nbsp;40,&nbsp;41,&nbsp;42,&nbsp;43"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>360</font>,<font color=Maroon>"45,&nbsp;46,&nbsp;49,&nbsp;51,&nbsp;54,&nbsp;55"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>5</font>,<font color=Maroon>0</font>,<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>30</font>,<font color=Maroon>420</font>,<font color=Maroon>"And&nbsp;here&nbsp;?&nbsp;(y/n)..."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch=getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fflush(stdin); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>&nbsp;(ch==<font color=Maroon>y</font>||ch==<font color=Maroon>Y</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>500</font>,<font color=Maroon>420</font>,<font color=Maroon>"Y"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>500</font>,<font color=Maroon>420</font>,<font color=Maroon>"N"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>(ch); <BR />} <BR /><font color=Blue>char</font>&nbsp;ShowList5() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;ch; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>14</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>3</font>,<font color=Maroon>0</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextjustify(<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>120</font>,<font color=Maroon>"&nbsp;&nbsp;4,&nbsp;&nbsp;&nbsp;5,&nbsp;&nbsp;&nbsp;8,&nbsp;&nbsp;&nbsp;9,&nbsp;&nbsp;10"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>180</font>,<font color=Maroon>"11,&nbsp;12,&nbsp;13,&nbsp;14,&nbsp;15,&nbsp;16"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>240</font>,<font color=Maroon>"19,&nbsp;21,&nbsp;24,&nbsp;27,&nbsp;29,&nbsp;30"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>300</font>,<font color=Maroon>"32,&nbsp;33,&nbsp;34,&nbsp;37,&nbsp;38,&nbsp;40"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>360</font>,<font color=Maroon>"42,&nbsp;45,&nbsp;46,&nbsp;51,&nbsp;54,&nbsp;55"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>5</font>,<font color=Maroon>0</font>,<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>30</font>,<font color=Maroon>420</font>,<font color=Maroon>"And&nbsp;here&nbsp;?&nbsp;(y/n)..."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fflush(stdin); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch=getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>&nbsp;(ch==<font color=Maroon>y</font>||ch==<font color=Maroon>Y</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>500</font>,<font color=Maroon>420</font>,<font color=Maroon>"Y"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>500</font>,<font color=Maroon>420</font>,<font color=Maroon>"N"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>(ch); <BR />} <BR /><font color=Blue>char</font>&nbsp;ShowList6() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;ch; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>14</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>3</font>,<font color=Maroon>0</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextjustify(<font color=Maroon>0</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>120</font>,<font color=Maroon>"&nbsp;2,&nbsp;&nbsp;&nbsp;3,&nbsp;&nbsp;&nbsp;&nbsp;6,&nbsp;&nbsp;&nbsp;7,&nbsp;&nbsp;9"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>180</font>,<font color=Maroon>"12,&nbsp;13,&nbsp;14,&nbsp;15,&nbsp;17,&nbsp;19"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>240</font>,<font color=Maroon>"23,&nbsp;24,&nbsp;25,&nbsp;26,&nbsp;27,&nbsp;31"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>300</font>,<font color=Maroon>"34,&nbsp;35,&nbsp;37,&nbsp;38,&nbsp;41,&nbsp;42"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>70</font>,<font color=Maroon>360</font>,<font color=Maroon>"43,&nbsp;46,&nbsp;47,&nbsp;51,&nbsp;52,&nbsp;55"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>5</font>,<font color=Maroon>0</font>,<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>30</font>,<font color=Maroon>420</font>,<font color=Maroon>"Finally&nbsp;here&nbsp;?&nbsp;(y/n)..."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch=getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fflush(stdin); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>&nbsp;(ch==<font color=Maroon>y</font>||ch==<font color=Maroon>Y</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>500</font>,<font color=Maroon>420</font>,<font color=Maroon>"Y"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>500</font>,<font color=Maroon>420</font>,<font color=Maroon>"N"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>(ch); <BR />} <BR /><font color=Blue>int</font>&nbsp;FindNumber(<font color=Blue>long</font>&nbsp;num) <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>switch</font>(num) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>111100</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1101</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>110001</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;(<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>100010</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;(<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1110</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;(<font color=Maroon>5</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>11001</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;(<font color=Maroon>6</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>101001</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;(<font color=Maroon>7</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>110010</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;(<font color=Maroon>8</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>111</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;(<font color=Maroon>9</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>11010</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>111010</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>11</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>110011</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>12</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1111</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>13</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>100011</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>14</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>11011</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>101010</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>16</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>111101</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>17</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>110100</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>18</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>111011</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>19</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>100100</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>20</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1010</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>21</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>11100</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>22</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>10001</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>23</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>101011</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>24</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>100101</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>25</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>11101</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>26</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1011</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>27</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>101100</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>28</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>10010</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>29</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>100110</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>30</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>110101</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>31</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>11110</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>32</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>110110</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>33</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>10011</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>34</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>101101</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>35</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>10100</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>36</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>110111</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>37</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>11111</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>38</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>100</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>39</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>101110</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>40</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>10101</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>41</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>100111</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>42</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>101</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>43</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>111000</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>44</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>10110</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>45</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>101111</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>46</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>111001</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>47</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>101000</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>48</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1100</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>49</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>110000</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>50</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>10111</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>51</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>100001</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>52</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>11000</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>53</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>111110</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>54</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>111111</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>55</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>default</font>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;:&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />} <BR /> <BR /><font color=Blue>long</font>&nbsp;check(<font color=Blue>char</font>&nbsp;ch) <BR />&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>&nbsp;(ch==<font color=Maroon>y</font>||ch==<font color=Maroon>Y</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;} <BR /> <BR />music() <BR />{ <BR /><font color=Blue>int</font>&nbsp;i&nbsp;&nbsp;; <BR /><font color=Blue>float</font>&nbsp;octave[<font color=Maroon>7</font>]&nbsp;=&nbsp;{&nbsp;<font color=Maroon>130</font><font color=Maroon>.81</font>,&nbsp;<font color=Maroon>146</font><font color=Maroon>.83</font>,&nbsp;<font color=Maroon>164</font><font color=Maroon>.81</font>,&nbsp;<font color=Maroon>174</font><font color=Maroon>.61</font>,&nbsp;<font color=Maroon>196</font>,&nbsp;<font color=Maroon>220</font>,&nbsp;<font color=Maroon>246</font><font color=Maroon>.94</font>&nbsp;}&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>&nbsp;(&nbsp;i&nbsp;=&nbsp;<font color=Maroon>0</font>&nbsp;;&nbsp;i&nbsp;&lt;&nbsp;<font color=Maroon>7</font>&nbsp;;&nbsp;i++&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sound&nbsp;(&nbsp;octave[i]&nbsp;*&nbsp;<font color=Maroon>8</font>&nbsp;)&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;delay&nbsp;(&nbsp;<font color=Maroon>30</font>&nbsp;)&nbsp;; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nosound(); <BR />}</div>    
           
            ]]>
        </string>
           
       
           
          
          <string name="CProjectMineSweeperGame" formatted="false"> 
        <![CDATA[   
       <div>Mine&nbsp;Sweeper&nbsp;Game <BR /> <BR />#<font color=Blue>include</font>&nbsp;&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;conio.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;graphics.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;dos.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;stdlib.h&gt; <BR />#<font color=Blue>include</font>&nbsp;&lt;time.h&gt; <BR /><font color=Blue>#define</font>&nbsp;MROW&nbsp;<font color=Maroon>8</font> <BR /><font color=Blue>#define</font>&nbsp;MCOL&nbsp;<font color=Maroon>8</font> <BR /><font color=Blue>#define</font>&nbsp;MINES&nbsp;<font color=Maroon>5</font> <BR /><font color=Blue>#define</font>&nbsp;BSIZE&nbsp;<font color=Maroon>15</font> <BR /><font color=Blue>union</font>&nbsp;REGS&nbsp;i,o; <BR /><font color=Green>//9&nbsp;for&nbsp;mines</font> <BR />main() <BR />{ <BR /><font color=Blue>int</font>&nbsp;bm=DETECT,bg=DETECT,maxx,maxy,button,x,y,i,j,checkx,checky,nclick; <BR /><font color=Blue>int</font>&nbsp;arr[<font color=Maroon>8</font>][<font color=Maroon>8</font>],dot[MINES]; <BR /><font color=Blue>int</font>&nbsp;count1,count2; <BR /><font color=Blue>int</font>&nbsp;row,col; <BR />time_t&nbsp;t; <BR />clrscr(); <BR />initgraph(&amp;bm,&amp;bg,<font color=Maroon>"e:\tcc\bgi"</font>); <BR />maxx=getmaxx(); <BR />maxy=getmaxy(); <BR /><font color=Blue>if</font>(initmouse()==<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;closegraph(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;restorecrtmode(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"MOUSE&nbsp;NOT&nbsp;FOUND"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /><font color=Blue>while</font>(!kbhit()) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;loop=<font color=Maroon>t</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(WHITE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setviewport(<font color=Maroon>0</font>,<font color=Maroon>0</font>,getmaxx(),getmaxy(),<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clearviewport(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;showmouse(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//It&nbsp;Blanks&nbsp;the&nbsp;Array</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;MROW;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;MCOL;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[i][j]=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//put&nbsp;mines&nbsp;in&nbsp;random&nbsp;blocks</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;srand((<font color=Blue>unsigned</font>)&nbsp;time(&amp;t)); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;MINES;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;dot[i]=rand()%<font color=Maroon>64</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;i;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(dot[i]==dot[j]) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(i!=j) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i--; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>continue</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row=dot[i]/MROW; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;col=dot[i]%MCOL; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[row][col]=<font color=Maroon>9</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//put&nbsp;mines&nbsp;value&nbsp;in&nbsp;other&nbsp;blocks</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(row=<font color=Maroon>0</font>;row&lt;MROW;row++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(col=<font color=Maroon>0</font>;col&lt;MCOL;col++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(arr[row][col]!=<font color=Maroon>9</font>)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//No&nbsp;Mine</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i,num=<font color=Maroon>0</font>,temp,ecol,erow,startrow; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp=col==<font color=Maroon>0</font>?col:col-<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ecol=col!=MCOL-<font color=Maroon>1</font>?col+<font color=Maroon>1</font>:col; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;startrow=row==<font color=Maroon>0</font>?row:row-<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;erow=row==MROW-<font color=Maroon>1</font>?row:row+<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=startrow;i&lt;=erow;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=temp;j&lt;=ecol;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(arr[i][j]==<font color=Maroon>9</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;num++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[row][col]=num; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rectangle(<font color=Maroon>0</font>,<font color=Maroon>0</font>,maxx,maxy); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//sets&nbsp;view&nbsp;port&nbsp;to&nbsp;the&nbsp;play&nbsp;area&nbsp;only</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setviewport(<font color=Maroon>200</font>,<font color=Maroon>190</font>,<font color=Maroon>385</font>,<font color=Maroon>370</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nclick=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(!kbhit()&amp;&amp;loop==<font color=Maroon>t</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;row=<font color=Maroon>10</font>,col=<font color=Maroon>5</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setlinestyle(<font color=Maroon>0</font>,<font color=Maroon>0</font>,<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rectangle(row-<font color=Maroon>5</font>,col-<font color=Maroon>3</font>,row*<font color=Maroon>17</font>,col*<font color=Maroon>33</font>);&nbsp;<font color=Green>//Draws&nbsp;outer&nbsp;block</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setlinestyle(<font color=Maroon>0</font>,<font color=Maroon>0</font>,<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;MROW;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;MCOL;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rectangle(row,col,row+BSIZE,col+BSIZE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(arr[i][j]!=<font color=Maroon>9</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;temp[<font color=Maroon>3</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(arr[i][j]&gt;=<font color=Maroon>80</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(row+<font color=Maroon>4</font>,col+<font color=Maroon>4</font>,<font color=Maroon>"F"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(arr[i][j]&gt;=<font color=Maroon>50</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itoa((arr[i][j]-<font color=Maroon>50</font>),temp,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(row+BSIZE/<font color=Maroon>2</font>,col+BSIZE/<font color=Maroon>2</font>,temp); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row+=BSIZE+<font color=Maroon>5</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row=<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;col+=BSIZE+<font color=Maroon>5</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(nclick==MROW*MCOL-MINES) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setviewport(<font color=Maroon>0</font>,<font color=Maroon>0</font>,getmaxx(),getmaxy(),<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>200</font>,<font color=Maroon>100</font>,<font color=Maroon>"CONGRATS!&nbsp;YOU&nbsp;WON&nbsp;THE&nbsp;GAME"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loop=<font color=Maroon>f</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getpos(&amp;button,&amp;x,&amp;y); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//puts&nbsp;F&nbsp;tag&nbsp;in&nbsp;Array</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(button&amp;<font color=Maroon>2</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;val,prex=x,prey=y; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x=<font color=Maroon>210</font>+(x-<font color=Maroon>210</font>)/<font color=Maroon>20</font>*<font color=Maroon>20</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y=<font color=Maroon>195</font>+(y-<font color=Maroon>195</font>)/<font color=Maroon>20</font>*<font color=Maroon>20</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val=arr[(y-<font color=Maroon>195</font>)/<font color=Maroon>20</font>][(x-<font color=Maroon>210</font>)/<font color=Maroon>20</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(val&lt;<font color=Maroon>10</font>&nbsp;||&nbsp;val&gt;=<font color=Maroon>80</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;val=val&gt;=<font color=Maroon>80</font>?val-<font color=Maroon>80</font>:<font color=Maroon>80</font>+val; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[(y-<font color=Maroon>195</font>)/<font color=Maroon>20</font>][(x-<font color=Maroon>210</font>)/<font color=Maroon>20</font>]=val; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(button&amp;<font color=Maroon>2</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getpos(&amp;button,&amp;x,&amp;y); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hidemouse(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setpos(<font color=Maroon>30</font>,<font color=Maroon>50</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clearviewport(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;showmouse(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setpos(prex,prey); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(button&amp;<font color=Maroon>1</font>&nbsp;&amp;&amp;&nbsp;x&gt;=<font color=Maroon>210</font>&nbsp;&amp;&amp;&nbsp;x&lt;=<font color=Maroon>365</font>&nbsp;&amp;&amp;&nbsp;y&gt;=<font color=Maroon>195</font>&nbsp;&amp;&amp;&nbsp;y&lt;=<font color=Maroon>350</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;temp[<font color=Maroon>4</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;trow,tcol; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//determine&nbsp;current&nbsp;box</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x=<font color=Maroon>210</font>+(x-<font color=Maroon>210</font>)/<font color=Maroon>20</font>*<font color=Maroon>20</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y=<font color=Maroon>195</font>+(y-<font color=Maroon>195</font>)/<font color=Maroon>20</font>*<font color=Maroon>20</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;trow=(y-<font color=Maroon>195</font>)/<font color=Maroon>20</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tcol=(x-<font color=Maroon>210</font>)/<font color=Maroon>20</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(arr[trow][tcol]==<font color=Maroon>9</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;row=<font color=Maroon>10</font>,col=<font color=Maroon>5</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setviewport(<font color=Maroon>0</font>,<font color=Maroon>0</font>,getmaxx(),getmaxy(),<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hidemouse(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>200</font>,<font color=Maroon>100</font>,<font color=Maroon>"SORRY,YOU&nbsp;LOOSE&nbsp;THE&nbsp;GAME"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setviewport(<font color=Maroon>200</font>,<font color=Maroon>190</font>,<font color=Maroon>385</font>,<font color=Maroon>370</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//prints&nbsp;X&nbsp;marks&nbsp;in&nbsp;END&nbsp;on&nbsp;screen</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;MROW;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;MCOL;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(arr[i][j]==<font color=Maroon>9</font>&nbsp;||&nbsp;arr[i][j]==<font color=Maroon>89</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,RED); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(row,col,row+BSIZE,col+BSIZE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(row+<font color=Maroon>5</font>,col+<font color=Maroon>5</font>,<font color=Maroon>"x"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row+=<font color=Maroon>20</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;row=<font color=Maroon>10</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;col+=<font color=Maroon>20</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;showmouse(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setviewport(<font color=Maroon>0</font>,<font color=Maroon>0</font>,getmaxx(),getmaxy(),<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,YELLOW); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>170</font>,<font color=Maroon>400</font>,<font color=Maroon>270</font>,<font color=Maroon>425</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>330</font>,<font color=Maroon>400</font>,<font color=Maroon>430</font>,<font color=Maroon>425</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(loop==<font color=Maroon>t</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(BLUE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>180</font>,<font color=Maroon>410</font>,<font color=Maroon>"PLAY&nbsp;AGAIN"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>360</font>,<font color=Maroon>410</font>,<font color=Maroon>"QUIT"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getpos(&amp;button,&amp;x,&amp;y); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(!button&amp;<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(x&gt;=<font color=Maroon>170</font>&nbsp;&amp;&amp;&nbsp;x&lt;=<font color=Maroon>270</font>&nbsp;&amp;&amp;&nbsp;y&gt;=<font color=Maroon>400</font>&nbsp;&amp;&amp;&nbsp;y&lt;=<font color=Maroon>425</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,CYAN); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>170</font>,<font color=Maroon>400</font>,<font color=Maroon>270</font>,<font color=Maroon>425</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,YELLOW); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>330</font>,<font color=Maroon>400</font>,<font color=Maroon>430</font>,<font color=Maroon>425</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>180</font>,<font color=Maroon>410</font>,<font color=Maroon>"PLAY&nbsp;AGAIN"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>360</font>,<font color=Maroon>410</font>,<font color=Maroon>"QUIT"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(x&gt;=<font color=Maroon>170</font>&nbsp;&amp;&amp;&nbsp;x&lt;=<font color=Maroon>270</font>&nbsp;&amp;&amp;&nbsp;y&gt;=<font color=Maroon>400</font>&nbsp;&amp;&amp;&nbsp;y&lt;=<font color=Maroon>425</font>&nbsp;&amp;&amp;&nbsp;!button&amp;<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getpos(&amp;button,&amp;x,&amp;y); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(x&gt;=<font color=Maroon>330</font>&nbsp;&amp;&amp;&nbsp;x&lt;=<font color=Maroon>430</font>&nbsp;&amp;&amp;&nbsp;y&gt;=<font color=Maroon>400</font>&nbsp;&amp;&amp;&nbsp;y&lt;=<font color=Maroon>425</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,CYAN); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>330</font>,<font color=Maroon>400</font>,<font color=Maroon>430</font>,<font color=Maroon>425</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>1</font>,YELLOW); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bar(<font color=Maroon>170</font>,<font color=Maroon>400</font>,<font color=Maroon>270</font>,<font color=Maroon>425</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>180</font>,<font color=Maroon>410</font>,<font color=Maroon>"PLAY&nbsp;AGAIN"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>360</font>,<font color=Maroon>410</font>,<font color=Maroon>"QUIT"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(x&gt;=<font color=Maroon>330</font>&nbsp;&amp;&amp;&nbsp;x&lt;=<font color=Maroon>430</font>&nbsp;&amp;&amp;&nbsp;y&gt;=<font color=Maroon>400</font>&nbsp;&amp;&amp;&nbsp;y&lt;=<font color=Maroon>425</font>&nbsp;&amp;&amp;&nbsp;!button&amp;<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getpos(&amp;button,&amp;x,&amp;y); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(x&gt;=<font color=Maroon>170</font>&nbsp;&amp;&amp;&nbsp;x&lt;=<font color=Maroon>270</font>&nbsp;&amp;&amp;&nbsp;y&gt;=<font color=Maroon>400</font>&nbsp;&amp;&amp;&nbsp;y&lt;=<font color=Maroon>425</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setviewport(<font color=Maroon>200</font>,<font color=Maroon>190</font>,<font color=Maroon>385</font>,<font color=Maroon>370</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;loop=<font color=Maroon>f</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;hidemouse(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(x&gt;=<font color=Maroon>330</font>&nbsp;&amp;&amp;&nbsp;x&lt;=<font color=Maroon>430</font>&nbsp;&amp;&amp;&nbsp;y&gt;=<font color=Maroon>400</font>&nbsp;&amp;&amp;&nbsp;y&lt;=<font color=Maroon>425</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;restorecrtmode(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;closegraph(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;<font color=Green>//NOT&nbsp;ON&nbsp;DANGER&nbsp;AREA</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(arr[trow][tcol]&lt;<font color=Maroon>50</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nclick++; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arr[trow][tcol]+=<font color=Maroon>50</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(loop==<font color=Maroon>t</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;restorecrtmode(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;closegraph(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />} <BR /> <BR />initmouse() <BR />{ <BR />i.x.ax=<font color=Maroon>0</font>; <BR />int86(<font color=Maroon>0x0033</font>,&amp;i,&amp;o); <BR /><font color=Blue>return</font>(o.x.ax); <BR />} <BR /> <BR />showmouse() <BR />{ <BR />i.x.ax=<font color=Maroon>1</font>; <BR />int86(<font color=Maroon>0x0033</font>,&amp;i,&amp;o); <BR />} <BR /> <BR />hidemouse() <BR />{ <BR />i.x.ax=<font color=Maroon>2</font>; <BR />int86(<font color=Maroon>0x0033</font>,&amp;i,&amp;o); <BR />} <BR /> <BR />restarea(<font color=Blue>int</font>&nbsp;x1,<font color=Blue>int</font>&nbsp;x2,<font color=Blue>int</font>&nbsp;y1,<font color=Blue>int</font>&nbsp;y2) <BR />{ <BR />i.x.ax=<font color=Maroon>7</font>; <BR />i.x.cx=x1; <BR />i.x.dx=x2; <BR />int86(<font color=Maroon>0x0033</font>,&amp;i,&amp;o); <BR />i.x.ax=<font color=Maroon>8</font>; <BR />i.x.cx=y1; <BR />i.x.dx=y2; <BR />int86(<font color=Maroon>0x0033</font>,&amp;i,&amp;o); <BR />} <BR /> <BR />setpos(<font color=Blue>int</font>&nbsp;x,<font color=Blue>int</font>&nbsp;y) <BR />{ <BR />i.x.ax=<font color=Maroon>4</font>; <BR />i.x.cx=x; <BR />i.x.dx=y; <BR />int86(<font color=Maroon>0x0033</font>,&amp;i,&amp;o); <BR />} <BR /> <BR />getpos(<font color=Blue>int</font>&nbsp;*button,<font color=Blue>int</font>&nbsp;*x,<font color=Blue>int</font>&nbsp;*y) <BR />{ <BR />i.x.ax=<font color=Maroon>3</font>; <BR />int86(<font color=Maroon>0x0033</font>,&amp;i,&amp;o); <BR />*button=o.x.bx; <BR />*x=o.x.cx; <BR />*y=o.x.dx; <BR />}</div>    
           
           ]]>
        </string>
        
       
        
            <string name="CProjectPaintBrushGame" formatted="false"> 
        <![CDATA[ 
           <div>PaintBrush&nbsp;Program <BR /> <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR />#<font color=Blue>include</font>&lt;graphics.h&gt; <BR /><font color=Blue>#define</font>&nbsp;L&nbsp;<font color=Maroon>75</font> <BR /><font color=Blue>#define</font>&nbsp;R&nbsp;<font color=Maroon>77</font> <BR /><font color=Blue>#define</font>&nbsp;U&nbsp;<font color=Maroon>72</font> <BR /><font color=Blue>#define</font>&nbsp;D&nbsp;<font color=Maroon>80</font> <BR /><font color=Blue>#define</font>&nbsp;DEL&nbsp;&nbsp;<font color=Maroon>83</font> <BR /><font color=Blue>#define</font>&nbsp;PGD&nbsp;&nbsp;<font color=Maroon>81</font> <BR /><font color=Blue>#define</font>&nbsp;PGU&nbsp;&nbsp;<font color=Maroon>73</font> <BR /><font color=Blue>#define</font>&nbsp;HOME&nbsp;<font color=Maroon>71</font> <BR /><font color=Blue>#define</font>&nbsp;END&nbsp;&nbsp;<font color=Maroon>79</font> <BR /><font color=Blue>#define</font>&nbsp;F1&nbsp;&nbsp;&nbsp;<font color=Maroon>59</font> <BR /><font color=Blue>#define</font>&nbsp;F2&nbsp;&nbsp;&nbsp;<font color=Maroon>60</font> <BR /><font color=Blue>#define</font>&nbsp;F3&nbsp;&nbsp;&nbsp;<font color=Maroon>61</font> <BR /><font color=Blue>#define</font>&nbsp;F4&nbsp;&nbsp;&nbsp;<font color=Maroon>62</font> <BR /><font color=Blue>#define</font>&nbsp;F5&nbsp;&nbsp;&nbsp;<font color=Maroon>63</font> <BR /><font color=Blue>#define</font>&nbsp;F6&nbsp;&nbsp;&nbsp;<font color=Maroon>64</font> <BR /><font color=Blue>#define</font>&nbsp;F7&nbsp;&nbsp;&nbsp;<font color=Maroon>65</font> <BR /><font color=Blue>#define</font>&nbsp;F8&nbsp;&nbsp;&nbsp;<font color=Maroon>66</font> <BR /><font color=Blue>#define</font>&nbsp;F9&nbsp;&nbsp;&nbsp;<font color=Maroon>67</font> <BR /><font color=Blue>#define</font>&nbsp;F10&nbsp;&nbsp;<font color=Maroon>68</font> <BR /><font color=Blue>#define</font>&nbsp;F11&nbsp;&nbsp;<font color=Maroon>133</font> <BR /><font color=Blue>#define</font>&nbsp;F12&nbsp;&nbsp;<font color=Maroon>134</font> <BR /><font color=Blue>#define</font>&nbsp;INS&nbsp;&nbsp;<font color=Maroon>82</font> <BR /><font color=Blue>#define</font>&nbsp;ALTS&nbsp;<font color=Maroon>31</font> <BR /><font color=Blue>#define</font>&nbsp;ALTO&nbsp;<font color=Maroon>24</font> <BR /><font color=Blue>int</font>&nbsp;x=<font color=Maroon>350</font>,y=<font color=Maroon>230</font>,c,w=<font color=Maroon>0</font>,z=<font color=Maroon>0</font>; <BR /><font color=Blue>void</font>&nbsp;main(<font color=Blue>void</font>) <BR />&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;gd=DETECT,gm; <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;ch,ch1,ch2,text[<font color=Maroon>60</font>]; <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>void</font>&nbsp;*q; <BR />&nbsp;&nbsp;&nbsp;initgraph(&amp;gd,&amp;gm,<font color=Maroon>""</font>); <BR />&nbsp;&nbsp;&nbsp;setcolor(GREEN); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>200</font>,<font color=Maroon>0</font>,<font color=Maroon>"THIS&nbsp;IS&nbsp;A&nbsp;PAINT&nbsp;BRUSH&nbsp;SCREEN&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;rectangle(<font color=Maroon>10</font>,<font color=Maroon>10</font>,<font color=Maroon>600</font>,<font color=Maroon>460</font>); <BR />&nbsp;&nbsp;&nbsp;rectangle(<font color=Maroon>10</font>,<font color=Maroon>10</font>,<font color=Maroon>150</font>,<font color=Maroon>460</font>); <BR />&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>7</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>12</font>,<font color=Maroon>20</font>,&nbsp;<font color=Maroon>"F1&nbsp;:&nbsp;BLACK"</font>); <BR />&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>12</font>,<font color=Maroon>50</font>,&nbsp;<font color=Maroon>"F2&nbsp;:&nbsp;BLUE"</font>); <BR />&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>12</font>,<font color=Maroon>80</font>,&nbsp;<font color=Maroon>"F3&nbsp;:&nbsp;GREEN"</font>); <BR />&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>12</font>,<font color=Maroon>110</font>,<font color=Maroon>"F4&nbsp;:&nbsp;CYAN"</font>); <BR />&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>12</font>,<font color=Maroon>140</font>,<font color=Maroon>"F5&nbsp;:&nbsp;RED"</font>); <BR />&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>5</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>12</font>,<font color=Maroon>170</font>,<font color=Maroon>"F6&nbsp;:&nbsp;MAGENTA"</font>); <BR />&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>8</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>12</font>,<font color=Maroon>200</font>,<font color=Maroon>"F7&nbsp;:&nbsp;GRAY"</font>); <BR />&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>9</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>12</font>,<font color=Maroon>230</font>,<font color=Maroon>"F8&nbsp;:&nbsp;LIGHTBLUE"</font>); <BR />&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>12</font>,<font color=Maroon>260</font>,<font color=Maroon>"F9&nbsp;:&nbsp;LIGHTGREEN"</font>); <BR />&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>12</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>12</font>,<font color=Maroon>290</font>,<font color=Maroon>"F10:&nbsp;LIGHTRED"</font>); <BR />&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>14</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>12</font>,<font color=Maroon>320</font>,<font color=Maroon>"F11:&nbsp;YELLOW"</font>); <BR />&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>12</font>,<font color=Maroon>350</font>,<font color=Maroon>"F12:&nbsp;WHITE"</font>); <BR />&nbsp;&nbsp;&nbsp;rectangle(<font color=Maroon>10</font>,<font color=Maroon>380</font>,<font color=Maroon>150</font>,<font color=Maroon>460</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>12</font>,<font color=Maroon>390</font>,<font color=Maroon>"INS:"</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>12</font>,<font color=Maroon>400</font>,<font color=Maroon>"1.CIRCLE"</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>12</font>,<font color=Maroon>410</font>,<font color=Maroon>"2.SQUARE"</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>12</font>,<font color=Maroon>420</font>,<font color=Maroon>"3.HORIZONTAL&nbsp;LINE"</font>); <BR />&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>12</font>,<font color=Maroon>430</font>,<font color=Maroon>"4.VERTICAL&nbsp;&nbsp;&nbsp;LINE"</font>); <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(&nbsp;getch()==<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>switch</font>(getch()) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;F1:&nbsp;c=<font color=Maroon>0</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;F2:&nbsp;c=<font color=Maroon>1</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;F3:&nbsp;c=<font color=Maroon>2</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;F4:&nbsp;c=<font color=Maroon>3</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;F5:&nbsp;c=<font color=Maroon>4</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;F6:&nbsp;c=<font color=Maroon>5</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;F7:&nbsp;c=<font color=Maroon>8</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;F8:&nbsp;c=<font color=Maroon>9</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;F9:&nbsp;c=<font color=Maroon>10</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;F10:&nbsp;c=<font color=Maroon>12</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;F11:&nbsp;c=<font color=Maroon>14</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;F12:&nbsp;c=<font color=Maroon>15</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;L&nbsp;:x--;&nbsp;image(x,y,c);<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;R&nbsp;:x++;&nbsp;image(x,y,c);<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;U&nbsp;:y--;&nbsp;image(x,y,c);<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;D&nbsp;:y++;&nbsp;image(x,y,c);<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;DEL&nbsp;&nbsp;:&nbsp;&nbsp;image(x,y,&nbsp;<font color=Maroon>0</font>);<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;PGD&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y=y+<font color=Maroon>3</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;PGU&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y=y-<font color=Maroon>3</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;HOME&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x=x-<font color=Maroon>3</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;END&nbsp;&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x=x+<font color=Maroon>3</font>;<font color=Blue>break</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;INS&nbsp;&nbsp;:&nbsp;&nbsp;ch2=getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>((<font color=Blue>int</font>)ch2-<font color=Maroon>48</font>==<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch1=getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(x,y,<font color=Maroon>2</font>*(<font color=Blue>int</font>)ch1-<font color=Maroon>48</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>((<font color=Blue>int</font>)ch2-<font color=Maroon>48</font>==<font color=Maroon>2</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch1=getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rectangle(x,y,x+<font color=Maroon>2</font>*(<font color=Blue>int</font>)ch1-<font color=Maroon>48</font>,y+<font color=Maroon>2</font>*(<font color=Blue>int</font>)ch1-<font color=Maroon>48</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>((<font color=Blue>int</font>)ch2-<font color=Maroon>48</font>==<font color=Maroon>3</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;w=x+<font color=Maroon>20</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(x,y,w,y); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gotoxy(w,y); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>((<font color=Blue>int</font>)ch2-<font color=Maroon>48</font>==<font color=Maroon>4</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;z=y+<font color=Maroon>20</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(x,y,x,z); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;moveto(x,z); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;} <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image(<font color=Blue>int</font>&nbsp;x,<font color=Blue>int</font>&nbsp;y,&nbsp;<font color=Blue>int</font>&nbsp;c) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;putpixel(x,y,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;putpixel(x++,y,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;putpixel(x,y,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;putpixel(x--,y,c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /></div>
             ]]>
        </string>
            
            <string name="CProjectProgToImplementABooleanFunctionUsingAMultiplexerLogic" formatted="false"> 
        <![CDATA[  
        <div>Prog&nbsp;to&nbsp;implement&nbsp;a&nbsp;boolean&nbsp;function&nbsp;<font color=Blue>using</font>&nbsp;a&nbsp;multiplexer&nbsp;logic <BR /> <BR />#<font color=Blue>include</font>&lt;dos.h&gt; <BR />#<font color=Blue>include</font>&lt;math.h&gt; <BR />#<font color=Blue>include</font>&lt;stdio.h&gt; <BR />#<font color=Blue>include</font>&lt;conio.h&gt; <BR />#<font color=Blue>include</font>&lt;stdlib.h&gt; <BR />#<font color=Blue>include</font>&lt;graphics.h&gt; <BR /> <BR /><font color=Blue>#define</font>&nbsp;N&nbsp;<font color=Maroon>500</font> <BR /> <BR /><font color=Blue>int</font>&nbsp;function[<font color=Maroon>35</font>]; <BR /><font color=Blue>int</font>&nbsp;strobe[<font color=Maroon>5</font>]&nbsp;=&nbsp;{&nbsp;<font color=Maroon>0</font>,<font color=Maroon>0</font>,<font color=Maroon>0</font>,<font color=Maroon>0</font>,<font color=Maroon>0</font>&nbsp;}; <BR /><font color=Blue>int</font>&nbsp;store[<font color=Maroon>16</font>]&nbsp;=&nbsp;{&nbsp;<font color=Maroon>2</font>,<font color=Maroon>2</font>,<font color=Maroon>2</font>,<font color=Maroon>2</font>,<font color=Maroon>2</font>,<font color=Maroon>2</font>,<font color=Maroon>2</font>,<font color=Maroon>2</font>,<font color=Maroon>2</font>,<font color=Maroon>2</font>,<font color=Maroon>2</font>,<font color=Maroon>2</font>,<font color=Maroon>2</font>,<font color=Maroon>2</font>,<font color=Maroon>2</font>,<font color=Maroon>2</font>&nbsp;}; <BR /><font color=Blue>int</font>&nbsp;inputs[<font color=Maroon>16</font>]; <BR /><font color=Blue>int</font>&nbsp;output=<font color=Maroon>0</font>,count=<font color=Maroon>0</font>,decieq,choice; <BR /> <BR /><font color=Blue>int</font>&nbsp;driver=DETECT,mode; <BR /> <BR /><font color=Green>/***********FUNCTIONS&nbsp;FOR&nbsp;&nbsp;BEGINING&nbsp;GUI***************/</font> <BR /> <BR /><font color=Blue>struct</font>&nbsp;stars <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;x,y,x1,y1,z,c; <BR /> <BR />}STARS[N]; <BR /> <BR /><font color=Blue>void</font>&nbsp;init() <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i,t; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;N;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;STARS[i].c=<font color=Maroon>2</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;STARS[i].x&nbsp;=&nbsp;random(<font color=Maroon>640</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;STARS[i].y&nbsp;=&nbsp;random(<font color=Maroon>460</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;STARS[i].x1=&nbsp;random(<font color=Maroon>320</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;STARS[i].y1=&nbsp;random(<font color=Maroon>220</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;t=random(<font color=Maroon>325</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(t==<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;STARS[i].z=t+random(<font color=Maroon>25</font>)+<font color=Maroon>1</font>;<font color=Green>//TO&nbsp;AVOID&nbsp;ERROR(division&nbsp;by&nbsp;0)</font> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;STARS[i].z=t; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;draw() <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;N;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(STARS[i].y&lt;<font color=Maroon>480</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;putpixel(STARS[i].x,STARS[i].y,STARS[i].c); <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;erase() <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;N;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;putpixel(STARS[i].x,STARS[i].y,<font color=Maroon>0</font>);&nbsp;&nbsp;<font color=Green>//putting&nbsp;black</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//color&nbsp;at&nbsp;stars&nbsp;position</font> <BR /> <BR />} <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>/*&nbsp;if&nbsp;you&nbsp;use&nbsp;z+=2&nbsp;stars&nbsp;will&nbsp;go&nbsp;away&nbsp;from&nbsp;you&nbsp;,&nbsp;but&nbsp;remember&nbsp;to <BR />&nbsp;&nbsp;&nbsp;&nbsp;change&nbsp;the&nbsp;condition&nbsp;:- <BR />&nbsp;&nbsp;&nbsp;&nbsp;if(STARS[i].z&lt;1)&nbsp;{STARS[i].z=325;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;to&nbsp;if(STARS[i].z&gt;325)&nbsp;{STARS[i].z=1;}&nbsp;*/</font> <BR /><font color=Blue>void</font>&nbsp;move() <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;N;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;STARS[i].x=((STARS[i].x1&nbsp;*&nbsp;<font color=Maroon>640</font>)/STARS[i].z)+<font color=Maroon>320</font>;<font color=Green>//320&nbsp;x-origin</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;STARS[i].y=((STARS[i].y1&nbsp;*&nbsp;<font color=Maroon>300</font>)/STARS[i].z)&nbsp;+<font color=Maroon>220</font>;<font color=Green>//220&nbsp;y-origin</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;STARS[i].z-=<font color=Maroon>2</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(STARS[i].z&lt;<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;STARS[i].z=<font color=Maroon>325</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(STARS[i].z&lt;<font color=Maroon>162</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;STARS[i].c=<font color=Maroon>15</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;STARS[i].c=<font color=Maroon>7</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;showstars() <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;init(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(!kbhit()) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>3</font>);&nbsp;&nbsp;<font color=Green>//3&nbsp;for&nbsp;cyan</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>1</font>,<font color=Maroon>0</font>,<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>230</font>,<font color=Maroon>5</font>,<font color=Maroon>"PROJECT&nbsp;ON"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>10</font>,<font color=Maroon>0</font>,<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(i); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>170</font>,<font color=Maroon>30</font>,<font color=Maroon>"MULTIPLEXERS"</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>5</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>1</font>,<font color=Maroon>0</font>,<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;move(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;draw(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;delay(<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;erase(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;i++; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;closegraph(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;restorecrtmode(); <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;welcome() <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i,&nbsp;j,&nbsp;x,&nbsp;y,&nbsp;color; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;MaxColors; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>struct</font>&nbsp;palettetype&nbsp;palette; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>struct</font>&nbsp;viewporttype&nbsp;vp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;height,&nbsp;width; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;initgraph(&amp;driver,&amp;mode,<font color=Maroon>"f:\tc\bgi"</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;MaxColors&nbsp;=&nbsp;getmaxcolor()&nbsp;+&nbsp;<font color=Maroon>1</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;textcolor(<font color=Maroon>4</font>+BLINK); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;WELCOME"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;textcolor(<font color=Maroon>15</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;getpalette(&nbsp;&amp;palette&nbsp;); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setviewport(<font color=Maroon>0</font>,<font color=Maroon>50</font>,<font color=Maroon>630</font>,<font color=Maroon>470</font>,<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getviewsettings(&nbsp;&amp;vp&nbsp;); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;width&nbsp;&nbsp;=&nbsp;(vp.right&nbsp;-&nbsp;vp.left)&nbsp;/&nbsp;<font color=Maroon>15</font>;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//width</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;height&nbsp;=&nbsp;(vp.bottom&nbsp;-&nbsp;vp.top)&nbsp;/&nbsp;<font color=Maroon>10</font>;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;height</font> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;y&nbsp;=&nbsp;<font color=Maroon>0</font>;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;Start&nbsp;in&nbsp;upper&nbsp;corner</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;=&nbsp;<font color=Maroon>1</font>;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;Begin&nbsp;at&nbsp;1st&nbsp;color</font> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(&nbsp;j=<font color=Maroon>0</font>&nbsp;;&nbsp;j&lt;<font color=Maroon>10</font>&nbsp;;&nbsp;++j&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;10&nbsp;rows&nbsp;of&nbsp;boxes</font> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(&nbsp;i=<font color=Maroon>0</font>&nbsp;;&nbsp;i&lt;<font color=Maroon>15</font>&nbsp;;&nbsp;++i&nbsp;) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;15&nbsp;columns</font> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(&nbsp;SOLID_FILL,&nbsp;color++&nbsp;);<font color=Green>//Set&nbsp;the&nbsp;color</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;bar(&nbsp;x,&nbsp;y,&nbsp;x+width,&nbsp;y+height&nbsp;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;Draw&nbsp;the&nbsp;box</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;+=&nbsp;width&nbsp;+&nbsp;<font color=Maroon>1</font>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;Advance&nbsp;to&nbsp;next&nbsp;col</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;color&nbsp;=&nbsp;<font color=Maroon>1</font>&nbsp;+&nbsp;(color&nbsp;%&nbsp;(MaxColors&nbsp;-&nbsp;<font color=Maroon>2</font>));<font color=Green>//&nbsp;Set&nbsp;new&nbsp;color</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;End&nbsp;of&nbsp;i&nbsp;loop</font> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;<font color=Maroon>0</font>;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;Goto&nbsp;1st&nbsp;column</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;+=&nbsp;height&nbsp;+&nbsp;<font color=Maroon>1</font>;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;Goto&nbsp;next&nbsp;row</font> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;End&nbsp;of&nbsp;j&nbsp;loop</font> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>while</font>(&nbsp;!kbhit()&nbsp;)&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//&nbsp;Until&nbsp;a&nbsp;key&nbsp;is&nbsp;hit</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setpalette(&nbsp;<font color=Maroon>1</font>+random(MaxColors&nbsp;-&nbsp;<font color=Maroon>2</font>),&nbsp;random(&nbsp;<font color=Maroon>65</font>&nbsp;)&nbsp;); <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setallpalette(&nbsp;&amp;palette&nbsp;); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;closegraph(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;restorecrtmode(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;initgraph(&amp;driver,&amp;mode,<font color=Maroon>"f:\tc\bgi"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;showstars(); <BR /> <BR />} <BR /> <BR /><font color=Green>/*********Begining&nbsp;GUI&nbsp;ends.Text&nbsp;mode&nbsp;begins*********/</font> <BR /> <BR /><font color=Green>/**************MULTIPLEXER&nbsp;FUNCTIONS*****************/</font> <BR /> <BR /><font color=Blue>void</font>&nbsp;message(<font color=Blue>int</font>&nbsp;num)&nbsp;&nbsp;<font color=Green>//gives&nbsp;a&nbsp;message&nbsp;to&nbsp;user</font> <BR />{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//everytime&nbsp;select&nbsp;input&nbsp;is&nbsp;entered</font> <BR /> <BR />printf(" <BR />Only&nbsp;first&nbsp;%d&nbsp;select&nbsp;inputs&nbsp;considered.rest&nbsp;rejected(<font color=Blue>if</font>&nbsp;any) <BR /> <BR />",num); <BR /> <BR />} <BR /> <BR /><font color=Blue>int</font>&nbsp;check(<font color=Blue>int</font>&nbsp;num)&nbsp;<font color=Green>//For&nbsp;checking&nbsp;that&nbsp;a&nbsp;particular&nbsp;no.</font> <BR />{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//is&nbsp;present&nbsp;in&nbsp;function&nbsp;or&nbsp;not</font> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;ctr2; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(ctr2=<font color=Maroon>0</font>;ctr2&lt;count;ctr2++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(function[ctr2]==num) <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;(<font color=Maroon>1</font>);&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//true</font> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>(<font color=Maroon>0</font>);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//false</font> <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;check_invalid_strobe(<font color=Blue>int</font>&nbsp;ctr2)&nbsp;&nbsp;&nbsp;<font color=Green>//for&nbsp;checking&nbsp;invalid&nbsp;select&nbsp;</font> <BR />input <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(strobe[ctr2]&gt;<font color=Maroon>1</font>&nbsp;||&nbsp;strobe[ctr2]&lt;<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />Invalid&nbsp;select&nbsp;input"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;exit(<font color=Maroon>2</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;decide_output(<font color=Blue>int</font>&nbsp;count)&nbsp;&nbsp;&nbsp;<font color=Green>//decides&nbsp;whether&nbsp;output&nbsp;is&nbsp;1&nbsp;or&nbsp;0</font> <BR />{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//for&nbsp;normal&nbsp;mux&nbsp;implementation</font> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;ctr2; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(ctr2=<font color=Maroon>0</font>;ctr2&lt;count;ctr2++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(decieq==function[ctr2]) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;output&nbsp;=&nbsp;<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;decide_complex_inputs(<font color=Blue>int</font>&nbsp;num)&nbsp;&nbsp;&nbsp;<font color=Green>//decides&nbsp;inputs&nbsp;of&nbsp;a&nbsp;Mux&nbsp;which</font> <BR />{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//implements&nbsp;a&nbsp;function&nbsp;of&nbsp;a&nbsp;</font> <BR />higher <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//level&nbsp;Mux</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;ctr2; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(ctr2=<font color=Maroon>0</font>;ctr2&lt;num;ctr2++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(check(ctr2)) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(check(ctr2+num)) <BR />&nbsp;&nbsp;&nbsp;&nbsp;inputs[ctr2]=<font color=Maroon>1</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;inputs[ctr2]=!(strobe[<font color=Maroon>0</font>]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;store[ctr2]&nbsp;=&nbsp;<font color=Maroon>0</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(check(ctr2+num)) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;inputs[ctr2]=strobe[<font color=Maroon>0</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;store[ctr2]&nbsp;=&nbsp;<font color=Maroon>1</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;inputs[ctr2]=<font color=Maroon>0</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;display_complex_input(<font color=Blue>int</font>&nbsp;num)&nbsp;<font color=Green>//displays&nbsp;inputs&nbsp;of&nbsp;a&nbsp;Mux&nbsp;which</font> <BR />{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//implements&nbsp;a&nbsp;function&nbsp;of&nbsp;a&nbsp;</font> <BR />higher <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//level&nbsp;Mux</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;num;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(store[i]==<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />Input&nbsp;%d&nbsp;=&nbsp;%s(%d)<font color=Maroon>",i,"</font>a&nbsp;bar",inputs[i]); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(store[i]==<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />Input&nbsp;%d&nbsp;=&nbsp;%c(%d)",i,<font color=Maroon>a</font>,inputs[i]); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />Input&nbsp;%d&nbsp;=&nbsp;%d",i,inputs[i]); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;take_input(<font color=Blue>int</font>&nbsp;num)&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//for&nbsp;taking&nbsp;select&nbsp;input&nbsp;in&nbsp;normal&nbsp;Mux</font> <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;ctr2; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />Enter&nbsp;the&nbsp;select&nbsp;input:&nbsp;"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(ctr2=<font color=Maroon>0</font>;ctr2&lt;num;ctr2++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;strobe[ctr2]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;check_invalid_strobe(ctr2); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;take_input_a(<font color=Blue>int</font>&nbsp;num)&nbsp;&nbsp;<font color=Green>//for&nbsp;taking&nbsp;input&nbsp;a&nbsp;in&nbsp;case&nbsp;of&nbsp;complex</font> <BR />{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Green>//implementation&nbsp;of&nbsp;a&nbsp;function</font> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />Enter&nbsp;the&nbsp;value&nbsp;of&nbsp;a(MSB&nbsp;of&nbsp;select&nbsp;input&nbsp;<font color=Blue>for</font>&nbsp;%d:<font color=Maroon>1</font>)&nbsp;:&nbsp;",num); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;strobe[<font color=Maroon>0</font>]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;check_invalid_strobe(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />Only&nbsp;one&nbsp;value&nbsp;of&nbsp;MSB&nbsp;considered.rest&nbsp;rejected(<font color=Blue>if</font>&nbsp;any) <BR />"); <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;take_complex_select_input(<font color=Blue>int</font>&nbsp;num) <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;ctr2; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />Enter&nbsp;the&nbsp;select&nbsp;input:&nbsp;"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(ctr2=<font color=Maroon>1</font>;ctr2&lt;num;ctr2++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;strobe[ctr2]); <BR />&nbsp;&nbsp;&nbsp;&nbsp;check_invalid_strobe(ctr2); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR /> <BR />Only&nbsp;first&nbsp;%d&nbsp;select&nbsp;inputs&nbsp;considered.rest&nbsp;rejected(<font color=Blue>if</font> <BR />any)",num-<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR /> <BR />Press&nbsp;any&nbsp;key&nbsp;to&nbsp;<font color=Blue>continue</font>...."); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;display_output() <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />Output&nbsp;is&nbsp;:&nbsp;%d",output); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />Input&nbsp;%d&nbsp;is&nbsp;selected&nbsp;as&nbsp;output.",decieq); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR /> <BR />Press&nbsp;any&nbsp;key&nbsp;to&nbsp;<font color=Blue>continue</font>....."); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;display_complex_output() <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;output&nbsp;=&nbsp;inputs[decieq]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR /> <BR />Output&nbsp;is:&nbsp;%d",output); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />Input&nbsp;%d&nbsp;is&nbsp;selected&nbsp;as&nbsp;output.",decieq); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR /> <BR />Press&nbsp;any&nbsp;key&nbsp;to&nbsp;<font color=Blue>continue</font>...."); <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;two_is_to_one() <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;take_input(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;message(<font color=Maroon>1</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;decieq&nbsp;=&nbsp;strobe[<font color=Maroon>0</font>]*<font color=Maroon>1</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;decide_output(count); <BR />&nbsp;&nbsp;&nbsp;&nbsp;display_output(); <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;four_is_to_one() <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;ctr2; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;take_input(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;message(<font color=Maroon>2</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;decieq&nbsp;=&nbsp;&nbsp;strobe[<font color=Maroon>0</font>]*<font color=Maroon>2</font>&nbsp;+&nbsp;strobe[<font color=Maroon>1</font>]*<font color=Maroon>1</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;decide_output(count); <BR />&nbsp;&nbsp;&nbsp;&nbsp;display_output(); <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;eight_is_to_one() <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;ctr2; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;take_input(<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;message(<font color=Maroon>3</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;decieq&nbsp;=&nbsp;strobe[<font color=Maroon>0</font>]*<font color=Maroon>4</font>&nbsp;+&nbsp;strobe[<font color=Maroon>1</font>]*<font color=Maroon>2</font>&nbsp;+&nbsp;strobe[<font color=Maroon>2</font>]*<font color=Maroon>1</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;decide_output(count); <BR />&nbsp;&nbsp;&nbsp;&nbsp;display_output(); <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;sixteen_is_to_one() <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;ctr2; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;take_input(<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;message(<font color=Maroon>4</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;decieq&nbsp;=&nbsp;strobe[<font color=Maroon>0</font>]*<font color=Maroon>8</font>&nbsp;+&nbsp;strobe[<font color=Maroon>1</font>]*<font color=Maroon>4</font>&nbsp;+&nbsp;strobe[<font color=Maroon>2</font>]*<font color=Maroon>2</font>&nbsp;+&nbsp;strobe[<font color=Maroon>3</font>]*<font color=Maroon>1</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;decide_output(count); <BR />&nbsp;&nbsp;&nbsp;&nbsp;display_output(); <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;thirtytwo_is_to_one() <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;ctr2; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;take_input(<font color=Maroon>5</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;message(<font color=Maroon>5</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;decieq&nbsp;=&nbsp;strobe[<font color=Maroon>0</font>]*<font color=Maroon>16</font>&nbsp;+&nbsp;strobe[<font color=Maroon>1</font>]*<font color=Maroon>8</font>&nbsp;+&nbsp;strobe[<font color=Maroon>2</font>]*<font color=Maroon>4</font>&nbsp;+&nbsp;strobe[<font color=Maroon>3</font>]*<font color=Maroon>2</font>&nbsp;+ <BR />strobe[<font color=Maroon>4</font>]*<font color=Maroon>1</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;decide_output(count); <BR />&nbsp;&nbsp;&nbsp;&nbsp;display_output(); <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;complex_two_is_to_one() <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;ctr2; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;take_input_a(<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;take_complex_select_input(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;message(<font color=Maroon>1</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;decide_complex_inputs(<font color=Maroon>2</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;decieq&nbsp;=&nbsp;strobe[<font color=Maroon>1</font>]*<font color=Maroon>1</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;clrscr(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;display_complex_input(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;display_complex_output(); <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;complex_four_is_to_one() <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;ctr2; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;take_input_a(<font color=Maroon>8</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;take_complex_select_input(<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;message(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;decide_complex_inputs(<font color=Maroon>4</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;decieq&nbsp;=&nbsp;strobe[<font color=Maroon>1</font>]*<font color=Maroon>2</font>&nbsp;+&nbsp;strobe[<font color=Maroon>2</font>]*<font color=Maroon>1</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;clrscr(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;display_complex_input(<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;display_complex_output(); <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;complex_eight_is_to_one() <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;ctr2; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;take_input_a(<font color=Maroon>16</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;take_complex_select_input(<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;message(<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;decide_complex_inputs(<font color=Maroon>8</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;decieq&nbsp;=&nbsp;strobe[<font color=Maroon>1</font>]*<font color=Maroon>4</font>&nbsp;+&nbsp;strobe[<font color=Maroon>2</font>]*<font color=Maroon>2</font>&nbsp;+&nbsp;strobe[<font color=Maroon>3</font>]*<font color=Maroon>1</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;clrscr(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;display_complex_input(<font color=Maroon>8</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;display_complex_output(); <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;complex_sixteen_is_to_one() <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;ctr2; <BR />&nbsp;&nbsp;&nbsp;&nbsp;take_input_a(<font color=Maroon>32</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;take_complex_select_input(<font color=Maroon>5</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;message(<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;decide_complex_inputs(<font color=Maroon>16</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;decieq&nbsp;=&nbsp;strobe[<font color=Maroon>1</font>]*<font color=Maroon>8</font>&nbsp;+&nbsp;strobe[<font color=Maroon>2</font>]*<font color=Maroon>4</font>&nbsp;+&nbsp;strobe[<font color=Maroon>3</font>]*<font color=Maroon>2</font>&nbsp;+&nbsp;strobe[<font color=Maroon>4</font>]*<font color=Maroon>1</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;clrscr(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;display_complex_input(<font color=Maroon>16</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;display_complex_output(); <BR /> <BR />} <BR /> <BR /><font color=Green>/**********MULTIPLEXING&nbsp;FUNCTIONS&nbsp;END*******************/</font> <BR /> <BR /><font color=Green>/****************CIRCUIT&nbsp;GUI****************************/</font> <BR /> <BR /> <BR /><font color=Blue>void</font>&nbsp;common_gui(<font color=Blue>int</font>&nbsp;num) <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;y[<font color=Maroon>32</font>],i,i2,k; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>double</font>&nbsp;j=log(num)/log(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;str[<font color=Maroon>2</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;stepsize=((<font color=Maroon>280</font>+num*<font color=Maroon>3</font>)-<font color=Maroon>180</font>)/(j+<font color=Maroon>1</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>32</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;y[i]=<font color=Maroon>80</font>&nbsp;+&nbsp;(i+<font color=Maroon>1</font>)*<font color=Maroon>10</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;initgraph(&amp;driver,&amp;mode,<font color=Maroon>"f:\tc\bgi"</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>20</font>,<font color=Maroon>5</font>,<font color=Maroon>"RED:&nbsp;logic&nbsp;level&nbsp;1"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>250</font>,<font color=Maroon>5</font>,<font color=Maroon>"Press&nbsp;any&nbsp;key&nbsp;to&nbsp;continue....."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>20</font>,<font color=Maroon>15</font>,<font color=Maroon>"GREEN:logic&nbsp;level&nbsp;0"</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;num;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(check(i)) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(WHITE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;circle(<font color=Maroon>150</font>,y[i],<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,RED); <BR />&nbsp;&nbsp;&nbsp;&nbsp;floodfill(<font color=Maroon>150</font>,y[i],WHITE); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;circle(<font color=Maroon>150</font>,y[i],<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,GREEN); <BR />&nbsp;&nbsp;&nbsp;&nbsp;floodfill(<font color=Maroon>150</font>,y[i],WHITE); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>154</font>,y[i],<font color=Maroon>180</font>,y[i]); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;rectangle(<font color=Maroon>180</font>,<font color=Maroon>40</font>,<font color=Maroon>280</font>+num*<font color=Maroon>3</font>,y[i-<font color=Maroon>1</font>]+<font color=Maroon>40</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>280</font>+num*<font color=Maroon>3</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>60</font>,<font color=Maroon>280</font>+<font color=Maroon>3</font>*num+<font color=Maroon>40</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>60</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(output==<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;circle(<font color=Maroon>280</font>+num*<font color=Maroon>3</font>+<font color=Maroon>44</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>60</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,RED); <BR />&nbsp;&nbsp;&nbsp;&nbsp;floodfill(<font color=Maroon>280</font>+num*<font color=Maroon>3</font>+<font color=Maroon>44</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>60</font>,WHITE); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;circle(<font color=Maroon>280</font>+num*<font color=Maroon>3</font>+<font color=Maroon>44</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>60</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,GREEN); <BR />&nbsp;&nbsp;&nbsp;&nbsp;floodfill(<font color=Maroon>280</font>+num*<font color=Maroon>3</font>+<font color=Maroon>44</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+<font color=Maroon>60</font>,WHITE); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>280</font>+num*<font color=Maroon>3</font>+<font color=Maroon>50</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>60</font>,<font color=Maroon>"&nbsp;Y(Output&nbsp;=&nbsp;&nbsp;&nbsp;)"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;itoa(output,str,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>280</font>+num*<font color=Maroon>3</font>+<font color=Maroon>150</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>60</font>,str); <BR />&nbsp;&nbsp;&nbsp;&nbsp;itoa(num,str,<font color=Maroon>10</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>140</font>,y[i-<font color=Maroon>1</font>]+<font color=Maroon>72</font>,<font color=Maroon>"&nbsp;&nbsp;Block&nbsp;Diagram&nbsp;of&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>290</font>,y[i-<font color=Maroon>1</font>]+<font color=Maroon>72</font>,str); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>293</font>,y[i-<font color=Maroon>1</font>]+<font color=Maroon>72</font>,<font color=Maroon>"&nbsp;&nbsp;:&nbsp;1&nbsp;Mux"</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy((<font color=Maroon>280</font>+num*<font color=Maroon>3</font>-<font color=Maroon>180</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>150</font>,y[(i-<font color=Maroon>1</font>)/<font color=Maroon>2</font>],str); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy((<font color=Maroon>280</font>+num*<font color=Maroon>3</font>-<font color=Maroon>180</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>160</font>,y[(i-<font color=Maroon>1</font>)/<font color=Maroon>2</font>],<font color=Maroon>"&nbsp;&nbsp;:&nbsp;1"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy((<font color=Maroon>280</font>+num*<font color=Maroon>3</font>-<font color=Maroon>180</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>150</font>,y[(i-<font color=Maroon>1</font>)/<font color=Maroon>2</font>+<font color=Maroon>2</font>],<font color=Maroon>"&nbsp;&nbsp;MUX"</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>280</font>+num*<font color=Maroon>3</font>+<font color=Maroon>170</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>60</font>,<font color=Maroon>"(I&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;itoa(decieq,str,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>280</font>+num*<font color=Maroon>3</font>+<font color=Maroon>185</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>60</font>,str); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>280</font>+num*<font color=Maroon>3</font>+<font color=Maroon>192</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>60</font>,<font color=Maroon>"&nbsp;)"</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>130</font>,y[<font color=Maroon>0</font>]-<font color=Maroon>5</font>,<font color=Maroon>"I0"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;itoa(num-<font color=Maroon>1</font>,str,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>126</font>,y[i-<font color=Maroon>1</font>],<font color=Maroon>"I"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>133</font>,y[i-<font color=Maroon>1</font>],str); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i2=<font color=Maroon>0</font>;i2&lt;j;i2++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(k=<font color=Maroon>0</font>;k&lt;<font color=Maroon>20</font>;k++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>180</font>+(i2+<font color=Maroon>1</font>)*stepsize,y[i-<font color=Maroon>1</font>]+<font color=Maroon>40</font>,<font color=Maroon>180</font>+(i2+<font color=Maroon>1</font>)*stepsize,y[i-<font color=Maroon>1</font>]+<font color=Maroon>60</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(strobe[i2]==<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;circle(<font color=Maroon>180</font>+(i2+<font color=Maroon>1</font>)*stepsize,y[i-<font color=Maroon>1</font>]+<font color=Maroon>62</font>,<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;floodfill(<font color=Maroon>180</font>+(i2+<font color=Maroon>1</font>)*stepsize,y[i-<font color=Maroon>1</font>]+<font color=Maroon>62</font>,<font color=Maroon>15</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;circle(<font color=Maroon>180</font>+(i2+<font color=Maroon>1</font>)*stepsize,y[i-<font color=Maroon>1</font>]+<font color=Maroon>62</font>,<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;floodfill(<font color=Maroon>180</font>+(i2+<font color=Maroon>1</font>)*stepsize,y[i-<font color=Maroon>1</font>]+<font color=Maroon>62</font>,<font color=Maroon>15</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>185</font>+(i2)*stepsize,y[i-<font color=Maroon>1</font>]+<font color=Maroon>62</font>,<font color=Maroon>"S0"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;itoa(j-<font color=Maroon>1</font>,str,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>162</font>+stepsize,y[i-<font color=Maroon>1</font>]+<font color=Maroon>62</font>,<font color=Maroon>"S&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>170</font>+stepsize,y[i-<font color=Maroon>1</font>]+<font color=Maroon>62</font>,str); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(num==<font color=Maroon>2</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>162</font>+stepsize,y[i-<font color=Maroon>1</font>]+<font color=Maroon>62</font>,<font color=Maroon>"S0"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>15</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR /> <BR />} <BR /> <BR /><font color=Blue>void</font>&nbsp;common_complex_gui(<font color=Blue>int</font>&nbsp;num) <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;y[<font color=Maroon>32</font>],i,i2,k; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>double</font>&nbsp;j=log(num)/log(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;str[<font color=Maroon>2</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;stepsize=((<font color=Maroon>280</font>+num*<font color=Maroon>3</font>)-<font color=Maroon>180</font>)/(j+<font color=Maroon>1</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>32</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;y[i]=<font color=Maroon>80</font>&nbsp;+&nbsp;(i+<font color=Maroon>1</font>)*<font color=Maroon>10</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;initgraph(&amp;driver,&amp;mode,<font color=Maroon>"f:\tc\bgi"</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>20</font>,<font color=Maroon>5</font>,<font color=Maroon>"RED:&nbsp;logic&nbsp;level&nbsp;1"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>250</font>,<font color=Maroon>5</font>,<font color=Maroon>"Press&nbsp;anu&nbsp;key&nbsp;to&nbsp;continue....."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>20</font>,<font color=Maroon>15</font>,<font color=Maroon>"GREEN:logic&nbsp;level&nbsp;zero"</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;num;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(inputs[i]==<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(WHITE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;circle(<font color=Maroon>150</font>,y[i],<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,RED); <BR />&nbsp;&nbsp;&nbsp;&nbsp;floodfill(<font color=Maroon>150</font>,y[i],WHITE); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;circle(<font color=Maroon>150</font>,y[i],<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,GREEN); <BR />&nbsp;&nbsp;&nbsp;&nbsp;floodfill(<font color=Maroon>150</font>,y[i],WHITE); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>154</font>,y[i],<font color=Maroon>180</font>,y[i]); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;rectangle(<font color=Maroon>180</font>,<font color=Maroon>40</font>,<font color=Maroon>280</font>+num*<font color=Maroon>3</font>,y[i-<font color=Maroon>1</font>]+<font color=Maroon>40</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>280</font>+num*<font color=Maroon>3</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>60</font>,<font color=Maroon>280</font>+<font color=Maroon>3</font>*num+<font color=Maroon>40</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>60</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(output==<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;circle(<font color=Maroon>280</font>+num*<font color=Maroon>3</font>+<font color=Maroon>44</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>60</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,RED); <BR />&nbsp;&nbsp;&nbsp;&nbsp;floodfill(<font color=Maroon>280</font>+num*<font color=Maroon>3</font>+<font color=Maroon>44</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>60</font>,WHITE); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;circle(<font color=Maroon>280</font>+num*<font color=Maroon>3</font>+<font color=Maroon>44</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>60</font>,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,GREEN); <BR />&nbsp;&nbsp;&nbsp;&nbsp;floodfill(<font color=Maroon>280</font>+num*<font color=Maroon>3</font>+<font color=Maroon>44</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+<font color=Maroon>60</font>,WHITE); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>280</font>+num*<font color=Maroon>3</font>+<font color=Maroon>50</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>60</font>,<font color=Maroon>"&nbsp;Y(Output&nbsp;=&nbsp;&nbsp;&nbsp;)"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;itoa(output,str,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>280</font>+num*<font color=Maroon>3</font>+<font color=Maroon>150</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>60</font>,str); <BR />&nbsp;&nbsp;&nbsp;&nbsp;itoa(num,str,<font color=Maroon>10</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>140</font>,y[i-<font color=Maroon>1</font>]+<font color=Maroon>72</font>,<font color=Maroon>"&nbsp;&nbsp;Block&nbsp;Diagram&nbsp;of&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>290</font>,y[i-<font color=Maroon>1</font>]+<font color=Maroon>72</font>,str); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>293</font>,y[i-<font color=Maroon>1</font>]+<font color=Maroon>72</font>,<font color=Maroon>"&nbsp;&nbsp;:&nbsp;1&nbsp;Mux"</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy((<font color=Maroon>280</font>+num*<font color=Maroon>3</font>-<font color=Maroon>180</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>150</font>,y[(i-<font color=Maroon>1</font>)/<font color=Maroon>2</font>],str); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy((<font color=Maroon>280</font>+num*<font color=Maroon>3</font>-<font color=Maroon>180</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>160</font>,y[(i-<font color=Maroon>1</font>)/<font color=Maroon>2</font>],<font color=Maroon>"&nbsp;&nbsp;:&nbsp;1"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy((<font color=Maroon>280</font>+num*<font color=Maroon>3</font>-<font color=Maroon>180</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>150</font>,y[(i-<font color=Maroon>1</font>)/<font color=Maroon>2</font>+<font color=Maroon>2</font>],<font color=Maroon>"&nbsp;&nbsp;MUX"</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>280</font>+num*<font color=Maroon>3</font>+<font color=Maroon>170</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>60</font>,<font color=Maroon>"(I&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;itoa(decieq,str,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>280</font>+num*<font color=Maroon>3</font>+<font color=Maroon>185</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>60</font>,str); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>280</font>+num*<font color=Maroon>3</font>+<font color=Maroon>192</font>,(y[i-<font color=Maroon>1</font>]-<font color=Maroon>40</font>)/<font color=Maroon>2</font>&nbsp;+&nbsp;<font color=Maroon>60</font>,<font color=Maroon>"&nbsp;)"</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>130</font>,y[<font color=Maroon>0</font>]-<font color=Maroon>5</font>,<font color=Maroon>"I0"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;itoa(num-<font color=Maroon>1</font>,str,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>126</font>,y[i-<font color=Maroon>1</font>],<font color=Maroon>"I"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>133</font>,y[i-<font color=Maroon>1</font>],str); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i2=<font color=Maroon>1</font>;i2&lt;=j;i2++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(k=<font color=Maroon>0</font>;k&lt;<font color=Maroon>20</font>;k++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>180</font>+(i2)*stepsize,y[i-<font color=Maroon>1</font>]+<font color=Maroon>40</font>,<font color=Maroon>180</font>+(i2)*stepsize,y[i-<font color=Maroon>1</font>]+<font color=Maroon>60</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(strobe[i2]==<font color=Maroon>0</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;circle(<font color=Maroon>180</font>+(i2)*stepsize,y[i-<font color=Maroon>1</font>]+<font color=Maroon>62</font>,<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;floodfill(<font color=Maroon>180</font>+(i2)*stepsize,y[i-<font color=Maroon>1</font>]+<font color=Maroon>62</font>,<font color=Maroon>15</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;circle(<font color=Maroon>180</font>+(i2)*stepsize,y[i-<font color=Maroon>1</font>]+<font color=Maroon>62</font>,<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(SOLID_FILL,<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;floodfill(<font color=Maroon>180</font>+(i2)*stepsize,y[i-<font color=Maroon>1</font>]+<font color=Maroon>62</font>,<font color=Maroon>15</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>185</font>+(i2-<font color=Maroon>1</font>)*stepsize,y[i-<font color=Maroon>1</font>]+<font color=Maroon>62</font>,<font color=Maroon>"S0"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;itoa(j-<font color=Maroon>1</font>,str,<font color=Maroon>10</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>162</font>+stepsize,y[i-<font color=Maroon>1</font>]+<font color=Maroon>62</font>,<font color=Maroon>"S&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>170</font>+stepsize,y[i-<font color=Maroon>1</font>]+<font color=Maroon>62</font>,str); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(num==<font color=Maroon>2</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(<font color=Maroon>162</font>+stepsize,y[i-<font color=Maroon>1</font>]+<font color=Maroon>62</font>,<font color=Maroon>"S0"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;setcolor(<font color=Maroon>15</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR /> <BR />} <BR /> <BR /><font color=Green>/************CIRCUIT&nbsp;GUI&nbsp;ENDS**********************/</font> <BR /> <BR /><font color=Green>/********************MAIN&nbsp;FUNCTION*****************/</font> <BR /> <BR /><font color=Blue>void</font>&nbsp;main() <BR />{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;ctr=<font color=Maroon>0</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;welcome(); <BR /> <BR />clrscr(); <BR />printf(" <BR />Prog&nbsp;to&nbsp;implement&nbsp;a&nbsp;function&nbsp;<font color=Blue>using</font>&nbsp;a&nbsp;multiplexer&nbsp;logic:-"); <BR /> <BR />printf(" <BR /> <BR />Enter&nbsp;the&nbsp;function&nbsp;in&nbsp;minterms&nbsp;only."); <BR />printf(" <BR />Enter&nbsp;the&nbsp;function&nbsp;in&nbsp;form&nbsp;a&nbsp;b&nbsp;c&nbsp;d&nbsp;where&nbsp;a&lt;b&lt;c&lt;d."); <BR />printf(" <BR />Press&nbsp;enter&nbsp;<font color=Blue>or</font>&nbsp;provide&nbsp;spaces&nbsp;after&nbsp;each&nbsp;input."); <BR />printf(" <BR />Any&nbsp;value&nbsp;in&nbsp;input&nbsp;function&nbsp;cannot&nbsp;be&nbsp;repeated."); <BR />printf(" <BR />Enter&nbsp;the&nbsp;select&nbsp;input&nbsp;in&nbsp;form&nbsp;of&nbsp;<font color=Maroon>1</font>s&nbsp;&amp;&nbsp;<font color=Maroon>0</font>s."); <BR />printf(" <BR />All&nbsp;the&nbsp;entered&nbsp;inputs&nbsp;are&nbsp;assumed&nbsp;to&nbsp;be&nbsp;high."); <BR />printf(" <BR />Maximun&nbsp;value&nbsp;of&nbsp;the&nbsp;minterm&nbsp;that&nbsp;can&nbsp;be&nbsp;accepted&nbsp;:<font color=Maroon>31</font> <BR /> <BR /> <BR /> <BR /> <BR />"); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;textcolor(<font color=Maroon>4</font>+BLINK); <BR />&nbsp;&nbsp;&nbsp;&nbsp;textbackground(<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;cprintf(<font color=Maroon>"Press&nbsp;any&nbsp;key&nbsp;to&nbsp;continue......."</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;textcolor(<font color=Maroon>15</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;textbackground(<font color=Maroon>0</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR /> <BR />How&nbsp;many&nbsp;input&nbsp;will&nbsp;you&nbsp;provide:&nbsp;"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;count); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(count&gt;<font color=Maroon>32</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />Invalid&nbsp;function&nbsp;input.inputs&nbsp;cant&nbsp;be&nbsp;greater&nbsp;than&nbsp;<font color=Maroon>32</font>"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;exit(<font color=Maroon>1</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;clrscr(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"Enter&nbsp;the&nbsp;function&nbsp;to&nbsp;be&nbsp;implemented&nbsp;:&nbsp;&nbsp;&nbsp;&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(ctr=<font color=Maroon>0</font>;ctr&lt;count;ctr++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;function[ctr]); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(function[ctr]&gt;<font color=Maroon>31</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />Invalid&nbsp;function&nbsp;input"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;exit(<font color=Maroon>1</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />Only&nbsp;first&nbsp;%d&nbsp;inputs&nbsp;considered.rest&nbsp;rejected(<font color=Blue>if</font>&nbsp;any)",count); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;fflush(stdin); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(function[count-<font color=Maroon>1</font>]&nbsp;&lt;=&nbsp;<font color=Maroon>1</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;two_is_to_one(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;common_gui(<font color=Maroon>2</font>); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(function[count-<font color=Maroon>1</font>]&nbsp;&lt;=&nbsp;<font color=Maroon>3</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;label1: <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR /> <BR />Implement&nbsp;<font color=Blue>using</font>:- <BR /><font color=Maroon>1</font>.)<font color=Maroon>4</font>:<font color=Maroon>1</font>&nbsp;Mux <BR /><font color=Maroon>2</font>.)<font color=Maroon>2</font>:<font color=Maroon>1</font>&nbsp;Mux <BR />Enter&nbsp;your&nbsp;choice?"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;choice); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>switch</font>(choice) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1</font>:&nbsp;&nbsp;&nbsp;&nbsp;four_is_to_one(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;common_gui(<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>2</font>:&nbsp;&nbsp;&nbsp;&nbsp;complex_two_is_to_one(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;common_complex_gui(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>default</font>&nbsp;:&nbsp;printf(" <BR />Invalid&nbsp;choice"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>goto</font>&nbsp;label1; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(function[count-<font color=Maroon>1</font>]&nbsp;&lt;=&nbsp;<font color=Maroon>7</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;label2: <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR /> <BR />Implement&nbsp;<font color=Blue>using</font>:- <BR /><font color=Maroon>1</font>.)<font color=Maroon>8</font>:<font color=Maroon>1</font>&nbsp;Mux <BR /><font color=Maroon>2</font>.)<font color=Maroon>4</font>:<font color=Maroon>1</font>&nbsp;Mux <BR />Enter&nbsp;your&nbsp;choice?"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;choice); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>switch</font>(choice) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1</font>:&nbsp;&nbsp;&nbsp;&nbsp;eight_is_to_one(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;common_gui(<font color=Maroon>8</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>2</font>:&nbsp;&nbsp;&nbsp;&nbsp;complex_four_is_to_one(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;common_complex_gui(<font color=Maroon>4</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>default</font>&nbsp;:&nbsp;printf(" <BR />Invalid&nbsp;choice"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>goto</font>&nbsp;label2; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(function[count-<font color=Maroon>1</font>]&nbsp;&lt;=&nbsp;<font color=Maroon>15</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;label3: <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR /> <BR />Implement&nbsp;<font color=Blue>using</font>:- <BR /><font color=Maroon>1</font>.)<font color=Maroon>16</font>:<font color=Maroon>1</font>&nbsp;Mux <BR /><font color=Maroon>2</font>.)<font color=Maroon>8</font>:<font color=Maroon>1</font>&nbsp;Mux <BR />Enter&nbsp;your&nbsp;choice?"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;choice); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>switch</font>(choice) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1</font>:&nbsp;&nbsp;&nbsp;&nbsp;sixteen_is_to_one(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;common_gui(<font color=Maroon>16</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>2</font>:&nbsp;&nbsp;&nbsp;&nbsp;complex_eight_is_to_one(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;common_complex_gui(<font color=Maroon>8</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>default</font>&nbsp;:&nbsp;printf(" <BR />Invalid&nbsp;choice"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>goto</font>&nbsp;label3; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font>&nbsp;<font color=Blue>if</font>(function[count-<font color=Maroon>1</font>]&nbsp;&lt;=&nbsp;<font color=Maroon>31</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;label4: <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR /> <BR />Implement&nbsp;<font color=Blue>using</font>:- <BR /><font color=Maroon>1</font>.)<font color=Maroon>32</font>:<font color=Maroon>1</font>&nbsp;Mux <BR /><font color=Maroon>2</font>.)<font color=Maroon>16</font>:<font color=Maroon>1</font>&nbsp;Mux <BR />Enter&nbsp;your&nbsp;choice?"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%d"</font>,&amp;choice); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>switch</font>(choice) <BR />&nbsp;&nbsp;&nbsp;&nbsp;{ <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1</font>:&nbsp;&nbsp;&nbsp;&nbsp;thirtytwo_is_to_one(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;common_gui(<font color=Maroon>32</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>2</font>:&nbsp;&nbsp;&nbsp;&nbsp;complex_sixteen_is_to_one(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;common_complex_gui(<font color=Maroon>16</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>break</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>default</font>&nbsp;:&nbsp;printf(" <BR />Invalid&nbsp;choice"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>goto</font>&nbsp;label4; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR /> <BR />}</div>    
             ]]>
        </string> 
            
           <string name="CProjectTransformation2DScalingTranslationRotation" formatted="false"> 
        <![CDATA[    
         <div>Transformation&nbsp;<font color=Maroon>2</font>D&nbsp;[&nbsp;Scaling,&nbsp;Translation,&nbsp;Rotation&nbsp;.&nbsp;.&nbsp;.] <BR /> <BR />#<font color=Blue>include</font>&nbsp;<font color=Maroon>"Stdio.h"</font> <BR />#<font color=Blue>include</font>&nbsp;<font color=Maroon>"conio.h"</font> <BR />#<font color=Blue>include</font>&nbsp;<font color=Maroon>"math.h"</font> <BR />#<font color=Blue>include</font>&nbsp;<font color=Maroon>"graphics.h"</font> <BR /> <BR /><font color=Blue>void</font>&nbsp;intgraph(); <BR /><font color=Blue>void</font>&nbsp;display_cordinate(<font color=Blue>char</font>&nbsp;bg_color,<font color=Blue>char</font>&nbsp;line_color); <BR /><font color=Blue>int</font>&nbsp;Create_poly(<font color=Blue>int</font>&nbsp;poly[][<font color=Maroon>2</font>]); <BR /><font color=Blue>void</font>&nbsp;fill_poly(<font color=Blue>int</font>&nbsp;poly[][<font color=Maroon>2</font>],<font color=Blue>int</font>&nbsp;points,<font color=Blue>char</font>&nbsp;line_color,<font color=Blue>char</font>&nbsp;fill_color); <BR /><font color=Blue>void</font>&nbsp;Identity(<font color=Blue>float</font>&nbsp;Matrix[<font color=Maroon>3</font>][<font color=Maroon>3</font>]); <BR /><font color=Blue>void</font>&nbsp;Translate_to_Relative(<font color=Blue>int</font>&nbsp;poly[][<font color=Maroon>2</font>],<font color=Blue>int</font>&nbsp;points,<font color=Blue>int</font>&nbsp;Xdis,<font color=Blue>int</font>&nbsp;Ydis); <BR /> <BR /><font color=Blue>void</font>&nbsp;main() <BR />{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;poly[<font color=Maroon>3</font>][<font color=Maroon>2</font>],i,points,Xdis,Ydis; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>float</font>&nbsp;Sx,Sy,Matrix[<font color=Maroon>3</font>][<font color=Maroon>3</font>],temp,Cos,Sin; <BR />&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;ch; <BR />&nbsp;&nbsp;&nbsp;&nbsp;intgraph(); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>8</font>,RED); <BR />&nbsp;&nbsp;&nbsp;&nbsp;points=Create_poly(poly); <BR />&nbsp;&nbsp;&nbsp;&nbsp;display_cordinate(DARKGRAY,WHITE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;fill_poly(poly,points,WHITE,RED); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;Identity(Matrix); <BR />&nbsp;&nbsp;&nbsp;&nbsp;Xdis=<font color=Maroon>0</font>-poly[<font color=Maroon>0</font>][<font color=Maroon>0</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;Ydis=<font color=Maroon>0</font>-poly[<font color=Maroon>0</font>][<font color=Maroon>1</font>]; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;Translate_to_Relative(poly,points,Xdis,Ydis); <BR /> <BR />&nbsp;&nbsp;&nbsp;Menu: <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;restorecrtmode(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>do</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clrscr(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR /> <BR /> <BR />================================"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Maroon>1</font>.&nbsp;Scaling"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Maroon>2</font>.&nbsp;Translation"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Maroon>3</font>.&nbsp;Rotation"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Maroon>4</font>.&nbsp;Reflection&nbsp;[&nbsp;X&nbsp;axis&nbsp;]"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Maroon>5</font>.&nbsp;Reflection&nbsp;[&nbsp;Y&nbsp;axis&nbsp;]"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Maroon>6</font>.&nbsp;Reflection&nbsp;[&nbsp;X=Y&nbsp;axis&nbsp;]"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Maroon>7</font>.&nbsp;Draw&nbsp;"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Maroon>8</font>.&nbsp;EXIT&nbsp;"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR /> <BR />================================"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />&nbsp;Choose&nbsp;Ur&nbsp;Destiny:-&nbsp;"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch=getche(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<font color=Blue>while</font>((ch&lt;<font color=Maroon>1</font>)||(ch&gt;<font color=Maroon>8</font>)); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>switch</font>(ch) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>1</font>: <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />&nbsp;Enter&nbsp;Scaling&nbsp;Ratio:-&nbsp;"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sx:-&nbsp;"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%f"</font>,&amp;Sx); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sy:-&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%f"</font>,&amp;Sy); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;<font color=Maroon>3</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matrix[i][<font color=Maroon>0</font>]=Matrix[i][<font color=Maroon>0</font>]*Sx; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matrix[i][<font color=Maroon>1</font>]=Matrix[i][<font color=Maroon>1</font>]*Sy; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>goto</font>&nbsp;Menu; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>2</font>: <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />&nbsp;Enter&nbsp;Translation&nbsp;[Relative]:-&nbsp;"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Tx:-&nbsp;"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%f"</font>,&amp;Sx); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(<font color=Maroon>"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ty:-&nbsp;"</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%f"</font>,&amp;Sy); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matrix[<font color=Maroon>2</font>][<font color=Maroon>0</font>]=Matrix[<font color=Maroon>2</font>][<font color=Maroon>0</font>]+Sx; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matrix[<font color=Maroon>2</font>][<font color=Maroon>1</font>]=Matrix[<font color=Maroon>2</font>][<font color=Maroon>1</font>]+Sy; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>goto</font>&nbsp;Menu; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>3</font>: <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />&nbsp;Enter&nbsp;Rotation&nbsp;Angle&nbsp;[Degree]:-&nbsp;"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;scanf(<font color=Maroon>"%f"</font>,&amp;Sx); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sx=(Sx*<font color=Maroon>3</font><font color=Maroon>.14</font>)/<font color=Maroon>180</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Cos=cos(Sx); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sin=sin(Sx); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=<font color=Maroon>2</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp=Matrix[i][<font color=Maroon>0</font>]*Cos-Matrix[i][<font color=Maroon>1</font>]*Sin; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matrix[i][<font color=Maroon>1</font>]=Matrix[i][<font color=Maroon>0</font>]*Sin+Matrix[i][<font color=Maroon>1</font>]*Cos; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matrix[i][<font color=Maroon>0</font>]=temp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>goto</font>&nbsp;Menu; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>4</font>: <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matrix[<font color=Maroon>1</font>][<font color=Maroon>1</font>]=Matrix[<font color=Maroon>1</font>][<font color=Maroon>1</font>]*-<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Done"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>goto</font>&nbsp;Menu; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>5</font>: <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matrix[<font color=Maroon>0</font>][<font color=Maroon>0</font>]=Matrix[<font color=Maroon>0</font>][<font color=Maroon>0</font>]*-<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Done"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>goto</font>&nbsp;Menu; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>6</font>: <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matrix[<font color=Maroon>0</font>][<font color=Maroon>1</font>]=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matrix[<font color=Maroon>1</font>][<font color=Maroon>1</font>]=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Done"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>goto</font>&nbsp;Menu; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>7</font>: <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=points;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;temp=poly[i][<font color=Maroon>0</font>]*Matrix[<font color=Maroon>0</font>][<font color=Maroon>0</font>]+poly[i][<font color=Maroon>1</font>]*Matrix[<font color=Maroon>1</font>][<font color=Maroon>0</font>]+Matrix[<font color=Maroon>2</font>][<font color=Maroon>0</font>]; <BR /> <BR />poly[i][<font color=Maroon>1</font>]=poly[i][<font color=Maroon>0</font>]*Matrix[<font color=Maroon>0</font>][<font color=Maroon>1</font>]+poly[i][<font color=Maroon>1</font>]*Matrix[<font color=Maroon>1</font>][<font color=Maroon>1</font>]+Matrix[<font color=Maroon>2</font>][<font color=Maroon>1</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;poly[i][<font color=Maroon>0</font>]=temp; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>case</font>&nbsp;<font color=Maroon>8</font>: <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR /><font color=Green>//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;closegraph();</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit(<font color=Maroon>0</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setgraphmode(<font color=Maroon>2</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;display_cordinate(DARKGRAY,WHITE); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Translate_to_Relative(poly,points,-Xdis,-Ydis); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fill_poly(poly,points,CYAN,RED); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getch(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;restorecrtmode(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>do</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;clrscr(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf(" <BR /> <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Do&nbsp;you&nbsp;Want&nbsp;to&nbsp;Switch&nbsp;to&nbsp;MENU&nbsp;[Y|N]:-&nbsp;"); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ch=getche(); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<font color=Blue>while</font>(&nbsp;(ch!=<font color=Maroon>Y</font>)&nbsp;&amp;&amp;&nbsp;(ch!=<font color=Maroon>N</font>)&nbsp;); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(ch==<font color=Maroon>Y</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Identity(Matrix); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Xdis=<font color=Maroon>0</font>-poly[<font color=Maroon>0</font>][<font color=Maroon>0</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Ydis=<font color=Maroon>0</font>-poly[<font color=Maroon>0</font>][<font color=Maroon>1</font>]; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Translate_to_Relative(poly,points,Xdis,Ydis); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>goto</font>&nbsp;Menu; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;closegraph(); <BR />&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>void</font>&nbsp;intgraph() <BR />&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;g=DETECT,d; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;initgraph(&amp;g,&amp;d,<font color=Maroon>"c:\tc\bgi"</font>); <BR />&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>void</font>&nbsp;fill_poly(<font color=Blue>int</font>&nbsp;poly1[][<font color=Maroon>2</font>],<font color=Blue>int</font>&nbsp;points,<font color=Blue>char</font>&nbsp;line_color,<font color=Blue>char</font>&nbsp;fill_color) <BR />&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;pol[<font color=Maroon>20</font>],i; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>char</font>&nbsp;str[<font color=Maroon>2</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=points;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pol[i*<font color=Maroon>2</font>]=poly1[i][<font color=Maroon>0</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pol[i*<font color=Maroon>2</font>+<font color=Maroon>1</font>]=poly1[i][<font color=Maroon>1</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pol[i*<font color=Maroon>2</font>]=poly1[<font color=Maroon>0</font>][<font color=Maroon>0</font>]; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pol[i*<font color=Maroon>2</font>+<font color=Maroon>1</font>]=poly1[<font color=Maroon>0</font>][<font color=Maroon>1</font>]; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(line_color); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setfillstyle(<font color=Maroon>8</font>,fill_color); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fillpoly(points+<font color=Maroon>1</font>,pol); <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(fill_color); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;settextstyle(<font color=Maroon>1</font>,<font color=Maroon>0</font>,<font color=Maroon>3</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=points;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sprintf(str,<font color=Maroon>"%c"</font>,i+<font color=Maroon>a</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;outtextxy(poly1[i][<font color=Maroon>0</font>],poly1[i][<font color=Maroon>1</font>],str); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>void</font>&nbsp;Identity(<font color=Blue>float</font>&nbsp;Matrix[<font color=Maroon>3</font>][<font color=Maroon>3</font>]) <BR />&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i,j; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=<font color=Maroon>2</font>;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(j=<font color=Maroon>0</font>;j&lt;=<font color=Maroon>2</font>;j++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>if</font>(i==j) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matrix[i][j]=<font color=Maroon>1</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>else</font> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Matrix[i][j]=<font color=Maroon>0</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;Create_poly(<font color=Blue>int</font>&nbsp;poly[][<font color=Maroon>2</font>]) <BR />&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;poly[<font color=Maroon>0</font>][<font color=Maroon>0</font>]=<font color=Maroon>200</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;poly[<font color=Maroon>0</font>][<font color=Maroon>1</font>]=<font color=Maroon>20</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;poly[<font color=Maroon>1</font>][<font color=Maroon>0</font>]=<font color=Maroon>300</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;poly[<font color=Maroon>1</font>][<font color=Maroon>1</font>]=<font color=Maroon>150</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;poly[<font color=Maroon>2</font>][<font color=Maroon>0</font>]=<font color=Maroon>130</font>; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;poly[<font color=Maroon>2</font>][<font color=Maroon>1</font>]=<font color=Maroon>280</font>; <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>return</font>&nbsp;<font color=Maroon>2</font>; <BR />&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>void</font>&nbsp;display_cordinate(<font color=Blue>char</font>&nbsp;bg_color,<font color=Blue>char</font>&nbsp;line_color) <BR />&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setbkcolor(bg_color); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setcolor(line_color); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=<font color=Maroon>640</font>;i+=<font color=Maroon>50</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(i,<font color=Maroon>0</font>,i,<font color=Maroon>480</font>); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=<font color=Maroon>480</font>;i+=<font color=Maroon>50</font>) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;line(<font color=Maroon>0</font>,i,<font color=Maroon>640</font>,i); <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rectangle(<font color=Maroon>0</font>,<font color=Maroon>0</font>,<font color=Maroon>639</font>,<font color=Maroon>479</font>); <BR />&nbsp;&nbsp;&nbsp;} <BR /> <BR />&nbsp;&nbsp;&nbsp;<font color=Blue>void</font>&nbsp;Translate_to_Relative(<font color=Blue>int</font>&nbsp;poly[][<font color=Maroon>2</font>],<font color=Blue>int</font>&nbsp;points,<font color=Blue>int</font>&nbsp;Xdis,<font color=Blue>int</font>&nbsp;Ydis) <BR />&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>int</font>&nbsp;i; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<font color=Blue>for</font>(i=<font color=Maroon>0</font>;i&lt;=points;i++) <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{ <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;poly[i][<font color=Maroon>0</font>]=poly[i][<font color=Maroon>0</font>]+Xdis; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;poly[i][<font color=Maroon>1</font>]=poly[i][<font color=Maroon>1</font>]+Ydis; <BR />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} <BR />&nbsp;&nbsp;&nbsp;} <BR /></div>   
             
             ]]>
        </string>

























    <string name="nothing">Hello i am nothing section</string>

</resources>
